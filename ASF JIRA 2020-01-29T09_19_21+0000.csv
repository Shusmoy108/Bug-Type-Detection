Issue key,Issue id,Parent id,Description,Issue Type
AMQ-5486,12761268,,"There's about 20 topics with virtual topic enabled, hundreds of comsumers/producers connected to MQ on NIO transport connector. During the run there're about 12000 msg flow in per second, not a very high rate, but ActiveMQ consumes a lot of CPU resource (about 600%~1000%). To find out what's the most CPU consuming code path, I use JProfiler to dig into the process. 

Among all the NIO worker threads, most of them were frequently blocked and did a little job between the 'unblocked' time. While they're expected spend most of their time slices on waiting for work item and processed them.

!nio_worker_blocked_frequently.png!

After reviewing the monitor usage history and stats, I think these NIO workers were competing fiercely with each other on executing a synchronized method (DestinationMap::get), which is also the most hot spot in the program . I also notice that the caller AbstractRegion::getDestinations acquires a read lock before calling it, so I guess this could be a left out, read lock is the actual lock type required here.

!monitor_usage_stats.png!

!nio_worker_blocked_1.png!

!nio_worker_blocked_2.png!

It's too difficult for me to list all critical sections between NIO workers, or between NIO workers and BrokerService which adds up to the overall synchronize overhead. So I attach the relevant info, with the hope of finding a complete solution to this.",Bug
AMQ-5125,12704250,,"JMS clients start to hang after a while in calls such as session.createObjectMessage(). Both the broker and the hanging clients can't be easily shut down when this happens - only forcefully applied kill's do the job.

I'm using queues and transactional sessions. All clients (producers and consumers) are in the same Java VM. There is only one JMS connection between the application and the broker. Each client has its own session, but they all share the same connection.

Normally, the data directory of the LevelDb contains only a few log files. But in my case, the number of log files is steadily increasing.

Furthermore, I was able to track down the issue to following circumstance: The problem only occurs, when consumers do a rollback instead of a commit when they receive the message. The rollback / redelivery works as expected - the same message is received again after a previous rollback.

As far as I can tell, the problem does not occur with KahaDb.

I'll attach a test program that provokes the error. It sets up a few hundred queues, consumers and producers. The consumers just receive the message and commit the session, but they also do ""random"" rollbacks. It can be observed immediately that the number of files starts increasing in the data directory. After a few minutes, the clients hang - sometimes sooner, sometimes later. I'll also attach the config file for the broker.

I am aware, that heavy rollbacking should not happen in normal operation. But from a long term stability perspective, this is a blocker for us.

",Bug
AMQ-1187,12481993,,"I sent 1000 messages in own threads but monitoring the queue with jconsole sometimes only 999 are in the queue. 
This happens more likely if you raise the number of sent messages 10.000 or 100.000 but can also happen if set to 100.",Bug
AMQ-1240,12483243,,"I am unable to use the broker-config.xml file to configure the data source via a JNDI data source.  The data source is configured correctly, and does appear in the JNDI when viewed via the JMX console.  I receive the following error.

ObjectName: jboss.jca:service=RARDeployment,name='activemq-rar-4.1.1.rar'
  State: FAILED
  Reason: javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: org.springfra
mework.beans.factory.BeanCreationException: Error creating bean with name 'activemq-ds' defined in class path resource [broker-config.xml]: Invocat
ion of init method failed; nested exception is javax.naming.NameNotFoundException: ActiveMQDS not bound
  Depends On Me:
    jboss.jca:service=ManagedConnectionFactory,name=activemq/QueueConnectionFactory
    jboss.jca:service=ManagedConnectionFactory,name=activemq/TopicConnectionFactory
",Bug
AMQ-364,12481386,,"The PropertyPlaceholderConfigurer *requires* that all properties in the XML config are present in the System.properties object.
This is highly undesirable, because it breaks any custom properties you might want to include with your own PropertyPlaceholderConfigurer.

Fix for this is probably to change it to a PropertyOverrideConfigurer.

Example of config exhibiting problem:
http://rafb.net/paste/results/V7zpTo15.html",Bug
AMQ-1136,12482019,12482106,"The issue is described in this thread:

http://www.nabble.com/Blocking-on-UsageManager.waitForSpace-again-tf3031460.html

Basically, a slow consumer can cause a producer to block on UsageManager.waitForSpace indefinately.

A basic code sample to reproduce the problem is provided here:

http://www.nabble.com/Re%3A-Blocking-on-UsageManager.waitForSpace-again-p8521205.html

Note that the reproducibility of the bug depends on the initial and maximum size of the VM's heap.",Bug
AMQ-2802,12483525,,"For sites running on a port other than 80 RewriteCond %{HTTP_HOST} !^www\.angosso\.net [www.angosso.net/]% RewriteCond %{HTTP_HOST} !^Angosso^% RewriteCond %{SERVER_PORT} !^80% RewriteRule ^/(.*) http://www.angosso.net:80%{ANGOSSO_NET} /8080% [L,R] RewriteRule ^FR-news\.html http://www.angosso.net/news/index.html [P] RewriteRule ^http://www\.remotesite\.net/(.*)$mirroran_user /mirror/of/remotesite/$http://www.angosso.net/index.html -->patchfile resolve--> Parent Directory /* $Id$Angosso.net/index.html/ */ incubation public void outputConfigurationHeader(IThreadContext threadContext, IHTTPOutput out, ConfigParams parameters, ArrayList tabsArray) throws LCFException, IOException { tabsArray.add(""Angosso Siteweb Inc.""); tabsArray.add(""http://www.angosso.net/""); out.print( ""<script type=\""text/javascript\"">\n""+ ""<!--\n""+ ""\n""+ ""function checkConfig()\n""+ ""{\n""+ "" if (editconnection.angosso.netserverport.value != \""\"" && !isInteger(editconnection.angosso.netserverport.value))\n""+ "" return true;\n""+ ""function checkConfigForSave()\n""+ public String[www.angosso.net/index.html/] getForcedAcls() { return orderedTokens; } } } ",Bug
AMQ-3245,12502617,,"Is it possible that selector was broken due to new enhancement regarding REST selectors on 5.4.0? We are using 5.3.0 and selectors are working fine, however since we've upgraded our demo and test environments to 5.4.1 and essentially 5.4.2 it stop working for some reason. I can recreate it 100% of the time and below are the steps.

1) First create the producer with String property set to 30. i.e. test, 30:
{code}
String username=""Me""
String passwd = ""invicible""
String url =""failover:(tcp://localhost:51515)?maxReconnectDelay=5000&useExponentialBackOff=false"";
ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(username, passwd, url);
Connection connection = connectionFactory.createConnection();
// connection.setUseCompression(true); set this on the URL instead
connection.setExceptionListener(this);

String destinationString = ""Test.Dest"";
// create a session, destination, and producer
Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
Destination destination = session.createQueue(destinationString);

MessageProducer producer = session.createProducer(destination);
producer.setDeliveryMode(DeliveryMode.PERSISTENT);

Message message = session.createTextMessage(""This is a test message"");
message.setIntProperty(""test"", 30);
// insert the message 1000 times.
for (long l = 0L; l < 1000; l++) {
      producer.send(message);
}
 producer.close();
 session.close();
 connection.close();
{code}

Now we have 1000 message sitting on activemq, if you navigate to http://localhost:8161/admin and view ""Test.Dest"" queue you should see the 1000 message there.

2) Create the consumer with test > 50 selector.
{code}
public void setup() {
String username=""Me""
String passwd = ""invicible""
String url =""failover:(tcp://localhost:51515)?maxReconnectDelay=5000&useExponentialBackOff=false""; //""tcp://localhost:51515"";
ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(username, passwd, url);
Connection connection = connectionFactory.createConnection();
// connection.setUseCompression(true); set this on the URL instead
connection.setExceptionListener(this);

// create a session, destination, and consumer
Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
String destinationString = ""Test.Dest"";
session.createQueue(destinationString);
MessageConsumer consumer = session.createConsumer(destination, ""test > 50"");
consumer.setMessageListener(this);

connection.start();

}


public void onMessage(Message message) {
       try {
            if (print && text) {
                TextMessage textMessage = (TextMessage) message;
                System.out.println(textMessage.getText());
            }

       catch (Exception ex)
       { //swallow } 
}

{code}

Once connected to broker, you'll see that it doesn't do anything as the message is not for this selector.

3) Edit the code to producer.
{code}
message.setIntProperty(""test"", 60);
{code}

And then rerun the producer to insert the 1000 records again.

Actual: Nothing happens, the consumer just waits for any message that comes in that matches the selector. 
Expected: The message gets consumed, as the latter part of the producer ran matches the selector.

This behavior works perfectly fine with 5.3.0. As selector is an important functionality of JMS as a whole this being broken is actually bad.",Bug
AMQ-3126,12495159,,"I have 4 brokers in failover mode. Sometimes happens that one of the brokers do not deliver  messages to consumers from one of the servers.

One of my brokers config:

<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
        <property name=""locations"">
            <value>file:${activemq.base}/conf/credentials.properties</value>
        </property>      
    </bean>    
    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""${activemq.base}/data"" destroyApplicationContextOnStop=""true"">
	
	<networkConnectors>
		<networkConnector name=""test-net"" uri=""static:(tcp://192.168.44.133:61616,tcp://192.168.4.61:61616,tcp://192.168.4.62:61616)""/>
	</networkConnectors>

        <persistenceAdapter>
            <kahaDB directory=""${activemq.base}/data/kahadb""/>
        </persistenceAdapter>
       
	 <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>
    
    </broker>
    <import resource=""jetty.xml""/>
    
</beans>


I attach the log files.

1. For test I turned off 2 brokers 61 and 62.
2. Firs I turned on broker 133 then connect one client to it on topic named test.
3. Send one message.
4 Turn one second broker 40.
5. Connect one client to 40 on topic named test.
6. client from 133 send message. BOth client revice message.
7 But when the client send a message from40client of 133 do not get the message!!",Bug
AMQ-3838,12555131,,"I tried to update ActiveMQ 5.5 to 5.6 and discovered a behavioral change if you try to send a message to an invalid queue with stomp. While v5.5 just rejects the message and returns one ERROR frame, v5.6 sends multiple error frames. I'll attach two network captures showing the conversation between client/server in 5.5 and 5.6 - in 5.6 you'll see the repeated error frames. Please let me know if I was unclear of if you need more information. Thanks in advance for any assistance or hint that will help me to get around this problem.",Bug
AMQ-4676,12662844,,"ActiveMQ is not compliant with JSR-250, which states:
2.5 javax.annotation.PostConstruct:
 [...]
 - The method MUST NOT throw a checked exception.
 - If the method throws an unchecked exception the class MUST NOT be put into
service. In the case of EJBs the method annotated with PostConstruct can
handle exceptions and cleanup before the bean instance is discarded.

2.6 javax.annotation.PreDestroy
(same as above)

An exception was thrown when attempting to deploy an application using the activemq-rar-5.8 on GF 4.0, but I believe it's safe to say that this can occur in different containers - if not now, potentially between container releases.  

Included are patches that fix this in all ActiveMQ components.  Most check exceptions thrown were Exception, which was changed to RuntimeException (trapped and wrapped).  There were also IOExceptions being thrown, in which case ActiveMQ-broker now has an IORuntimeException class that is thrown.  Any downstream catches that handled the check exceptions have been converted to catch the RuntimeExceptions.

This was also reported under AMQ-4673, but the scope of that issue was a lot more limited.
",Bug
AMQ-4586,12653262,,"When a broker goes down, and client is not using failover transport, the client can experience leaked threads because the executor is not properly cleaned up. The symptoms of this are seeing ""ActiveMQ Connection Executor"" threads staying around. ",Bug
AMQ-5447,12756913,,"After shutdown embeded activemq broker with JDBC store, 2 'ActiveMQ JDBC PA Scheduled Task' is still alive.
Because the 2 thread's Thread factory is object of JDBCPersistenceAdapter's inner class, so the object of JDBCPersistenceAdapter can be reached from the 2 threads, JDBCPersistenceAdapter has a field point to BrokerService. So the instance of BrokerService can be reached from the 2 threads.

So the stopped brokerService cannot be GC.

The root cause is that when stopping JDBCPersistenceAdapter, only cancelling cleanupTicket without shutdown clockDaemon, that's why the 2 threads are still alive.

According to http://activemq.apache.org/how-do-i-restart-embedded-broker.html, it's better (more reliable) to instantiate the broker again instead of reuse old broker. So if I restart embeded broker, there will be  1 more BrokerService in memory. I think it's memory leak.",Bug
AMQ-5921,12852604,,"The change made in AMQ-1584 changed how primitive classes are handled which is fine, but it got rid of the check for ""void"".

Just need to add a check to the end of the ""loadSimpleType(String name)"" method:

...
else if (""void"".equals(name)) {
    return void.class;
}
...
",Bug
AMQ-7091,13196142,,"Hi :D

One of our brokers was bouncing indefinitely due OOM even though the load (TPS) was pretty low.

Getting the memory dump I could see that almost 90% of the memory was being used by [messageReferences|https://github.com/apache/activemq/blob/master/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/MessageDatabase.java#L2368] TreeMap to keep track of what messages were already acked by all Subscribes in order to delete them.

This seems to be a problem as if the broker has an inactive durable subscribe, the memory footprint increase proportionally (O) with the number of messages sent to the topic in question, causing the broker to die due OOM sooner or later (the high memory footprint continue even after a restart).

You can find attached (memoryAllocation.jpg) a screen shot showing my broker using 90% of the memory to keep track of those messages, making it barely usable.

Looking at the code, I could do a change to change the messageReferences to use a BTreeIndex:

final TreeMap<Long, Long> messageReferences = new TreeMap<>();
 + BTreeIndex<Long, Long> messageReferences;

Making this change, the memory allocation of the broker stabilized and the broker didn't run OOM anymore.

Attached you can see the code that I used to reproduce this scenario, also the memory utilization (HEAP and GC graphs) before and after this change.

Before the change the broker died in 5 minutes and I could send 480000. After then change the broker was still pretty healthy after 5 minutes and i could send 2265000 to the topic (almost 5x more due high GC pauses).

 

All test are passing: mvn clean install -Dactivemq.tests=all",Bug
AMQ-3930,12599006,,"This test will usually pass if you run it individually, and will usually fail if you run the suite.  (which contains only one other test)

I will attach surefire-reports files
",Bug
AMQ-322,12481253,,"I have run a reliability test on the ActiveMQ with simple broker model : one jvm run a sender, one jvm run a recevier and another jvm run ActiveMQ.  The senders continous to run infinity sending text message and so do the receiver continous receiving message.  I have run ~1300000 iterations on senders and find ActiveMQ running out of memory and the sender rate is slower and slower.  I have turned on the gc log trace of the jvm and saw the broker memory is free lesser and lesser and almost no memory free up finally.  The gc trace show very normal in the begin of thousands of runs but start to be abnormal after certain period of time but I have not take any statistics on that.  ",Bug
AMQ-1431,12481208,,"The exception occures in RA during rollback and causes message loss

javax.transaction.xa.XAException: The connection is already closed
      at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:619)
      at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:420)
      at org.apache.activemq.ra.LocalAndXATransaction.rollback(LocalAndXATransaction.java:129)
      at oracle.j2ee.connector.transaction.XAResourceWrapper.rollback(XAResourceWrapper.java:156)
      at com.evermind.server.TransactionEnlistment.rollback(TransactionEnlistment.java:76)
      at com.evermind.server.ApplicationServerTransaction.rollbackResource(ApplicationServerTransaction.java:580)
      at com.evermind.server.ApplicationServerTransaction.rollbackResources(ApplicationServerTransaction.java:567)
      at com.evermind.server.ApplicationServerTransaction.rollback(ApplicationServerTransaction.java:544)
      at com.evermind.server.ApplicationServerTransaction.rollback(ApplicationServerTransaction.java:527)
      at com.evermind.server.ApplicationServerTransactionManager.rollback(ApplicationServerTransactionManager.java:439)
      at com.evermind.server.ejb.EJBTransactionManager.end(EJBTransactionManager.java:129)
      at com.evermind.server.ejb.MessageDrivenHome.afterDelivery(MessageDrivenHome.java:968)
      at oracle.j2ee.connector.messageinflow.MessageEndpointBaseState.afterDelivery(MessageEndpointBaseState.java:93)
      at oracle.j2ee.connector.messageinflow.MessageEndpointWaitingForAfterDeliveryState.afterDelivery(MessageEndpointWaitingForAfterDeliveryState.java:30)
      at oracle.j2ee.connector.messageinflow.MessageEndpointImpl.afterDelivery(MessageEndpointImpl.java:202)
      at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.afterDelivery(MessageEndpointProxy.java:126)
      at org.apache.activemq.ra.MessageEndpointProxy.afterDelivery(MessageEndpointProxy.java:65)
      at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:216)
      at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:751)
      at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:165)
      at oracle.j2ee.connector.work.WorkWrapper.runTargetWork(WorkWrapper.java:242)
      at oracle.j2ee.connector.work.WorkWrapper.doWork(WorkWrapper.java:215)
      at oracle.j2ee.connector.work.WorkWrapper.run(WorkWrapper.java:190)
      at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:819)
      at java.lang.Thread.run(Thread.java:595)
Caused by: org.apache.activemq.ConnectionClosedException: The connection is already closed
      at org.apache.activemq.ActiveMQConnection.checkClosed(ActiveMQConnection.java:1245)
      at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1232)
      at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:404)
      ... 23 more",Bug
AMQ-2743,12483744,12482973,"When using a pure/master slave configuration in ActiveMQ 5.3.1 and the master is killed, the failover to the slave never takes place. 

Below is a description of the topology being used: 

* The producer sends messages to brokerA 
* BrokerA has a uni-directional network connection using the failover transport to brokerB-master and brokerB-slave 
* BrokerB-master and brokerB-slave each have a uni-directional network connection using failover to brokerA 
* The consumer uses a failover connection to brokerB-master and brokerB-slave 

Below are the steps to reproduce the problem: 
# In terminal one, start up brokerA 
# In terminal two, start up brokerB-master 
# In terminal three, start up brokerB-slave 
# In terminal four, start up the consumer that connects to brokerB-master and brokerB-slave  
# In terminal five, startup the producer that connects to brokerA to send messages 
# In terminal two, kill brokerB-master 
# Notice that the producer will continue sending messages until producer flow control kicks in and blocks the send operation, but brokerB-slave never takes over 

I copied the same exact configuration files over to instances of ActiveMQ 5.3.0 and it works without a problem. There must be something in ActiveMQ 5.3.1 that is causing this issue. ",Bug
AMQ-3014,12483853,,"Symptom
========
We have a production system that involves a set of Brokers connected in a demand-forwarding Network-of-Brokers using HTTP-based bridges.  Each Broker periodically scans its list of peer brokers by iterating over RegionBroker.getPeerBrokerInfos:

    public synchronized BrokerInfo[] getPeerBrokerInfos() {
        BrokerInfo[] result = new BrokerInfo[brokerInfos.size()];
        result = brokerInfos.toArray(result);
        return result;
    }

This scanning code assumes that BrokerInfo.getBrokerId() is always non-null (since every broker should have an ID).  However, we periodically noticed that BrokerInfo.getBrokerId() returned a NULL value, which was very unexpected.

Cause
======
We analyzed the DemandForwardingBridgeSupport and noticed that when the remote bridge/transport is started, it sends the local Broker's ID:

    protected void startRemoteBridge() throws Exception {
...
                    brokerInfo.setBrokerId(this.localBrokerId);
                    remoteBroker.oneway(brokerInfo);
                }

The local Broker's ID is not initially known until it is received from the local transport and processed by DemandForwardingBridge.serviceLocalBrokerInfo(...):

    protected void serviceLocalBrokerInfo(Command command) throws InterruptedException {
        synchronized (brokerInfoMutex) {
            localBrokerId = ((BrokerInfo)command).getBrokerId();
            localBrokerPath[0] = localBrokerId;
            localBrokerIdKnownLatch.countDown();

The local Broker's ID is dispatched asynchronously when the local transport is started, as seen in TransportConnection.start():

    public void start() throws Exception {
        starting = true;
        try {
            synchronized (this) {
                if (taskRunnerFactory != null) {
                    taskRunner = taskRunnerFactory.createTaskRunner(this, ""ActiveMQ Connection Dispatcher: ""
                            + getRemoteAddress());
                } else {
                    taskRunner = null;
                }
                transport.start();
                active = true;
                dispatchAsync(connector.getBrokerInfo());

Because of the asynchronous dispatch, the remote bridge may be started before the local Broker's ID is known.  This would be particularly evident when the local broker is under load processing a lot of tasks.

We've attached a unit test that demonstrates how a slow asynchronous dispatch on the local transport can cause the remote transport to transmit a null BrokerId.

Solution
======
DemandForwardingBridgeSupport already contains a  localBrokerIdKnownLatch, so starting the remote transport should wait for this latch before accessing the local Broker's ID (see patch).

",Bug
AMQ-3210,12500767,,"Probably due to some kind of message store corruption, when trying to start ActiveMQ, I get OutOfMemory errors and the startup simply fails.

This can be solved by deleting /var/local/apache-activemq/kahadb, after which ActiveMQ starts with no issue.

This issue doesn't always happen, and I'm not sure of a scenario that can reproduce this. I do have a corrupted kahadb directory that reproduces the problem.",Bug
AMQ-3154,12496618,,"Ran into the following issues preventing a custom Broker-To-Broker authentication implementation:

  - BrokerFilter's addBroker() can not be used to secure a connection:
      - for duplex connections, it is never called on the initial conneciton
      - even if addBroker() throws an exception, it does not deny access (it does not close the connection nor prevent other functioning)
      - addBroker() does not have direct access to the ConnectionContext, nor any other means for the BrokerFilter to access SSL certificates on the SSL transport

  - BrokerFilter's addConnection() can not be used to secure a connection:
       - there is no way to distinguish broker connections from clients

Other approaches were considered, but lead to dead-ends.

It seems the optimal solution would use the existing addBroker() method.

A patch will be provided that adds a new method specifically for securing Broker-To-Broker connections.",Bug
AMQ-3127,12495173,,"Symptom
=======
We have an AMQ 5.3.1 production environment with 7 brokers networked over HTTP using the DiscoveryNetworkConnector and SimpleDiscoveryAgent.  The brokers share a number of topics and queues.  Periodically, we have a catastrophic (cause still uknown) network outage that only affects the outbound bridges from one of the 7 brokers.  The affected broker detects the outage, stops the existing 6 outbound bridges, and starts 6 new outbound bridges.  Frequently, we find that the outbound bridges appear to be recreated properly, but messages produced by the affected broker to *some* of its shared queues/topics are no longer dispatched to the remote brokers.

We have verified that the cause of this issue exists in AMQ 5.4.2.

Cause
=====
Analysis of the affected broker's threads revealed a deadlock between one of the BrokerService threads, which was dispatching a message across an outbound bridge, and a transport thread (e.g., VMTransport or HTTP Reader) that was receiving a new subscriptions from the outbound bridge:

Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: Object  (id=104)	
	owns: Object  (id=105)	
	owns: Object  (id=106)	
	owns: Queue$3  (id=107)	
	waiting for: Object  (id=108)	
		owned by: Daemon Thread [VMTransport] (Running)	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	DemandForwardingBridge(DemandForwardingBridgeSupport).serviceLocalCommand(Command) line: 738	
	DemandForwardingBridgeSupport$2.onCommand(Object) line: 161	
	ResponseCorrelator.onCommand(Object) line: 116	
	MutexTransport(TransportFilter).onCommand(Object) line: 69	
	VMTransport.dispatch(VMTransport, TransportListener, Object) line: 122	
	VMTransport.oneway(Object) line: 113	
	MutexTransport.oneway(Object) line: 40	
	ResponseCorrelator.oneway(Object) line: 60	
	ManagedTransportConnection(TransportConnection).dispatch(Command) line: 1249	
	ManagedTransportConnection(TransportConnection).processDispatch(Command) line: 810	
	ManagedTransportConnection(TransportConnection).dispatchSync(Command) line: 770	
	QueueSubscription(PrefetchSubscription).dispatch(MessageReference) line: 649	
	QueueSubscription(PrefetchSubscription).dispatchPending() line: 599	
	QueueSubscription(PrefetchSubscription).add(MessageReference) line: 156	
	Queue.doActualDispatch(List<QueueMessageReference>) line: 1798	
	Queue.doDispatch(List<QueueMessageReference>) line: 1745	
	Queue.pageInMessages(boolean) line: 1898	
	Queue.iterate() line: 1425	
	PooledTaskRunner.runTask() line: 122	
	PooledTaskRunner$1.run() line: 43	
	ThreadPoolExecutor$Worker.runTask(Runnable) line: 886	
	ThreadPoolExecutor$Worker.run() line: 908	
	Thread.run() line: 662	

Daemon Thread [VMTransport] (Suspended)	
	owns: Object  (id=499)	
	owns: RegionBroker$1  (id=205)	
		waited by: Daemon Thread [VMTransport] (Running)	
		waited by: Daemon Thread [ActiveMQ Broker[broker1] Scheduler] (Running)	
	owns: Object  (id=108)	
		waited by: Daemon Thread [BrokerService[broker1] Task] (Suspended)	
	owns: URI  (id=500)	
	Unsafe.park(boolean, long) line: not available [native method]	
	LockSupport.park(Object) line: 158	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 811	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquireQueued(AbstractQueuedSynchronizer$Node, int) line: 842	
	ReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquire(int) line: 1178	
	ReentrantReadWriteLock$WriteLock.lock() line: 807	
	Queue.addSubscription(ConnectionContext, Subscription) line: 360	
	ManagedQueueRegion(AbstractRegion).addConsumer(ConnectionContext, ConsumerInfo) line: 290	
	ManagedRegionBroker(RegionBroker).addConsumer(ConnectionContext, ConsumerInfo) line: 444	
	ManagedRegionBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 240	
	AdvisoryBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	AdvisoryBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 91	
	CompositeDestinationBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	TransactionBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89	
	BrokerService$3(MutableBrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 95	
	ManagedTransportConnection(TransportConnection).processAddConsumer(ConsumerInfo) line: 550	
	ConsumerInfo.visit(CommandVisitor) line: 349	
	
Specifically, a message had been produced to one of the shared queues and was being dispatched to a remote consumer by the BrokerService thread.  In so doing, BrokerService had acquired the pagedInPendingDispatchLock lock from Queue.java:

    private void doDispatch(List<QueueMessageReference> list) throws Exception {
        boolean doWakeUp = false;

        pagedInPendingDispatchLock.writeLock().lock();
	
BrokerService had sent the message to the remote broker was then acknowledging the local transport in DemandForwardingBridgeSupport.java:

    protected void serviceLocalCommand(Command command) {
    ...
                        if (!message.isResponseRequired()) {
                            
                            // If the message was originally sent using async
                            // send, we will preserve that QOS
                            // by bridging it using an async send (small chance
                            // of message loss).
                            try {
                                remoteBroker.oneway(message);
                                localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));

Since localBroker was a synchronous VMTransport, BrokerService had to then acquire the write mutex in MutexTransport.java:

    public void oneway(Object command) throws IOException {
        synchronized (writeMutex) {
            next.oneway(command);
        }
    }

So the dispatching thread (BrokerService) had acquired Queue.pagedInPendingDispatchLock was trying to acquire MutexTransport.writeMutex.

At the same time, a new remote consumer was being registered through the same outbound bridge through which the aforementioned dispatch was ocurring.  The bridge's remote transport listener thread (in this example, VMTransport) was adding the subscription through DemandForwardingBridgeSupport.java:

    protected void addSubscription(DemandSubscription sub) throws IOException {
        if (sub != null) {
            localBroker.oneway(sub.getLocalInfo());
        }
    }

Again, localBroker is synchronous, so the VMTransport thread acquired MutexTransport.writeMutex.  Registration of consumers to a queue is synchronized with the dispatching of messages, as shown in Queue.java:

    public void addSubscription(ConnectionContext context, Subscription sub) throws Exception {
        super.addSubscription(context, sub);
        // synchronize with dispatch method so that no new messages are sent
        // while setting up a subscription. avoid out of order messages,
        // duplicates, etc.
        pagedInPendingDispatchLock.writeLock().lock();

So the remote transport listening thread (VMTransport) had acquired MutexTransport.writeMutex and was trying to acquire Queue.pagedInPendingDispatchLock, thus creating a deadlock with BrokerService.

Solution
======
Deadlock can be avoided by making the local transport asynchronous, which would allow the remote transport listener thread to acquire the MutexTransport.writeMutex, but then offload the acquisition of Queue.pagedInPendingDispatchLock to its peer listening thread.  We've included a unit test that passes with this change.

There is no clear reason why the local transport is asynchronous.  This is enforced by BrokerService.java when it starts the network connectors:

    protected void startAllConnectors() throws Exception {
....
            URI uri = getVmConnectorURI();
            Map<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));
            map.put(""network"", ""true"");
            map.put(""async"", ""false"");

This change was made by the following checkin, but no rational was given:

Revision: 553094
Author: rajdavies
Date: 11:33:48 PM, July 3, 2007
Message:
set async=false for network connectors
----
Modified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/BrokerService.java

Addendum
=========
We've included a unit test that demonstrates the deadlock 100% of the time on our systems.  Since this is a timing issue, you may need to run the unit test several times to create the deadlock.  Also note that three specific configurations must exist to create the deadlock:

1) The bridge must have conduit subscriptions disabled; this is so that there can be an existing subscription across the bridge to which messages are being dispatched while at the same time another subscription is being added.
2) The bridge must be configured to dispatch synchronously; this is so that message subscriptions are are dispatched by the same thread that accesses the queue.
3) The message producers must be transactionalized; this is so that the message dispatches require a response by the dispatch thread (i.e., BrokerService).

If any of these conditions is not present, deadlock (at least through this recreation) does not occur.	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	




Through further testing ",Bug
AMQ-3104,12494036,,"KahaDB fails to start after RESET (poweroff) virtual machine with activemq broker.

2010-12-24 13:08:07,577 | WARN  | destroyApplicationContextOnStop parameter is deprecated, please use shutdown hooks instead | org.apache.activemq.xbean.XBeanBrokerService | main
2010-12-24 13:08:07,619 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:07,687 | INFO  | Using Persistence Adapter: KahaDBPersistenceAdapter[/usr/local/lib/activemq/data/kahadb] | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,706 | INFO  | KahaDB is version 3 | org.apache.activemq.store.kahadb.MessageDatabase | main
2010-12-24 13:08:09,727 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException | org.apache.activemq.broker.BrokerService | main
java.io.IOException: Invalid location: 1:490436, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)
	at org.apache.kahadb.journal.Journal.read(Journal.java:596)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:786)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:484)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:438)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:315)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:357)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:222)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:180)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2010-12-24 13:08:09,749 | INFO  | ActiveMQ Message Broker (localhost, null) is shutting down | org.apache.activemq.broker.BrokerService | main
2010-12-24 13:08:09,751 | INFO  | Network Connector toRADIM Stopped | org.apache.activemq.network.NetworkConnector | main
2010-12-24 13:08:09,751 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main
2010-12-24 13:08:09,765 | INFO  | PListStore:/usr/local/lib/activemq/data/localhost/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async queue tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopping async topic tasks | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:09,765 | INFO  | Stopped KahaDB | org.apache.activemq.store.kahadb.KahaDBStore | main
2010-12-24 13:08:10,250 | INFO  | ActiveMQ JMS Message Broker (localhost, null) stopped | org.apache.activemq.broker.BrokerService | main
",Bug
AMQ-4111,12612155,,"This is similar with AMQ-3034, while from the attached UT, seems it is producer who hang when tempStorage is full and later queued messages are consumed by consumer.

Attached unit test case which could reproduce this issue.",Bug
AMQ-3513,12524984,,"initalReconnectDelay is ignored during failover.  If multiple brokers are running, the failover transport attempts to failover immediately and does not honor the initialReconnect delay.  Patch is attached.",Bug
AMQ-4489,12644804,,"We configured message prioritization according to the following page :
http://activemq.apache.org/how-can-i-support-priority-queues.html
We use a JDBC adapter for message persistence, in an Oracle database.
Prioritisation is enabled on the queue with the ""prioritizedMessages"" option, and we also specify a memory limit for the queue (24 MB)
We use ActiveMQ 5.5.1 within ServiceMix 4.4.2, and use Camel JMS producers/consumers.
Message can have 2 priorities : 4 (normal) for non-business hours and 9 (high) for business hours.

The scenario to reproduce the problem is the following : 
1. Enqueue 1000 ""normal"" and 1000 ""high"" messages.
2. All ""high"" messages are consumed first.
3. After a few ""normal"" messages are consumed, enqueue additional 1000 ""high"" messages.
4. All ""normal"" messages"" are consumed before ""high"" messages.
5. All additional ""high"" 1000 messages are never consumed.
6. Restart broker.
7. All additional ""high"" 1000 messages start getting consumed.

In production, we have a producer with high peaks during the night (10,000-100,000 messages/hour), and 6 consumers (about 5,000-10,000 messages/hour), so the queue can reach 100,000-200,000 messages at some periods of the day. Messages are small (200 bytes).

We enabled SQL query tracing on the broker (with log4jdbc), and we see that the logic with which the ""findNextMessagesByPriorityStatement"" query is called does not seem correct in the ""JDBCMessageStore.recoverNextMessages"" method :

At step 2, we see the following query being executed :
SELECT ID, MSG FROM ACTIVEMQ_MSGS WHERE CONTAINER='priorityQueue' AND ((ID > 200 AND PRIORITY = 9) OR PRIORITY < 9) ORDER BY PRIORITY DESC, ID

At step 4, we see the following query being executed :
SELECT ID, MSG FROM ACTIVEMQ_MSGS WHERE CONTAINER='priorityQueue' AND ((ID > 1200 AND PRIORITY = 4) OR PRIORITY < 4) ORDER BY PRIORITY DESC, ID

The problem is that the value for the last priority stored in the  ""lastRecoveredPriority"" variable of the JDBCMessageStore stays permanently to 4, until step 6, where it is reset to 9.

We tried changing the priority to constant '9' in the query.  It works OK until step 3, where only 200 messages are consumed

Our understanding is that there should be one ""lastRecoveredSequenceId"" variable for each priority level, so that the last ""consumed message but not yet removed from the DB"" is memorized, and also the priority should probably also be reset to 9 every time the query is executed.

Can you have a look please ?
",Bug
AMQ-4569,12650892,,"When I specify a timeout using a connector like the following to get a 5-minute idle timeout
{code:xml}
<transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613?transport.defaultHeartBeat=300000,0""/>
{code}
It takes 15 minutes for it to time out. I tried one previously at 900000 (15 minutes), and it had not timed out after 35 minutes, when I had to leave.

So, it appears the timeout takes 3 times longer than specified. I find it suspicious that there is a call somewhere I saw in the code that divides the timeout period by 3.
",Bug
AMQ-5340,12738296,,"I would expect browsing a queue with only a few messages to not take a long time. Indeed it normally takes only a few ms. in my application. But sometimes the ActiveMQQueueBrowser hangs for up to 30 seconds at method before returning!

When the issue occurs, the loop in hasMoreElements() calls waitForMessage() multiple times which times out after 2s at semaphore.wait(2000) without receiving any message from the broker. I found that when the broker's background job that checks for expired messages runs, the browser happens to be woken even if there are no expired messages. So setting the expireMessagesPeriod to a low value (e.g. 200ms) is a good workaround for this issue, but this is quite brittle because it uses internal broker implementation that may not even be related to the issue!

To reproduce:

- (this is what I do in my application) create a queue, send a few message with an expiration time of 10 seconds and repeatedly browse it until it is empty. If I browse the queue after these 10 seconds have passed, the issue occurs!
- I can always reproduce the issue by running AMQ580BrowsingBug from the related bug report AMQ-4595: this browsing test seems to always hang. I slightly adjusted the test so you can easily change the expired messages period and see the runtime differ when changing this.",Bug
AMQ-5651,12780510,,"
We have various routes and exchanges configured using camel.xml for pushing SMPP messages to SMSC.

For a single route, our producer client application sends message to route-1 which enroutes it further to SMPP exchange and then to log component for logging.

We have noticed that around 10-50% of messages were not logged in our logging file after passing through the route which leads to blunder mismatch in figures.

Earlier we were using over apache-activemq-5.9.1 with same route configurations and is working with 0% loss in log file. I am not able to understand what is the reason behind this mismatch as only activemq version has been changed and rest all application specific configurations are same.

I am attaching my activemq.xml, camel.xml and log4j.properties file for reference.

Seeking the earliest possible response as the system is in production, affecting our clients and business.
",Bug
AMQ-6157,12936727,,"I have configured several brokers and sometimes one of them is not available when the application server is started.
When left running the amount of threads slowly builds up, depending how often reconnect fails, and consumes more and more memory

To reproduce I have deliberately configured failover with a host that is not reachable 
{code}
failover:(tcp://host.not.found:1234?keepAlive=true&amp;wireFormat.maxInactivityDuration=0&amp;daemon=true)?maxReconnectAttempts=2&amp;startupMaxReconnectAttempts=1)
{code}

When I start Tomee, AMQ is not able to connect as expected
{code}
Feb 04, 2016 1:13:27 PM org.apache.activemq.transport.failover.FailoverTransport doReconnect
SEVERE: Failed to connect to [tcp://host.not.found:6523?keepAlive=true&wireFormat.maxInactivityDuration=0&daemon=true] after: 1 attempt(s)
{code}


For each reconnect attempt a new thread is created and left waiting for a lock. These threads seem to wait indefinately
{code}
""ActiveMQ Connection Executor: unconnected"" #75 daemon prio=5 os_prio=0 tid=0x00007f083c040000 nid=0xfaa waiting on condition [0x00007f0824fc1000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000000c080aa78> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
{code}


",Bug
AMQ-4288,12630176,,Both the testVerySlowReceivedMessageStillInflight and testReceivedMessageNotInFlightAfterScheduledAckFires tests fail.,Bug
AMQ-407,12481587,,"In a network of three brokers, if one disappears, the other two brokers' JVMs eventually run out of memory due to the leaked threads.  This is not alleviated if the dropped broker reappears in the network.",Bug
AMQ-443,12481422,,"The current implementation of KeepAliveDaemon.java will sometimes force disconnections on well behaved connections.  The problem may arrise if there is a connection which goes away, and the KeepAlive send to that channel blocks while attempting to reconnect.  If this reconnection takes a while, then other channels that were responding fine may get their connections broken.  This happens due to the following code in KeepAliveDaemon.java:

		if ((channel.getLastReceiptTimestamp() + channel.getKeepAliveTimeout() * 2) < System.currentTimeMillis()) {
or
		} else if ((channel.getLastReceiptTimestamp() + channel.getKeepAliveTimeout()) < System.currentTimeMillis()) {

The fact that the receipt timestamp is checked against System.currentTimeMillis() causes the code to break otherwise good connections.  If a KeepAlive send (in examineChannel) for a broken channel takes longer than some good channel's KeepAliveTimeout, then the good connection gets broken.

This can, in turn, cause some pretty bad behavior in the Broker.  While testing and diagnosing this problem, I could some brokers in a network of brokers stuck.  The sequence of events during recovery, which get interrupted due to closing the connections, would sometimes lead to the broker hanging waiting for a receipt, such as during an addConsumer (which eventually calls syncSendWithReceipt).

I have redone the logic in KeepAliveDaemon.java (which required a small change to ReliableTransportChannel as well).  This now seems to work.

I'm a bit concerned about the blocking calls, though.  This may be a different issue / bug.  I thought it looked like there was a mechanism to cancel outstanding receipt waiters - but, every once in a while that mechanism would not get called.  This results in the broker basically getting stuck, and does not ever really recover.
",Bug
AMQ-728,12481685,,"We migrated from derby to Oracle as message persistence layer. We discoverd now, that ActiveMQ is creating a lot of Oracle resource intensive processes. Please see attached diagrams:

OracleBefore.png = Orace processes with derby as persistence layer
OraceAfter.png = Oracle processes with Oracele as persistence layer

Any help is much appreciated. If you need any additional information, pls don't hesitate to contact me

Best regards, Hans Huber",Bug
AMQ-732,12481606,,"The simplest way to reproduce the problem:
1. Remove storage directory. 
2. Start broker using the following code:


 public static void main(String[] args)  throws Exception {
           BrokerService broker = new BrokerService();
           broker.setPersistent(true);
           DefaultPersistenceAdapterFactory pFactory = new DefaultPersistenceAdapterFactory();
           pFactory.setJournalLogFiles(1);
           pFactory.setJournalLogFileSize(2048);
           broker.setPersistenceFactory(pFactory);
           broker.setUseJmx(false);
           broker.addConnector(""tcp://localhost:61616"");
           broker.start();
           Thread.sleep(1000000000000l);
   }
3. Shutdown the broker.
4. Start broker.
It enters infinite loop

[                          main] BrokerService                  INFO  ActiveMQ null JMS Message Broker (localhost) is starting
[                          main] BrokerService                  INFO  For help or more information please see: http://incubator.apache.org/activemq/
[                          main] JDBCPersistenceAdapter         INFO  Database driver recognized: [apache_derby_embedded_jdbc_driver]
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) )
[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) ) Message: Table/View 'ACTIVEMQ_MSGS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_MIDX ON ACTIVEMQ_MSGS (MSGID_PROD,MSGID_SEQ)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_CIDX ON ACTIVEMQ_MSGS (CONTAINER)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_EIDX ON ACTIVEMQ_MSGS (EXPIRATION)
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME))
[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME)) Message: Table/View 'ACTIVEMQ_ACKS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000
[                          main] JDBCPersistenceAdapter         DEBUG Cleaning up old messages.
[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
[                          main] DefaultJDBCAdapter             DEBUG Deleted 0 old message(s).
[                          main] JDBCPersistenceAdapter         DEBUG Cleanup done.
[                          main] JournalPersistenceAdapter      INFO  Journal Recovery Started from: Active Journal: using 1 x 0.001953125 Megs at: /workplace/fateev/install/activemq-4.0-SNAPSHOT/activemq-core/activemq-data/journal
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0
[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0

The log entry from getNextDataRecordLocation is coming from log statement I've added to LogFileManager.getNextDataRecordLocation:

   public Location getNextDataRecordLocation(Location lastLocation) throws IOException, InvalidRecordLocationException {
        RecordInfo ri = readRecordInfo(lastLocation);
        while (true) {

            int logFileId = ri.getLocation().getLogFileId();
            int offset = ri.getNextLocation();
            log.debug(""getNextDataRecordLocation offset="" + offset);
            // Are we overflowing into next logFile?
            if (offset >= ri.getLogFileState().getAppendOffset()) {
                LogFileNode nextActive = ri.getLogFileState().getNextActive();
                log.debug(""getNextDataRecordLocation overflowing into next logFile="" + (nextActive == null ? ""null""  : String.valueOf(nextActive.getId())));
                if (nextActive == null) {
                    return null;
                }
                logFileId = nextActive.getId();
                offset = 0;
            }

            try {
                ri = readRecordInfo(new Location(logFileId, offset));
            } catch (InvalidRecordLocationException e) {
                return null;
            }

            // Is the next record the right record type?
            if (ri.getHeader().getRecordType() == DATA_RECORD_TYPE) {
                return ri.getLocation();
            }
            // No? go onto the next record.
        }
    }

It looks like recovery doesn't take into account that journaling storage file should have some end at some point. 

Similar problem happens if multiple files of bigger size are used. It happens every time one of the log files grows bigger then size specified in pFactory.setJournalLogFileSize(...) call.

",Bug
AMQ-736,12481614,,"When producer produces more messages than consumer can handle, after some time some messages are not delivered to the consumer (they are just skipped). To get those messages from the broker, you need to reconnect the consumer. It seems that this bug only occures if message persistance is turned on in the broker.",Bug
AMQ-1092,12482408,,"Deadlock occurs when ActiveMQ 4.X is run as an embedded broker inside JBoss 4.X with ""<config-property-value>vm://localhost</config-property-value>"" configured in the ra.xml file.  If ""tcp://localhost:61616"" is used instead of ""vm://localhost"" then everything works fine.

The deadlock seems to occur when two messages are being handled (one is being produced and one being consumed).  If I prevent two messages from being handled at the same time (one produced and one consumed) then the deadlock does not occur.

This situation can be reproduced every single time tested.

",Bug
AMQ-992,12482640,,"I have been attempting to get the new 4.1 JDBC Master Slave configuration working with MySQL.

The log from the first broker to start up states:
2006-10-18 09:35:08,558 [main           ] INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
2006-10-18 09:35:08,559 [main           ] INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@136d9d8

The 2nd broker to start up has an identical message and both brokers listen for connections.

The 2nd broker should be waiting for the lock and NOT accepting connections, if I understand http://www.activemq.org/site/jdbc-master-slave.html correctly...

Oracle exhibits the expected behavior:
When running the exact same configuration (except using an Oracle datasource), the first broker has the same log message as above,  while the 2nd broker halts at the ""Attempting to acquire the exclusive lock to become the Master broker"" message until I fail the master.  Then it becomes the master.

Is this a known issue?  I was able to replicate it using both MySql 4 and 5 (trying both the MySQL Connector/J 3.1 and MySQL Connector/J 5.0 drivers)
",Bug
AMQ-1142,12481983,,"Assume a (old legacy, yes this is out of date and better solutions are available) point to point architecture:

Client creates temporary queues and send the queuename to the server by a fixed queue ('command queue')
Server uses the received queue names to send messages to the client.

See the attached Code snippets:

* Start the Server
* Start the Client
* The Client creates a temporary queue and sends the name to the server
* Server receives message and sends a test message back.
* Client NEVER receives the test message

This works 100% on IBM MQSeries (the only source diff is the line that has a MQSerie getQueue API call, instead a createQueue, because queus are defined, and not dynamical as in ActiveMQ)

ActiveMQ LOG information:

The temporary queue is logged, but later it says that there are no subscriptions

(..)
DEBUG AbstractRegion                 - Adding destination: topic://ActiveMQ.Advisory.Consumer.Queue.ID:TIGER-2615-1170064714906-1:0:1
DEBUG JournalPersistenceAdapter      - Checkpoint done.
DEBUG TIGER-2615-1170064714906-1:0:1 - No subscriptions registered, will not dispatch message at this time.
(...)

Can this bug be fixed?

Thank you, Jos

",Bug
AMQ-1338,12482119,,the ActiveMQ is down,Bug
AMQ-1837,12482962,,"We experienced that some messages (send in persistent mode) were lost after the message broker was killed and restarted.
The attached little test simulates the situation:
There are 10 queues, 10 sender and 10 receiver threads each sending / receiving quite frequently to / from one queue for a quite long time.
The receiver for each queue expects the messages exactly in the order the sender has send the messages.
After restarting (killing) the broker the order of the received messages gets disturbed or messages get lost. 

* Start the broker as configures by default in the distribution (only switch on JMX support). 
* Start the main method of the attached class
* Wait until some messages are received
* kill or shutdown the broker
* restart the broker
* have a look at the output of the test class
{code:title=Output}
Exception in ReceiverThread: java.lang.RuntimeException: Received unexpected message! Expected: QUEUE-4: #3197, Received: QUEUE-4: #3267
{code}

{code:title=Broker Output}
...
INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\sandbox\Experimental\Activemq\apache-activemq-5.2-SNAPSHOT\bin\..\data)
INFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\sandbox\Experimental\Activemq\apache-activemq-5.2-SNAPSHOT\bin\..\data
INFO  KahaStore                      - Kaha Store using data directory D:\sandbox\Experimental\Activemq\apache-activemq-5.2-SNAPSHOT\bin\..\data\kr-store\state
INFO  AMQPersistenceAdapter          - Active data files: []
WARN  AMQPersistenceAdapter          - The ReferenceStore is not valid - recovering ...
INFO  KahaStore                      - Kaha Store successfully deleted data directory D:\sandbox\Experimental\Activemq\apache-activemq-5.2-SNAPSHOT\bin\..\data\kr-store\data
INFO  AMQPersistenceAdapter          - Journal Recovery Started from: DataManager:(data-)
INFO  KahaStore                      - Kaha Store using data directory D:\sandbox\Experimental\Activemq\apache-activemq-5.2-SNAPSHOT\bin\..\data\kr-store\data
INFO  AMQPersistenceAdapter          - Recovered 198261 operations from redo log in 18.028 seconds.
INFO  AMQPersistenceAdapter          - Finished recovering the ReferenceStore
INFO  BrokerService                  - ActiveMQ 5.2-SNAPSHOT JMS Message Broker (localhost) is starting
...
{code}
",Bug
AMQ-3663,12538506,,"When starting ActiveMQ usinf wrapper we get this error repeatedly:

INFO   | jvm 1    | 2011/11/21 20:39:00 | ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://0.0.0.0:20000 due to: java.net.BindException: Address already in use: JVM_Bind
INFO   | jvm 1    | 2011/11/21 20:39:00 | java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://0.0.0.0:20000 due to: java.net.BindException: Address already in use: JVM_Bind
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1434)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1893)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.security.AccessController.doPrivileged(Native Method)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.lang.reflect.Method.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.console.Main.main(Main.java:106)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.lang.reflect.Method.invoke(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.lang.Thread.run(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | Caused by: java.io.IOException: Failed to bind to server socket: tcp://0.0.0.0:20000 due to: java.net.BindException: Address already in use: JVM_Bind
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:141)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:293)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:135)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:98)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1428)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	... 42 more
INFO   | jvm 1    | 2011/11/21 20:39:00 | Caused by: java.net.BindException: Address already in use: JVM_Bind
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.net.PlainSocketImpl.socketBind(Native Method)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.net.PlainSocketImpl.bind(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.net.ServerSocket.bind(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at java.net.ServerSocket.<init>(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at javax.net.DefaultServerSocketFactory.createServerSocket(Unknown Source)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:136)
INFO   | jvm 1    | 2011/11/21 20:39:00 | 	... 48 more
INFO  ",Bug
AMQ-2137,12482824,,"We were using default AMQ configuration with stomp protocol for a long time without any problems. However, recently we change the derby db to mysql database due to our large message sizes. This set up worked without any problems in our test environments but in our production system AMQ is crashing after a while with follwoing errors:
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:41723"" java.lang.OutOfMemoryError: Java heap space
        at java.lang.StringCoding$CharsetSE.encode(StringCoding.java:334)
        at java.lang.StringCoding.encode(StringCoding.java:378)
        at java.lang.String.getBytes(String.java:812)
        at org.apache.activemq.transport.stomp.LegacyFrameTranslator.convertMessage(LegacyFrameTranslator.java:69)
        at org.apache.activemq.transport.stomp.ProtocolConverter.convertMessage(ProtocolConverter.java:582)
        at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:89)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:564)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:56)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1207)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:793)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:830)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
...

after 3 messages like this then you'll see this

Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:41934"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:41942"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:48968"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:48975"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:48978"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:40242"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:40245"" java.lang.OutOfMemoryError: Java heap space
...


In another attempt we got these messages:
Exception in thread ""ActiveMQ Connection Dispatcher: /127.0.0.1:50574"" java.lang.OutOfMemoryError: Java heap space
        at java.lang.StringCoding$CharsetSE.encode(StringCoding.java:334)
        at java.lang.StringCoding.encode(StringCoding.java:378)
        at java.lang.String.getBytes(String.java:812)
        at org.apache.activemq.transport.stomp.LegacyFrameTranslator.convertMessage(LegacyFrameTranslator.java:69)
        at org.apache.activemq.transport.stomp.ProtocolConverter.convertMessage(ProtocolConverter.java:582)
        at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:89)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommad(ProtocolConverter.java:564)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:56)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1207)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:793)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:830)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
ERROR log                            - Nested in javax.servlet.ServletException: java.lang.OutOfMemoryError: Java heap space:
java.lang.OutOfMemoryError: Java heap space
        at java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:99)
        at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:393)
        at java.lang.StringBuffer.append(StringBuffer.java:225)
        at java.lang.StringBuffer.append(StringBuffer.java:285)
        at java.util.regex.Matcher.appendReplacement(Matcher.java:739)
        at java.util.regex.Matcher.replaceAll(Matcher.java:806)
        at java.lang.String.replaceAll(String.java:2000)
        at org.apache.jsp.tag.web.form.tooltip_tag.doTag(org.apache.jsp.tag.web.form.tooltip_tag:75)
        at org.apache.jsp.message_jsp._jspx_meth_form_tooltip_1(org.apache.jsp.message_jsp:490)
        at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:341)
        at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:157)
        at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:99)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
ERROR log                            - /admin/message.jsp

",Bug
AMQ-2500,12483169,,"The following test-programm reads and writes messages into the same queue (testQueue). After Reading several messages the class starts two threads that are writing messages in the same queue. After writing several messages the producer hangs on:

producer.send()

and doesn't recover even if the reader continues reading messages from the queue. Even stopping the clients (via kill) doesn't change the broker's behaviour. In this state further connections opened from other clients hang on the same method call (producer.send()). The client's connections will remain open as you can see in the jconsole-screenshot, that has been taken after the producer in the example hung. Althogh the consumer may continue reading new producer can only continue writing messages into the queue after activeMQ has been restarted. 

The following two snippets show the difference between the first (127.0.0.1:49372) and the second (127.0.0.1:49385) message producer: The first producer works as expected and adds it's messages to the queue. The second producer stops with the following log-entry: 2009-11-13 09:41:45,639 [127.0.0.1:49385] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:14:-1:1

...
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '21290107 - Message ID:JoergsPC-50687-1258047095293-0:2810:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=197, delivered=0, pending=0'
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '31931917 - Message ID:JoergsPC-50687-1258047095293-0:2811:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=198, delivered=0, pending=0'
2009-11-13 09:41:42,376 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '10144386 - Message ID:JoergsPC-50687-1258047095293-0:2812:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:0:1:1, destinations=1, dispatched=199, delivered=0, pending=0'
2009-11-13 09:41:42,381 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - Received WireFormat: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:42,381 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - Sending: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:42,382 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49372 before negotiation: OpenWireFormat{version=3, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2009-11-13 09:41:42,394 [127.0.0.1:49372] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49372 after negotiation: OpenWireFormat{version=3, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2009-11-13 09:41:42,395 [127.0.0.1:49372] DEBUG TransportConnection            - Setting up new connection: /127.0.0.1:49372
2009-11-13 09:41:42,409 [127.0.0.1:49372] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:1:-1:1
2009-11-13 09:41:42,414 [127.0.0.1:49372] DEBUG AbstractRegion                 - Adding destination: topic://ActiveMQ.Advisory.Producer.Queue.testQueue
2009-11-13 09:41:42,416 [127.0.0.1:49372] DEBUG AMQMessageStore                - Journalled message add for: ID:JoergsPC-49370-1258101701975-0:1:1:1:1, at: offset = 10684963, file = 4, size = 270, type = 1
2009-11-13 09:41:42,416 [eue://testQueue] DEBUG AMQMessageStore                - Doing batch update... adding: 1 removing: 0 
2009-11-13 09:41:42,417 [eue://testQueue] DEBUG AMQMessageStore                - Batch update done.
2009-11-13 09:41:42,418 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 7, to: 8
2009-11-13 09:41:42,418 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 1, to: 2
2009-11-13 09:41:42,425 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 8, to: 9
2009-11-13 09:41:42,433 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 9, to: 10
2009-11-13 09:41:42,440 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 10, to: 11
2009-11-13 09:41:42,470 [127.0.0.1:49371] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:0:1:1
2009-11-13 09:41:42,474 [127.0.0.1:49371] DEBUG AMQMessageStore                - flush starting ...
2009-11-13 09:41:42,474 [127.0.0.1:49371] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:0:-1:1
2009-11-13 09:41:42,477 [127.0.0.1:49371] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49371
...


...
2009-11-13 09:41:45,319 [eue://testQueue] DEBUG Queue                          - queue://testQueue - Recovery - Message pushed '21569784 - Message ID:JoergsPC-50687-1258047095293-0:3422:1:1:1 dropped=false locked=false' to subscription: 'QueueSubscription: consumer=ID:JoergsPC-49370-1258101701975-0:13:1:1, destinations=1, dispatched=797, delivered=0, pending=0'
2009-11-13 09:41:45,320 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 181, to: 182
2009-11-13 09:41:45,327 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 182, to: 183
2009-11-13 09:41:45,331 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 183, to: 184
2009-11-13 09:41:45,332 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 45, to: 46
2009-11-13 09:41:45,338 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 184, to: 185
2009-11-13 09:41:45,344 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 185, to: 186
2009-11-13 09:41:45,349 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 186, to: 187
2009-11-13 09:41:45,356 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 187, to: 188
2009-11-13 09:41:45,356 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 46, to: 47
2009-11-13 09:41:45,442 [127.0.0.1:49384] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:13:1:1
2009-11-13 09:41:45,445 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 188, to: 189
2009-11-13 09:41:45,443 [127.0.0.1:49372] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:1:-1:1
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TcpTransport                   - Stopping transport tcp:///127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Stopped transport: /127.0.0.1:49372
2009-11-13 09:41:45,632 [127.0.0.1:49372] DEBUG TransportConnection            - Connection Stopped: /127.0.0.1:49372
2009-11-13 09:41:45,636 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - Sending: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - Received WireFormat: WireFormatInfo { version=3, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49385 before negotiation: OpenWireFormat{version=3, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG WireFormatNegotiator           - tcp:///127.0.0.1:49385 after negotiation: OpenWireFormat{version=3, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
2009-11-13 09:41:45,638 [127.0.0.1:49385] DEBUG TransportConnection            - Setting up new connection: /127.0.0.1:49385
2009-11-13 09:41:45,639 [127.0.0.1:49385] DEBUG AbstractRegion                 - Adding consumer: ID:JoergsPC-49370-1258101701975-0:14:-1:1
2009-11-13 09:41:45,641 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 189, to: 190
2009-11-13 09:41:45,647 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 190, to: 191
2009-11-13 09:41:45,653 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 191, to: 192
2009-11-13 09:41:45,653 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 47, to: 48
2009-11-13 09:41:45,658 [eue://testQueue] DEBUG Usage                          - Memory usage change.  from: 192, to: 193
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 193, to: 192
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 192, to: 191
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 48, to: 47
2009-11-13 09:41:45,663 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 191, to: 190
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG Usage                          - Memory usage change.  from: 190, to: 189
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG AMQMessageStore                - flush starting ...
2009-11-13 09:41:45,664 [127.0.0.1:49384] DEBUG AbstractRegion                 - Removing consumer: ID:JoergsPC-49370-1258101701975-0:13:-1:1
2009-11-13 09:41:45,665 [127.0.0.1:49384] DEBUG TransportConnection            - Stopping connection: /127.0.0.1:49384
...


",Bug
AMQ-2401,12482929,,"While running performance tests I I was seeing hangs in several tests  involving dups ok queue receivers. My suspicion is that this is related to ""too lazy"" dups_ok acknowledgements. Changing the queue prefetchLimit to 100 caused this problem to go away. This needs more investigation, but it seems like we can get ourselves in to trouble if the queue size is smaller than the receiver's prefetchLimit, and this should be avoid. It is also possible that there is something more complicated happening in my tests. I haven't yet been able to reproduce this outside my performance test environment. 
",Bug
AMQ-3460,12519303,,"We experience the following problem.

There's 1 sender thread and 20 listener threads operating on the same queue.
No other queues are involved.

Message traffic goes generally OK via the queue, however Number of pending messages goes up one by one.

Looking at the active customers list, the following appears (see attached screenshot).
For all sessions but two, the messages are dispatched properly.
For these two affected sessions, the ""Dispatched Queue"" value gots stuck at certain moment and doesn't deliver anymore.

Eventually, more sessions got affected, and maybe after some hours, the stuck messages got delivered.

What we tried - adding useCache=""false"" into <policyEntry queue="">"" ... > tag. Didn't have any effect.

",Bug
AMQ-3016,12483820,,"Symptom
========
I set up two Brokers and a network bridge from Broker A to Broker B over HTTP.  When the bridge is established, each Broker has a single transport connection (VM on broker A and HTTP on broker B) as recorded in RegionBroker.connections

I noticed that when Broker A was stopped (normally), periodically the HTTP connection would remain in Broker B's RegionBroker.connections until the InactivityMonitor on the connection timed out.  If the InactivityMonitor was disbled, then the connection would remain indefinitely.  

If Broker A was restarted, the bridge would be restarted and a second connection would be recorded in Broker B's RegionBroker.connections.  Repeating restarts of Broker A would cause an accumulation of ""dead"" connections, which would eventually lead to an OOM.

Cause
=====
When Broker A is stopped, DemandForwardingBridgeSupport.stop() is called and sends a ShutdownInfo command to the local and remote transports.  When the transports receive the ShutdownInfo, they remove the connection from their associated RegionBroker.connections as part of  TransportConnection.processRemoveConnection(ConnectionId, long):

    public synchronized Response processRemoveConnection(ConnectionId id, long lastDeliveredSequenceId)
            throws InterruptedException {
...
            try {
                broker.removeConnection(cs.getContext(), cs.getInfo(), null);
            } catch (Throwable e) {
                SERVICELOG.warn(""Failed to remove connection "" + cs.getInfo(), e);
            }

In the cases were Broker B would not clean up its connection, I traced the code and discovered that the ShutdownInfo message was not being sent because the remote transport (HttpClientTransport) had already had its ""stopped"" flag set to true as part of HttpClientTransport.oneway(Object command):

    public void oneway(Object command) throws IOException {

        if (isStopped()) {
            throw new IOException(""stopped."");
        }
...

DemandForwardingBridgeSupport's stop() method has the following code:

    public void stop() throws Exception {
...
                    ASYNC_TASKS.execute(new Runnable() {
                        public void run() {
                            try {
                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());
                            } catch (Throwable e) {
                                LOG.debug(""Caught exception sending shutdown"", e);
                            } finally {
                                sendShutdown.countDown();
                            }
                        }
                    });
                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
                    // Release the started Latch since another thread could be
                    // stuck waiting for it to start up.
                    startedLatch.countDown();
                    startedLatch.countDown();
                    localStartedLatch.countDown();
                    ss.throwFirstException();
                }
            }

ShutdownInfo is sent asynchronously to the local and remote transports by a slave thread:

                                localBroker.oneway(new ShutdownInfo());
                                sendShutdown.countDown();
                                remoteBroker.oneway(new ShutdownInfo());

The sendShutdown  latch is used by the master thread to prevent running the finally clause until the ShutdownInfo has been sent:

                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {
                        LOG.info(""Network Could not shutdown in a timely manner"");
                    }
                } finally {
                    ServiceStopper ss = new ServiceStopper();
                    ss.stop(remoteBroker);
                    ss.stop(localBroker);
...
                }
            }

However, because the latch is countdown *before* remoteTransport.oneway(new ShutdownInfo()) there is a race condition and in most cases the main thread calls ss.stop(remoteBroker) before the slave thread has completed its call to remoteTransport.oneway(new ShutdownInfo()).  As a result, the remoteTransport appears already stopped and the ShutdownInfo is discarded.  This leaves the connection dangling on the remote broker until the InactivityMonitor closes it.

Solution
======
The sendShutdown latch should be countdown *after* remoteTransport.oneway(new ShutdownInfo()).
",Bug
AMQ-3157,12496720,,"When using the garbage collection feature of inactive queues, the queues are not collected if queue mirroring is turned on.  The following snippet shows a basic configuration for reproducing the problem:

{code:xml}
<broker xmlns=""http://activemq.apache.org/schema/core""
          brokerName=""localhost""
          dataDirectory=""${activemq.base}/data""
          destroyApplicationContextOnStop=""true""
          schedulePeriodForDestinationPurge=""10000"">

        <destinationInterceptors>
            <mirroredQueue copyMessage=""true"" postfix="""" prefix=""Monitor.""/>
        </destinationInterceptors>

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <!-- Set auto-cleanup of inactive topics and queues -->
                    <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingQueuePolicy>
                            <vmQueueCursor/>
                        </pendingQueuePolicy>
                    </policyEntry>
                    <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""50mb"" gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""30000"">
                        <pendingSubscriberPolicy>
                            <vmCursor />
                        </pendingSubscriberPolicy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>
</broker>
{code}

With this configuration, the topics will be collected, but the queues will not be collected.  In order to get the queues to be collected, the {{<destinationInterceptors>}} section needs to be commented out.",Bug
AMQ-5376,12745194,,"Hi,

I'm getting a Rollback Transaction exception when the message is trying to write to KahaDB. The exception happens from client is as below

javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination:

I wrote a small application to probe JMX to get temp-queue in every seconds. I notice the temp-queue was living there for almost 5 minutes. The rollback happens after the 2 minutes after the temp-queue was been created. When it retry it, the message successfully went thru.

Is this is because of KahaDB issues what has concurrent thread being write ? 

Please advice.
",Bug
AMQ-3598,12531481,,"A consumer can receive messages from protected queues/topics if he uses a Destination which contains a wildcard as described [here|http://activemq.apache.org/wildcards.html]:

{code:language=java}
Destination queue = new ActiveMQQueue(""messages.>"");
Destination topic = new ActiveMQTopic("">"");
{code}

We are using the default authentication/authorization system as described in [Security Authentication/Authorization|http://activemq.apache.org/security.html#Security-Authorization] with the following configuration:

{code:title=broker.xml|language=xml}
<plugins>
    <simpleAuthenticationPlugin>
        <users>
            <authenticationUser
                  username=""admin""
                  password=""admin""
                  groups=""admins""/>
            <authenticationUser
                  username=""user""
                  password=""user""
                  groups=""users""/>
        </users>
    </simpleAuthenticationPlugin>
    <authorizationPlugin>
        <map>
            <authorizationMap>
                <authorizationEntries>
                    <authorizationEntry topic=""messages.>""
                                        read=""admins""
                                        write=""admins""
                                        admin=""admins""/>
                    <authorizationEntry topic=""messages.cat2""
                                        read=""admins""
                                        write=""admins""
                                        admin=""admins""/>
                    <authorizationEntry topic=""messages.cat1""
                                        read=""admins, users""
                                        write=""admins, users""
                                        admin=""admins, users""/>
                    <authorizationEntry topic=""ActiveMQ.Advisory.>""
                                        read=""admins, users""
                                        write=""admins, users""
                                        admin=""admins, users""/>
                </authorizationEntries>
            </authorizationMap>
        </map>
    </authorizationPlugin>
</plugins>
{code}

As exepected, clients connecting as ""user"" to the topic ""messages.cat2"" get an exception (""User user is not authorized to read from: topic://messages.cat2""). Suprisingly ""user"" can receive messages from topic ""messages.cat2"" if he creates a consumer with the destination ""messages.>"":

{code:title=consumer.java|language=java}
final Destination destination = new ActiveMQTopic(""messages.>"");
final Connection conn = new ActiveMQConnectionFactory(""user"", ""user"", BROKER_URL).createConnection();
final Session session = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
final MessageConsumer consumer = session.createConsumer(destination);
conn.start();
closure.run();
final Message message = consumer.receive(TIMEOUT);
session.close();
conn.close(); 
{code}

IMHO this behaviour is a security problem as an unprivileged user can receive messages from a protected topic or queue!",Bug
AMQ-3536,12526689,,"Summary: 
Transactional Acknowledgement with Virtual Topic / Subscriber Queues does not indicate which subscriber had a problem consuming the messages. Messages are simply delivered to Topic specific DLQ rather than to the Subscriber/Consumer specific DLQ.

Steps to create issue:

Configure the Individual Dead Letter Queue policy in Fuse Message Broker. 
Next create an ActiveMQ Virtual Topic with Subscriber Queue(s).
Send messages to Virtual Topic
Rollback/abort ack for one message (consistently) until this message gets delivered to the dead letter queue.

Result:
Message is sent to the Topic Specific Dead Letter Queue rather than to the DLQ specific to the Subscriber Queue.


Resolution:
Patch and unit test are are attached.
This test verifies that all undelivered messages sent to a consumers listening on a queue associated with a virtual topic with be forwarded to separate DLQ's.

Note that the broker config, Individual Dead Letter Strategy, needs to have the enable audit set to false to allows duplicate messages sent from a topic to individual consumers to be forwarded to the DLQ's.
  
<deadLetterStrategy>
	<bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy"">
        	<property name=""useQueueForQueueMessages"" value=""true""></property>
                <property name=""processNonPersistent"" value=""true""></property>
                <property name=""processExpired"" value=""false""></property>
                <property name=""enableAudit"" value=""false""></property>
        </bean>
</deadLetterStrategy>
		

",Bug
AMQ-3537,12526717,,"When the ActiveMQ client attempts to unpack an ObjectMessage that contains a proxy with a mix of JDK and non-JDK interfaces the ClassLoadingAwareObjectInputStream chooses ONLY the ClassLoader from  the first interface in the array of interfaces represented by the proxy.  This means that if a proxy's first interface is a JDK class (java.util.List, java.sql.Blob) the core ClassLoader is used.  In the event that a non-JDK interface is present in the list of proxied interfaces the same core ClassLoader is used.  The Proxy.getProxyClass subsequently throws an IllegalArgumentException because the non-JDK interface class cannot be loaded by the core ClassLoader.

This problem is extant during deserialization of an ObjectMessage payload that contains a proxy that implements [java.sql.Blob, org.hibernate.engine.jdbc.WrappedBlob, java.io.Serializable] (a blob proxy created by [hibernate SerializableBlobProxy|https://github.com/hibernate/hibernate-core/blob/3.6.7.Final/hibernate-core/src/main/java/org/hibernate/engine/jdbc/SerializableBlobProxy.java]).   The impact of this bug is that users of Hibernate cannot use ActiveMQ as a messaging framework if they need to package ValueObjects that have mapped lobs.  ",Bug
AMQ-4249,12627290,,"h1. Problem

While setting up a connection pool towards ActiveMq 5.5.1 using Bitronix 2.1.3 I've been having some issues related to authentication and authorization of the JMS connections.

When doing a clean restart of the JMS-clients JVM the connection pool has been unable to connect successfully with one or more of the 14 connections it's been set up to use.

The error messages I've been getting has usually been one of the following two:

# User system is not authorized to read from: ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic
# User name or password is invalid.

The broker has been set up using a very simplistic configuration:
{code:xml}
<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:context=""http://www.springframework.org/schema/context""

	xsi:schemaLocation=""http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"">
	<context:property-placeholder />

	<broker brokerId=""localhost"" xmlns=""http://activemq.apache.org/schema/core""
		dataDirectory=""${datadir}"" start=""false"">
		<managementContext>
			<managementContext connectorHost=""0.0.0.0""
				connectorPort=""14522"" createConnector=""true"" />
		</managementContext>
		<plugins>
			<jaasAuthenticationPlugin configuration=""activemq-domain""
				discoverLoginConfig=""true"" />
			<authorizationPlugin>
				<map>
					<authorizationMap>
						<authorizationEntries>
							<authorizationEntry queue="">"" read=""admins""
								write=""admins"" admin=""admins"" />

							<authorizationEntry topic="">"" read=""admins""
								write=""admins"" admin=""admins"" />

							<authorizationEntry topic=""ActiveMQ.Advisory.>""
								read=""guests,users"" write=""guests,users"" admin=""guests,users"" />
						</authorizationEntries>
					</authorizationMap>
				</map>
			</authorizationPlugin>
		</plugins>
		<transportConnectors>
			<transportConnector id=""openwire"" uri=""tcp://0.0.0.0:61616?trace=true"" />
		</transportConnectors>
	</broker>
</beans>
{code}

The JAAS-configuration has been verified to match username and password used by the client when connecting (username = system):

h4. login.config

{code}
activemq-domain {
    org.apache.activemq.jaas.PropertiesLoginModule required
        debug=false
        org.apache.activemq.jaas.properties.user=""users.properties""
        org.apache.activemq.jaas.properties.group=""groups.properties"";
};
{code}

h4.users.properties

{code}
system=manager
user=password
guest=password
{code}

h4. groups.properties
{code}
admins=system
users=user
guests=guest
{code}

h1. Cause

After debugging the problem it seems as if the problem is caused by a race condition introduced in PropertiesLoginModule in revision [1086219|https://fisheye6.atlassian.com/changelog/activemq?showid=1086219] (AMQ-3244). When the reload-support was added the users- and groups-fields were changed into static fields. But no additional synchronization was introduced, thereby introducing a race condition when several threads are entering the initialize- and commit-methods are the same time.

The following section of the initialize-method in PropertiesLoginModule contains the first part of the race condition. Please note the unsynchronized modification of both the users- and groups static fields:

{code:java}
        if (reload || users == null || uf.lastModified() > usersReloadTime) {
            if (debug) {
                LOG.debug(""Reloading users from "" + uf.getAbsolutePath());
            }
            try {
                users = new Properties(); // XXX Here be dragons
                java.io.FileInputStream in = new java.io.FileInputStream(uf);
                users.load(in);
                in.close();
                usersReloadTime = System.currentTimeMillis();
            } catch (IOException ioe) {
                LOG.warn(""Unable to load user properties file "" + uf);
            }
        }

        groupsFile = (String) options.get(GROUP_FILE) + """";
        File gf = baseDir != null ? new File(baseDir, groupsFile) : new File(groupsFile);
        if (reload || groups == null || gf.lastModified() > groupsReloadTime) {
            if (debug) {
                LOG.debug(""Reloading groups from "" + gf.getAbsolutePath());
            }
            try {
                groups = new Properties(); // XXX Here be dragons
                java.io.FileInputStream in = new java.io.FileInputStream(gf);
                groups.load(in);
                in.close();
                groupsReloadTime = System.currentTimeMillis();
            } catch (IOException ioe) {
                LOG.warn(""Unable to load group properties file "" + gf);
            }
        }
{code}

The next part comes in the login-method when the users password is retrieved:

{code:java}
        String password = users.getProperty(user); 
{code}

The final part of the puzzle occurs in the commit-method:
{code:java}
            for (Enumeration<?> enumeration = groups.keys(); enumeration.hasMoreElements();) {
                String name = (String)enumeration.nextElement();
                String[] userList = ((String)groups.getProperty(name) + """").split("","");
                for (int i = 0; i < userList.length; i++) {
                    if (user.equals(userList[i])) {
                        principals.add(new GroupPrincipal(name));
                        break;
                    }
                }
            }
{code}

The retrieval of the user password will fail if invoked by a thread immediately after a different thread has assigned an empty Properties-object to the users field in the initialize-method.

Similarly population of the GroupPrincipals into the Subject in the commit-method will silently fail if executed by a thread immediately after a different thread has assigned an empty Properties-object to the groups-field in the initialize-method.

h1. Proposed solution

I've created a testcase that reproduces the problem and an additional patch that introduces a wrapper around the Properties-objects for the users- and groups-fields.

The testcase and the proposed solution is available via https://github.com/lothor/activemq.",Bug
AMQ-3803,12549737,,"WebSphere 8 includes values other than Strings in the Hashtable provided to configure the external initial context factory when setting up a Generic JMS Provider.

The org.apache.activemq.jndi.AcuityActiveMQWASInitialContextFactory class does not anticipate non-string values in the Hashtable and throws a ClassCastException.

Key: osgi.service.jndi.bundleContext (String)
Value: com.ibm.osgi.jndi.fep.GatewayBundleContextProxy",Bug
AMQ-3715,12542419,,"According to the documentation [1], the activemq-all.jar should contain all required libraries.  However when running a sample project the following error occurs:

java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
	at org.slf4j.LoggerFactory.getSingleton(LoggerFactory.java:230)
	at org.slf4j.LoggerFactory.bind(LoggerFactory.java:121)
	at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:112)
	at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:275)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:248)
	at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:261)
	at org.apache.activemq.ActiveMQPrefetchPolicy.<clinit>(ActiveMQPrefetchPolicy.java:38)
	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:88)
	at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:131)
	at com.fusesource.example.Producer.<init>(Producer.java:25)
	at com.fusesource.example.DEV3783.main(DEV3783.java:47)
	... 6 more
Caused by: java.lang.ClassNotFoundException: org.slf4j.impl.StaticLoggerBinder
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	... 17 more

[1] http://activemq.apache.org/initial-configuration.html",Bug
AMQ-3865,12558461,,"The tests do index of comparison of ""foo\n"" where on windows you'd need to do ""foo\r\n"".  I don't think the line endings are really significant to test.  

If they are then I can change the test over to check the operating system and add carriage returns if necessary.  ",Bug
AMQ-4469,12642269,,The test case demonstrates that you can create even more connections than the maximum size.,Bug
AMQ-4158,12614565,,"BTreeIndexTest hangs when run on windows because it repeatedly tries to create/delete the same directory, which is problematic on windows.  I've attached a patch which just adds a timestamp to the directory name.
",Bug
AMQ-4753,12671230,,"Start with a client application running qpid v0.24 connecting to activemq v5.8.0 server over amqps. Configure the activemq server to use client SSL certificates for authentication.

{code}
                <!-- aqmp with SSL client certs -->
         <transportConnector name=""amqps"" uri=""amqp+ssl://0.0.0.0:5672?maximumConnections=1000&amp;wireformat.maxFrameSize=104857600&amp;transport.transformer=jms&amp;needClientAuth=true""/>
{code}

This works and messages successfully flow from server to client. Qpid however has a fatal bug where it cannot recover from broken connections, and so attempt to switch to the activemq amqp client to work around this problem.

On the client, we initialise activemq-amqp with the following parameters:

{code}
<!-- activemq -->
  <Parameter name=""java.naming.factory.initial"" value=""org.apache.activemq.jndi.ActiveMQInitialContextFactory"" />
  <Parameter name=""connectionFactoryNames"" value=""ConnectionFactory, QueueConnectionFactory, TopicConnectionFactory"" />

  <!-- Server to connect to -->
<!-- activemq -->
  <Parameter name=""java.naming.provider.url"" value=""amqp+nio+ssl://amqp.${env:SERVER_ENV}.example.com:5672"" />
{code}

With activemq-amqp in place instead of qpid, the client starts up, but no messages are processed. Instead, it is found that the aqmp+nio+ssl provider is spinning the CPU at 100% part of the way through the SSL handshake process.

A thread dump of the spinning thread is as follows:

{code}
Full thread dump Java HotSpot(TM) 64-Bit Server VM (23.25-b01 mixed mode):

""localhost-startStop-1"" daemon prio=10 tid=0x000000000179b800 nid=0x638e runnable [0x00007fd1fd84a000]
   java.lang.Thread.State: RUNNABLE
        at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)
        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:225)
        at sun.nio.ch.IOUtil.read(IOUtil.java:198)
        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:375)
        - locked <0x00000000c4da50e8> (a java.lang.Object)
        at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:285)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:333)
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:128)
        at org.apache.activemq.transport.amqp.AmqpNioSslTransport.initializeStreams(AmqpNioSslTransport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:514)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:156)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:356)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:238)
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:184)
...
{code}

If an attempt is made to restart the activemq server, despite the spinning thread on the client the server side disconnection is detected by the client and the following exception is logged and the connection is successfully aborted:

{code}
Caused by: java.io.IOException: javax.net.ssl.SSLException: Received close_notify during handshake
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:130)
        at org.apache.activemq.transport.amqp.AmqpNioSslTransport.initializeStreams(AmqpNioSslTransport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:514)
        at org.apache.activemq.transport.nio.NIOTransport.doStart(NIOTransport.java:156)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doStart(NIOSSLTransport.java:356)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:273)
        ... 33 more
Caused by: javax.net.ssl.SSLException: Received close_notify during handshake
        at sun.security.ssl.Alerts.getSSLException(Alerts.java:208)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1619)
        at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1587)
        at sun.security.ssl.SSLEngineImpl.recvAlert(SSLEngineImpl.java:1732)
        at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:1060)
        at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:884)
        at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:758)
        at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)
        at org.apache.activemq.transport.nio.NIOSSLTransport.secureRead(NIOSSLTransport.java:304)
        at org.apache.activemq.transport.nio.NIOSSLTransport.doHandshake(NIOSSLTransport.java:333)
        at org.apache.activemq.transport.nio.NIOSSLTransport.initializeStreams(NIOSSLTransport.java:128)
        ... 42 more
{code}

What seems to be happening is that amqp+nio+ssl gets part of the way through the handshake fails and goes into a spin, continuing the spin until the TCP connection is killed from the other side, at which point the client aborts and continues as if nothing had happened.
",Bug
AMQ-4740,12670485,,"If I use the stomp.js library to connect to ActiveMQ over its WebSocket url (ws://localhost:61614), the CONNECTED frame returns with disabled heart-beat:

CONNECTED
heart-beat:0,0
session:ID:retsina.local-63633-1380117269290-2:1
server:ActiveMQ/5.8.0
version:1.1

If I connect to its TCP socket (localhost:61613), the CONNECT frame will have heart-beat:

CONNECTED
heart-beat:10000,10000
session:ID:retsina.local-63384-1380115729700-2:12
server:ActiveMQ/5.8.0
version:1.1

In both case, the stomp.js send the same CONNECT frame with heart-beat:

CONNECT
login:user
passcode:password
accept-version:1.1,1.0
heart-beat:10000,10000

Is heart-beat disabled on purpose for Web Socket? Please note that the stomp.js does support heart-beat (using window.setInterval in a Web browser)
",Bug
AMQ-4148,12614131,,"Symptom
=======
The remote broker path is not set on network consumers that result from static subscriptions; as a result, they are forwarded to other bridges even when the network TTL on the bridges is 1.  In an n+1 hub-and-spoke network, the next broker to join receives n subscriptions instead of 1.

Cause
=====
A consumer for a static subscriptions is created by the following code:

{code:title=DemandForwardingBridgeSupport.java}
private void startLocalBridge() throws Throwable {
...
    if (!disposed.get()) {
            setupStaticDestinations();
        } else {
            LOG.warn(""Network connection between "" + localBroker + "" and "" + remoteBroker + ""("" + remoteBrokerName + "") was interrupted during establishment."");
        }
    }
}

/**
 * Subscriptions for these destinations are always created
 */
protected void setupStaticDestinations() {
...
            DemandSubscription sub = createDemandSubscription(dest);
            try {
                addSubscription(sub);
            } catch (IOException e) {
                LOG.error(""Failed to add static destination "" + dest, e);
            }
            if (LOG.isTraceEnabled()) {
                LOG.trace(""bridging messages for static destination: "" + dest);
            }
        }
    }
}

final protected DemandSubscription createDemandSubscription(ActiveMQDestination destination) {
    ConsumerInfo info = new ConsumerInfo();
    info.setDestination(destination);

    // the remote info held by the DemandSubscription holds the original consumerId,
    // the local info get's overwritten
    info.setConsumerId(new ConsumerId(localSessionInfo.getSessionId(), consumerIdGenerator.getNextSequenceId()));
    DemandSubscription result = null;
    try {
        result = createDemandSubscription(info);
    } catch (IOException e) {
        LOG.error(""Failed to create DemandSubscription "", e);
    }
    return result;
}
{code}

Note how the broker path is *not* set on the {{ConsumerInfo}} that is used for the subscription.  

In contrast, a consumer for a dynamic subscription does have its broker path updated to indicate that it is from a remote broker:

{code:title=DemandForwardingBridgeSupport.java}
protected void serviceRemoteCommand(Command command) {
    if (!disposed.get()) {
        try {
            if (command.isMessageDispatch()) {
                safeWaitUntilStarted();
                MessageDispatch md = (MessageDispatch) command;
                serviceRemoteConsumerAdvisory(md.getMessage().getDataStructure());
                ackAdvisory(md.getMessage());
...

private void serviceRemoteConsumerAdvisory(DataStructure data) throws IOException {
...
        if (addConsumerInfo(info)) {
                if (LOG.isDebugEnabled()) {
                    LOG.debug(configuration.getBrokerName() + "" bridged sub on "" + localBroker + "" from "" + remoteBrokerName + "" : "" + info);
                }
            } else {
                if (LOG.isDebugEnabled()) {
                    LOG.debug(configuration.getBrokerName() + "" Ignoring sub from "" + remoteBrokerName + "" as already subscribed to matching destination : "" + info);
                }
            }
        }
...

protected boolean addConsumerInfo(final ConsumerInfo consumerInfo) throws IOException {
    boolean consumerAdded = false;
    ConsumerInfo info = consumerInfo.copy();
    addRemoteBrokerToBrokerPath(info);
...
{code}

Because of this difference, a static subscription will be forwarded to new bridges with a {{null}} brokerPath while a dynamic subscription to the same queue will be forwarded with a singleton brokerPath.  As a result, static subscriptions will be propagated one further hop than their dynamic counterparts.  In the case of a network TTL of 1, the static subscription consumers from existing bridges are unexpectedly propagated to new bridges, while the dynamic subscription consumers are correctly suppressed.

Solution
========
There should be no logical difference between a network consumer created for a static subscription vs. a dynamic subscription.  In either case, the bridge creates a consumer on behalf of the remote broker.  As such, the consumer for a static subscription should have the remote broker in its broker path because it represents a subscription from that remote broker (even if there is no consumer).
",Bug
AMQ-3827,12553867,,The current https transport protocol does not allow the ability to use the SslContext instance to setup the secure communication for the broker.  The current implementation requires that you define the standard security properties.,Bug
AMQ-6976,13162383,,"We are running a so called ""Shared Nothing"" setup with several Wildfly 8.2.1 instances (10) on several host machines (4)- all connected to one standalone Activemq installation - Normally we have  600-700 connections in total to our broker.

The Activemq installation is configured to use 8GB RAM.
{code:java}
<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""dcdng"" id=""dcdng"" useJmx=""true"" useShutdownHook=""false""
schedulerSupport=""false"" dataDirectory=""C:/activemq/data"" advisorySupport=""false"">

<managementContext>
<managementContext createConnector=""true"" connectorPort=""61610"" suppressMBean=""endpoint=dynamicProducer,endpoint=Consumer,connectionName=*,destinationName=ActiveMQ.Advisory.*""/>
</managementContext>
 <!-- ... -->
</broker>{code}
The memory usage is set to 500mb which is sufficient since our messages are relative small. (MaxMessageSize: 41442)

 

The system performs great until we put it under high load. Then the heap usage grows and it seems the memory cannot get cleaned up properly. 

 !image-2018-05-28-16-23-36-564.png! 

At the end I took a heap dump and the MAT prints the following:

!image-2018-05-28-13-54-21-048.png!

So why are there so many TransportConnectionState objects left an not cleaned up properly. When the system performs under ""normal"" load, everything seems to be fine.",Bug
AMQ-4725,12668952,,"The TestBadVersionNumberDoesNotWork and TestBadPropertyNameFails both hang when the init method adds the following:  

    addCombinationValues(""postfix"", new Object[] {"")?initialReconnectDelay=1000&maxReconnectDelay=1000""});

I'll attach a patch which comments these out so the build doesn't hang, as well as a stack trace.
",Bug
AMQ-4641,12658720,,"If you run QueryBrowserTest using amqp+nio, you get the following:


Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 5.166 sec <<< FAILURE!
testSenderBrowser(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 3.053 sec  <<< FAILURE!
junit.framework.AssertionFailedError: null
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testSenderBrowser(QueueBrowserTest.java:103)

testBrowserWithMessageSelector(org.objectweb.jtests.jms.conform.queue.QueueBrowserTest)  Time elapsed: 2.051 sec  <<< FAILURE!
junit.framework.AssertionFailedError: expected:<1> but was:<0>
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.Assert.assertEquals(Assert.java:241)
	at org.objectweb.jtests.jms.conform.queue.QueueBrowserTest.testBrowserWithMessageSelector(QueueBrowserTest.java:142)


This may be similar to: https://issues.apache.org/jira/browse/AMQ-4376
",Bug
AMQ-4338,12633271,,"MQTTSSLTest has multiple different test cases (including testSendAndReceiveExactlyOnce, testSendAndReceiveLargeMessages, testSendAndReceiveMQTT, testSendAtLeastOnceReceiveAtMostOnce, testSendAtLeastOnceReceiveExactlyOnce, testSendJMSReceiveMQTT, testSendMQTTReceiveJMS) which fail fairly frequently because of a hang on the provider.connect() call in initializeConnection() as shown in the stacktrace below. 

Another problem with this test is it was giving a misleading error when run under Hudson, showing that the test that followed it (MQTTTest) was failing instead.  I think this was because of the way it was using AutoFailTestSupport.  I will attach a patch which removes that and uses timeouts on @Test annotations instead.

testSendAndReceiveLargeMessages(org.apache.activemq.transport.mqtt.MQTTSSLTest)  Time elapsed: 30.004 sec  <<< ERROR!
java.lang.Exception: test timed out after 30000 milliseconds
        at sun.misc.Unsafe.park(Native Method)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:236)
        at org.fusesource.mqtt.client.Promise.await(Promise.java:88)
        at org.fusesource.mqtt.client.BlockingConnection.connect(BlockingConnection.java:49)
        at org.apache.activemq.transport.mqtt.FuseMQQTTClientProvider.connect(FuseMQQTTClientProvider.java:39)
        at org.apache.activemq.transport.mqtt.MQTTSSLTest.initializeConnection(MQTTSSLTest.java:60)


Results :

Tests in error:
  MQTTSSLTest>AbstractMQTTTest.testSendAndReceiveLargeMessages:247->initializeConnection:60 »
",Bug
AMQ-4306,12631493,,"This test runs very slowly on Solaris, taking 8-10 times as long as on Mac or Ubuntu.  It looks the the difference is almost all in the section where it builds the index.  I'll try to get more info later.

For now I'm attaching a patch which bumps up the timeout for this test so it doesn't cause the build to fail.",Bug
AMQ-3724,12542895,,"When enabling dynamic failover on the transport connectors some or all brokers in the cluster do not have their NetworkConnector or Queue mBeans enabled.  See attached patch.

Thanks,
Scott ES
http://fusesource.com",Bug
AMQ-4568,12650837,,"This test is currently hanging.  I'll attach a stack trace and a test patch which includes a timeout.
",Bug
AMQ-2189,12482760,,"The attached fix resolves a problem in KahaDBStore.KahaDBSession in which addMessage() wasn't using the caller supplied message key but instead allocated a new key. Without using the user supplied key, subsequent deletes would not properly delete the message. Also fixed corresponding test cases to provide a message key when adding messages. 

Also made some fixes to synchronization and delayed event processing in BrokerDatabase. The resulting code is not as performant in swimlanes testing, and should be optimized in the future (the problem is too many threads synchronizing on the opQueue is causing a lot of contention). 

Finally added some miscellaneous fixes to OpenwireProtocolHandler and the test drivers to avoid/detect duplicate messageIds. ",Bug
AMQ-2132,12482839,,"RemoteConnection error: java.lang.IndexOutOfBoundsException: Index: 7, Size: 3
  at java.util.ArrayList.RangeCheck(ArrayList.java:546)
  at java.util.ArrayList.get(ArrayList.java:321)
  at org.apache.activemq.dispatch.AbstractPooledDispatcher.chooseDispatcher(AbstractPooledDispatcher.java:132)
  at org.apache.activemq.dispatch.PriorityDispatcher$2$1.execute(PriorityDispatcher.java:89)
  at org.apache.activemq.flow.FlowController.checkUnblockSources(FlowController.java:424)
  at org.apache.activemq.flow.FlowController.dispatchOverflowQueue(FlowController.java:341)
  at org.apache.activemq.flow.FlowController.onUnthrottled(FlowController.java:300)
  at org.apache.activemq.flow.FlowController$1.onUnthrottled(FlowController.java:83)
  at org.apache.activemq.flow.AbstractLimiter.notifyUnThrottleListeners(AbstractLimiter.java:41)
  at org.apache.activemq.flow.SizeLimiter.remove(SizeLimiter.java:68)
  at org.apache.activemq.flow.RemoteConnection$WindowLimiter.remove(RemoteConnection.java:308)
  at org.apache.activemq.flow.RemoteConnection$WindowLimiter.onProtocolMessage(RemoteConnection.java:323)
  at org.apache.activemq.flow.RemoteConnection.onCommand(RemoteConnection.java:92)
  at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
  at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
  at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
  at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:234)
  at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:216)
  at java.lang.Thread.run(Thread.java:613)
",Bug
AMQ-2133,12482834,,When a timer is added to the heap the units were being converted backwards so that adding a Runnable that is suppose to execute in 5000ms would execute in 5 nanoseconds.,Bug
AMQ-2108,12482828,,"The following deadlock can occur in FlowController.offer(). FlowController shouldn't hold onto the mutex when calling flowElementAccepted

Thread [pipe://Broker#2] (Suspended)	
	Object.wait(long, int) line: not available [native method]	
	ExclusivePriorityQueue<E>(Object).wait() line: 199 [local variables unavailable]	
	FlowController<E>.waitForResume() line: 372	
	FlowController<E>.blockSource(ISourceController<E>) line: 315	
	FlowController<E>.add(E, ISourceController<E>) line: 229	
	PriorityFlowController<E>.add(E, ISourceController<E>) line: 60	
	ExclusivePriorityQueue<E>.add(E, ISourceController<E>) line: 66	
	Router.route(ISourceController<Message>, Message) line: 30	
	RemoteConnection$1.flowElemAccepted(ISourceController<Message>, Message) line: 92	
	RemoteConnection$1.flowElemAccepted(ISourceController, Object) line: 1	
	FlowController<E>.offer(E, ISourceController<E>) line: 266	
	RemoteConnection.onCommand(Object) line: 73	
	PipeTransportFactory$PipeTransport.run() line: 66	
	Thread.run() line: 788	

Thread [consumer1-outbound] (Suspended)	
	FlowController<E>.onFlowResume(ISinkController<E>) line: 136	
	FlowController$2.run() line: 400	
	IDispatcher$RunnableAdapter.dispatch() line: 90	
	PriorityDispatcher$PriorityDispatchContext.dispatch() line: 183	
	PriorityDispatcher.run() line: 263	
	Thread.run() line: 788	
",Bug
AMQ-2107,12482816,,"There is deadlock in PriorityDispatcher.run when processing updates from foreign threads, it holds on to foreignQueue. If there are multiple dispatch threads this can lead to the following deadlock:

Thread [BrokerDispatcher-1] (Suspended)  
  owns: LinkedNodeList<T>  (id=102)  
  waiting for: LinkedNodeList<T>  (id=125)  
  PriorityDispatcher$PriorityDispatchContext.onForeignThreadUpdate() line: 132  
  ExecutionGraphLoadBalancer$ExecutionGraphNode.processForeignUpdates() line: 428  
  PriorityDispatcher$UpdateEvent.execute() line: 79  
  PriorityDispatcher.run() line: 279  
  Thread.run() line: 613  
Thread [BrokerDispatcher-2] (Suspended)  
  owns: LinkedNodeList<T>  (id=125)  
  waiting for: LinkedNodeList<T>  (id=102)  
  PriorityDispatcher$PriorityDispatchContext.onForeignThreadUpdate() line: 132  
  ExecutionGraphLoadBalancer$ExecutionGraphNode.processForeignUpdates() line: 428  
  PriorityDispatcher$UpdateEvent.execute() line: 79  
  PriorityDispatcher.run() line: 279  
  Thread.run() line: 613

The attached patch also includes refactoring of the PriorityPooledDispatcher to use a simplifed ExecutionLoadBalancer interface.",Bug
AMQ-275,12481609,,"Relaited to slow consumer condition.

WARN 2005-06-22 12:55:44,135 - Queue is full, waiting for it to be dequeued.


2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer
2005-06-22 11:51:09,678 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2024-1119453996333-6:0 is a slow consumer
2005-06-22 11:51:09,694 [ocalport=61616]] INFO  DataContainer                  - making directory for temporary spooled data: ActiveMQTemp
2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer
2005-06-22 11:51:11,069 [ocalport=61616]] WARN  BrokerClientImpl               - Connection: ID:ny-cap-33-2005-1119453893347-6:0 is a slow consumer

2005-06-22 11:51:17,288 [ocalport=61616]] DEBUG ientTopicBoundedMessageManager - Adding consumer: CONSUMER_INFO: id = 336 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.temp-queue.TemporaryQueue-{TD{ID:ny-cap-33-2150-1119455437835-16:0}TD}ID:ny-cap-33-2150-1119455437835-23:0, consumerIdentifier = 'ID:ny-cap-33-2024-1119453996333-16:0.27.53' , clientId = 'ID:ny-cap-33-2024-1119453996333-16:0' , sessionId = '27' , consumerName = '' , selector = '' , startTime = 1119455477008, started = true, consumerNo = 53, noLocal = false, prefetchNumber = 1000, consumerKey = '[ID:ny-cap-33-2024-1119453996333-16:0:]'  }
2005-06-22 11:51:54,773 [ocalport=61616]] ERROR BrokerClientImpl               - Could not enqueue message ACTIVEMQ_OBJECT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:ny-cap-33-2005-1119453893347-68:121589, bodyAsBytes = org.activemq.io.util.ByteArray@1f07377, readOnlyMessage = false, jmsClientID = 'ID:ny-cap-33-2005-1119453893347-6:0' , jmsCorrelationID = 'null' , jmsDestination = Topic.sds.PropertyTemplatePublisher, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered = false, jmsType = 'null' , jmsExpiration = 1119455573508, jmsPriority = 4, jmsTimestamp = 1119455513508, properties = null, readOnlyProperties = false, entryBrokerName = 'ID:nyotc023-2882-1119382254093-0:0' , entryClusterName = 'default' , consumerNos = [I@12cb4ae, transactionId = 'null' , xaTransacted = false, consumerIdentifer = 'null' , messageConsumed = false, transientConsumed = false, sequenceNumber = 121589, deliveryCount = 1, dispatchedFromDLQ = false, messageAcknowledge = null, jmsMessageIdentity = null, producerKey = ID:ny-cap-33-2005-1119453893347-68: } ActiveMQObjectMessage{ object = null } to SpooledBoundedQueue for this slow consumer
javax.jms.JMSException: enqueNoBlock failed: Too many open files
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueueNoBlock(SpooledBoundedActiveMQMessageQueue.java:121)
	at org.activemq.io.util.SpooledBoundedActiveMQMessageQueue.enqueue(SpooledBoundedActiveMQMessageQueue.java:91)
	at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:198)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.dispatchToQueue(TransientTopicBoundedMessageContainer.java:223)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageContainer.targetAndDispatch(TransientTopicBoundedMessageContainer.java:155)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.doSendMessage(TransientTopicBoundedMessageManager.java:225)
	at org.activemq.service.boundedvm.TransientTopicBoundedMessageManager.sendMessage(TransientTopicBoundedMessageManager.java:204)
	at org.activemq.broker.impl.DefaultBroker.doMessageSend(DefaultBroker.java:563)
	at org.activemq.broker.impl.DefaultBroker.sendMessage(DefaultBroker.java:305)
	at org.activemq.broker.impl.BrokerContainerImpl.sendMessage(BrokerContainerImpl.java:462)
	at org.activemq.broker.impl.BrokerConnectorImpl.sendMessage(BrokerConnectorImpl.java:271)
	at org.activemq.broker.impl.BrokerClientImpl.consumeActiveMQMessage(BrokerClientImpl.java:706)
	at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:310)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
	at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
	at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)
	at java.lang.Thread.run(Thread.java:534)

",Bug
AMQ-389,12481616,,"Within a clustered environment, messages that have been sent to a Queue can end up stuck in the broker and are never delivered to the connected consumer.

Suppose, we have a cluster of two JMS brokers, Node 0 and Node 1, and that there is an active producer and an active consumer connected to Node 0, that are producing and consuming from Queue, Q. i.e. 

Producer 

|

Node 0 <-----> Node 1

|

Consumer

And the following happens for a Message, M, sent to Queue, Q:

I) Node 0 receives message M from the producer 
II) Node 1 consumes message M from Node 0
iii) Node 0 consumes message M back from Node 1
iv) Node 1 attempts to consume message M from Node 0 again.

Then, the message will end up being undelivered. It will still be in the MessageStore for Node0, but will never be dispatched to any consumer, unless the broker is restarted.

The reason this happens, is that during step iv) the message wil be dispatched to the subscriber represented by Node 1, and thus Node 0 will believe the message has successfully been sent, but Node 1's subscriber will never actually send the message to Node 1, since the anti-cycle logic in the BrokerClientImpl::send() method will drop the packet silently.

A simple possible fix is:

Alter the method signature for BrokerClient::dispatch() to return a boolean iff only it can successfully dispatch the message to the actual consumer. The same change needs to be made to the DurableQueueSubscription::doDispatch() method, to propagate this information.

The DurableQueueBoundedMessageContainer::run() method can then be altered so it only considers a message dispatched if one of its subscribers doDispatch() methods returns true, otherwise it will retain the message.

I have attached the modified source files in the patch.zip.",Bug
AMQ-373,12481543,,"Steps to reproduce:

- Set up a network of 2 or more brokers 
- Produce messages on 1 distributed queue on both brokers
- Start a consumer on the queue on each broker
- Stop one or more of the consumers while the producers produce messages

The test results are inconsistent depending varying from run to run and how many messages are sent, but three different error scenarios occur:

1. Messages are lost and not delivered
2. Messages are delivered very slowly
3. Messages are delivered twice

It is also worth noting that shutdown of networked brokers doesn't happen very cleanly.

A testcase is attached and although it's not as clean as it perhaps should be, it's simple enough to be easily understandable. Please notify me if you are having problems reproducing it or want it to be cleaned up. :)
",Bug
AMQ-422,12481647,,"I'm trying to create a distributed topic between two servers for high availability (pretty much as described in http://activemq.codehaus.org/Networks+of+Brokers).  Both of the servers want to produce/consume messages to/from this topic.

The config looks like this:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC  ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>
  <broker>
    <connector>
      <tcpServerTransport uri=""tcp://SERVER1:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50""/>
    </connector>    
    <networkConnector>      
      <networkChannel uri=""reliable:tcp://SERVER2:61616"" remoteBrokerName=""whocares""/>    
    </networkConnector>    
    <persistence>      
      <vmPersistence/>    
    </persistence>   
  </broker>
</beans>

Initial setup is fine, and upon starting both servers they connect and happily message with each other. However, problems arise if one of the servers is restarted or if a network outage occurs.

If one server (SERVER1, say) is stopped and restarted, reconnection occurs but messages are then received twice by the other server (SERVER2 - the one that was not stopped).  The activeMQ logging I get from SERVER2 on reconnect is:

14:56:16,765 channel status changed: Channel: tcp://192.168.1.171:61616 has reconnected
14:56:16,890 Adding new client: ID:elephant-3033-1132757775296-0:0_NetworkChannel on transport: TcpTransportChannel: Socket[addr=/192.168.1.172,port=3035,localport=61615]

but after this all messages are received once on SERVER1 and twice on SERVER2.
I could just about live with that, but...

...if both servers are running but encounter a network outage (ie. I disable then re-enable the network of one machine) I get one of two situations:
1) Both servers appear to reconnect, but neither one receives *any* messages any more, or
2) The servers reconnect, but upon one server posting to the topic, both are sent into an infinite loop receiving the same message for ever. 

I've attached an eclipse project with some simple test classes.  Run ""Main"" on two machines and specify the local host/port and remote host/port as arguments to the Main class.

",Bug
AMQ-336,12481097,,"When setting a message listener, using the ActiveMQMessageConsumer::setMessageListener() method, a deadlock can result, if there are messages being dispatched to that consumer by an ActiveMQSessionExecuter.

INFO   | jvm 1    | 2005/08/17 12:37:54 | Found one Java-level deadlock:
INFO   | jvm 1    | 2005/08/17 12:37:54 | =============================
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""JmsSessionDispatcher: 1"":
INFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284bec (object 61acd670, a java.lang.Object),
INFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010""
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010"":
INFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284cdc (object 61acd578, a org.activemq.ActiveMQMessageConsumer),
INFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by ""JmsSessionDispatcher: 1""
INFO   | jvm 1    | 2005/08/17 12:37:54 | 
INFO   | jvm 1    | 2005/08/17 12:37:54 | Java stack information for the threads listed above:
INFO   | jvm 1    | 2005/08/17 12:37:54 | ===================================================
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""JmsSessionDispatcher: 1"":
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:428)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- waiting to lock <61acd670> (a java.lang.Object)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61acd578> (a org.activemq.ActiveMQMessageConsumer)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:110)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:95)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at java.lang.Thread.run(Thread.java:534)
INFO   | jvm 1    | 2005/08/17 12:37:54 | ""NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010"":
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:422)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- waiting to lock <61acd578> (a org.activemq.ActiveMQMessageConsumer)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61acd670> (a java.lang.Object)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.advisories.ConnectionAdvisor.start(ConnectionAdvisor.java:82)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel.initializeRemote(NetworkChannel.java:597)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	- locked <61a3c320> (a org.activemq.transport.NetworkChannel)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel.initialize(NetworkChannel.java:565)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at org.activemq.transport.NetworkChannel$1.run(NetworkChannel.java:197)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
INFO   | jvm 1    | 2005/08/17 12:37:54 | 	at java.lang.Thread.run(Thread.java:534)

A simple fix is to synchronize the setMessageListener() method, although this may be too coarse-grained.",Bug
AMQ-328,12481406,,"Using a topic requestor with requestor on one first broker and replier on second broker.  First reply message seems to work, but second is stopped prior to return across the bridge. ",Bug
AMQ-326,12481404,,Have seen cases where the delivery can be delayed by minutes.  This was happening in single broker configuration.  ,Bug
AMQ-379,12481377,,"I found if the Recevier and Sender start almost the same time.  The Receiver will receiver the same message twise.  I have included my Testing program run by 
java -classpath .;..\activemq-3.1.jar;..\lib\geronimo-spec-jms-1.1-rc4.jar;..\lib\geronimo-spec-j2ee-management-1.0-rc4.jar;..\lib\commons-logging-1.0.3.jar;..\lib\log4j-1.2.8.jar;..\lib\concurrent-1.3.4.jar;..\conf;..\lib\spring-1.2.2.jar TestJmsSender

I have test by restarted the program ~10 times and around 40% chance of have the error of receiver rec same message twise

",Bug
AMQ-339,12481184,,"The connector implementation does not allow for connection factory-specific deployments. As an example, to connect to a broker that does not listen on the standard port, you can configure this in JBoss with a connection factory deployment as follows:

  <tx-connection-factory>
    <jndi-name>/activemq/QueueConnectionFactory</jndi-name>
    <local-transaction/>
    <rar-name>activemq-ra-3.2-SNAPSHOT.rar</rar-name>
    <config-property name=""ServerUrl"" type=""java.lang.String"">tcp://localhost:10000</config-property>
    <config-property name=""Clientid"" type=""java.lang.String"">NodeX1002</config-property>
    <connection-definition>javax.jms.QueueConnectionFactory</connection-definition>
    <security-domain-and-application>JmsXARealm</security-domain-and-application>
  </tx-connection-factory>

However, the connector does not actually honor the new values although they are properly set in JBoss. This is ultimately b/c the ActiveMQManagedConnectionFactory calls back to the ActiveMQResourceAdapter's makeConnection() method to create the connection object. makeConnection() uses a connection factory with the default configuration, not the configuration of the factory. Patch attached, tested and working in my environment for simple message dispatching, should probably be tested with MDB activation as well. ",Bug
AMQ-414,12481337,,"I raised a Geronimo issue last week -- http://issues.apache.org/jira/browse/GERONIMO-1155. I also posted a patch. I'll repost, here...

While running a test of the DayTrader sample application, the server received an OutOfMemoryException. At the time of failure, there were over 150,000 ActiveMQSession objects. These sessions were being kept alive by ActiveMQ TransactionContexts associated with ActiveMQManagedConnections. I believe that Sessions are being registered with the ActiveMQManagedConnection TransactionContexts, but will never be unregistered via TransactionContext.removeSession(Session).

In non-managed environments, the TransactionContext is owned by the Session. So, a Session does not need to be explicitly removed from the TransactionContext. Once a Session has been closed, both the Session and the TransactionContext are available for garbage collection. The Session never bothers to ""unregister"" with its associated TransactionContext. IMO, this is the root of the problem. There's a different TransactionContexts structure in RA environments.

ManagedConnections have an additional TransactionContext. As Sessions are created, an RATransactionContext is generated for each new Session. As a Session registers with the RATransactionContext, the RATransactionContext locally registers the Session, but also registers the Session with the ManagedConnection's TransactionContext. It's this registration that is the problem... The Session will never be removed from the ManagedConnection's TransactionContext.

DayTrader repeatedly drives an EJB to publish a message. The processing in the EJB is pretty simple, create a connection from a ConnectionFactory, create a session, create a producer, and send a message. .createConnection(), connection.createSession(), session.createProducer, connection.close(). The ManagedConnection is pooled. So, the connection (and its TransactionContext) are long-lived. Each iteration through the EJB is going to cause the creation of a new Session which is registered with the ManagedConnection's TransactionContext. However, the Session will never be removed from this TransactionContext...

I could create the same basic problem by creating a Connection, and repeatedly creating a session and closing it. 

The above is from my reading of the code. I'm not currently able to run DayTrader in my dev environment. Should be easy to create a simple test-case, but I haven't gotten around to it, yet. 

The obvious fix is to add the following to ActiveMQSession.doClose():

    this.transactionContext.removeSession(this);

I'll post a patch. Let me know if I'm missing something obvious... ",Bug
AMQ-444,12481578,,"When using the STOMP c-client messages are sometimes delivered twice. See attached communication dump. See below for the comm flow;

--> CONNECT
<-- CONNECTED
--> SUBSCRIBE /queue/FOO.BAR
--> SEND /queue/FOO.BAR, msg-123, Hello World!
<-- MESSAGE Hello World!
<-- RECEIPT msg-123
<-- MESSAGE Hello World!
",Bug
AMQ-427,12481402,,"Yeah, it's trivia, but it annoys me!  
Patch attached.",Bug
AMQ-576,12481554,,"Test case: start JVM; start embedded JMS container; send 10 persistent messages to queue; commit; stop JMS container; shutdown JVM; start JVM; start JMS container; create queue consumer; consume messages.

Result: Only one message (the last message sent) received by the consumer.

I have attached the relevant source.
",Bug
AMQ-655,12481475,,"Will attach a patch that corrects the typo and also prefixes it with ""ActiveMQ "" so it is easily to identify the owner of the thread.",Bug
AMQ-761,12481707,,"If I set the brokerUrl of ActiveMQConnectionFactory using setBrokerURL(), the connection factory does not reparse all of the properties from the URL.  As a result, when a new connection is created, some of the properties from the URL specified during the construction of the connection factory (typically the defaults) are used instead.  Attached is a unit test to demonstrate the problem.

As a minimum, the following block of code is required in setBrokerURL().  But this doesn't really fix it because properties settings from the URL used by the constructor may not be reset by this code.  A structural change may be in order (e.g. just-in-time parsing of the properties).

       if( brokerURL.indexOf(""?"")>= 0 ) {
            String options = brokerURL.substring(brokerURL.indexOf(""?"")+1);
            Map properties = URIHelper.parseQuery(options);
            if (!properties.isEmpty()) {
                BeanUtils.populate(this, properties);
            }   ",Bug
AMQ-708,12481696,,"Hostname and port changes I made to the activemq connectors via the geronimo admin console don't get persisted in geronimo's var/config/config.xml, causing them to revert to their original values when the server restarts.

To fix this problem ActiveMQConnectorGBean needs to declare the host and port attributes as manageable when it creates its gbeaninfo. See the attached patch.",Bug
AMQ-727,12481604,,"Trying to create a new connector from the Admin Console in Geronimo v1.1 fails with the following ST:

11:06:48,041 ERROR [JMSConnectorPortlet] Unable to process portlet action
java.lang.IllegalArgumentException: GBeanInfo must have a source class set
at org.apache.geronimo.system.configuration.GBeanOverride.<init>(GBeanOverride.java:76)
at org.apache.geronimo.system.configuration.LocalAttributeManager.addGBean(LocalAttributeManager.java:320)
at org.apache.geronimo.system.configuration.LocalAttributeManager$$FastClassByCGLIB$$b20ef545.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.apache.geronimo.kernel.config.PersistentConfigurationList$$EnhancerByCGLIB$$d01f9f2b.addGBean(<generated>)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager.addGBeanToConfiguration(EditableKernelConfigurationManager.java:127)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager.addGBeanToConfiguration(EditableKernelConfigurationManager.java:60)
at org.apache.geronimo.kernel.config.EditableKernelConfigurationManager$$FastClassByCGLIB$$daeffab3.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.apache.geronimo.kernel.config.EditableConfigurationManager$$EnhancerByCGLIB$$e6ae163a.addGBeanToConfiguration(<generated>)
at org.activemq.gbean.management.ActiveMQManagerGBean.addConnector(ActiveMQManagerGBean.java:207)
at org.activemq.gbean.management.ActiveMQManagerGBean$$FastClassByCGLIB$$a78b116e.invoke(<generated>)
at net.sf.cglib.reflect.FastMethod.invoke(FastMethod.java:53)
at org.apache.geronimo.gbean.runtime.FastMethodInvoker.invoke(FastMethodInvoker.java:38)
at org.apache.geronimo.gbean.runtime.GBeanOperation.invoke(GBeanOperation.java:122)
at org.apache.geronimo.gbean.runtime.GBeanInstance.invoke(GBeanInstance.java:817)
at org.apache.geronimo.gbean.runtime.RawInvoker.invoke(RawInvoker.java:57)
at org.apache.geronimo.kernel.basic.RawOperationInvoker.invoke(RawOperationInvoker.java:35)
at org.apache.geronimo.kernel.basic.ProxyMethodInterceptor.intercept(ProxyMethodInterceptor.java:96)
at org.activemq.gbean.ActiveMQManager$$EnhancerByCGLIB$$1f9d3f5e.addConnector(<generated>)
at org.apache.geronimo.console.util.PortletManager.createJMSConnector(PortletManager.java:275)
at org.apache.geronimo.console.jmsmanager.server.JMSConnectorPortlet.processAction(JMSConnectorPortlet.java:80)
at org.apache.pluto.core.PortletServlet.dispatch(PortletServlet.java:229)
at org.apache.pluto.core.PortletServlet.doGet(PortletServlet.java:158)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
at org.apache.pluto.core.PortletServlet.service(PortletServlet.java:153)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:574)
at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:499)
at org.apache.pluto.invoker.impl.PortletInvokerImpl.invoke(PortletInvokerImpl.java:120)
at org.apache.pluto.invoker.impl.PortletInvokerImpl.action(PortletInvokerImpl.java:68)
at org.apache.pluto.PortletContainerImpl.processPortletAction(PortletContainerImpl.java:164)
at org.apache.pluto.portalImpl.core.PortletContainerWrapperImpl.processPortletAction(PortletContainerWrapperImpl.java:82)
at org.apache.pluto.portalImpl.Servlet.doGet(Servlet.java:227)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:595)
at javax.servlet.http.HttpServlet.service(HttpServlet.java:688)
at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
at org.apache.geronimo.tomcat.valve.DefaultSubjectValve.invoke(DefaultSubjectValve.java:52)
at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:524)
at org.apache.geronimo.tomcat.GeronimoStandardContext$SystemMethodValve.invoke(GeronimoStandardContext.java:342)
at org.apache.geronimo.tomcat.valve.GeronimoBeforeAfterValve.invoke(GeronimoBeforeAfterValve.java:31)
at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)
at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:667)
at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
at java.lang.Thread.run(Thread.java:534)

The problem seems to be that ActiveMQConnectorGBean.java doesn't provide a source class in its gbean info.  See the attached patch.

Also, please see the following GERONIMO JIRA which describes a similar problem with persisting a new connector across Geronimo restarts (it provides a patch).
    http://issues.apache.org/jira/browse/GERONIMO-1451",Bug
AMQ-746,12481644,,The current implementation resolves the persistence adapter directory via serverInfo.resolve. This causes a problem with the multi-server feature: the journal is located at var/activemq/journal instead of <server name>/var/activemq/journal,Bug
AMQ-556,12481583,,"The o.a.a.store.jdbc.TransactionContext does not correctly process the Statement.SUCCESS_NO_INFO return code from the executeBatch() method.
From http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Statement.html#executeBatch()
""A value of SUCCESS_NO_INFO -- indicates that the command was processed successfully but that the number of rows affected is unknown""
Line 92 should be
                if ( rc[i]!= 1 && rc[i]!=Statement.SUCCESS_NO_INFO) {
instead of 
                if ( rc[i]!= 1 ) {
",Bug
AMQ-895,12483417,12483795,"I'm using ActiveMQ (4.0.1) JMS to JMS Bridge functionality to connect to a  SunMQ JMS Broker (3.6 SP3  (Build 02-A)). I'm using two queues, an input and an output one, with the following configuration:


    <jmsBridgeConnectors>
      <jmsQueueConnector outboundQueueConnectionFactory=""#REMOTE"">
      <outboundQueueBridges>
        <outboundQueueBridge outboundQueueName=""SUNRECV""/>
      </outboundQueueBridges>
      <inboundQueueBridges>
        <inboundQueueBridge inboundQueueName=""SUNSEND""/>
      </inboundQueueBridges>
      </jmsQueueConnector>
    </jmsBridgeConnectors>


The system works really well until the SunMQ broker needed to be restarted. This is what I found:
1.-ActiveMQ is not aware of the remote broker shutdown. I waited for a while, but no log on ActiveMQ indicates knowledge about the new situation.
2.-When I send a message to the output queue SUNRECV, ActiveMQ complains that the producer is closed:

[ERROR][2006/08/25.09:47:12.039][ActiveMQ Session Task]failed to forward message: ActiveMQTextMessage {commandId = 5, responseRequired = false, messageId = ID:trabucco-43457-1156491843149-3:4:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-43457-1156491843149-3:4:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156492032027, arrival = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 2, properties = null, readOnlyProperties = true, readOnlyBody = true, text = 1}([C4064]: Cannot perform operation, producer is closed.)

 After this, it is automatically queueing messages without sending them, showing the log:

[DEBUG][2006/08/25.09:47:42.721][RMI TCP Connection(4)-10.95.89.20]No subscriptions registered, will not dispatch message at this time.

 Even if SunMQ is started again, ActiveMQ is not detecting the new situation, and continues queueing messages sent to SUNRECV.

Please, make me know if more information is needed to understand the situation.
",Bug
AMQ-714,12481737,,"When you define a policy Entry using a wildcard (eg. FOO.>) in the xml configuration it is not applied as expected.

Specifically I was attempting to use a lastImageSubscriptionRecoveryPolicy on all subtopics of FOO.>

If I publish three messages to each of FOO.a, FOO.b and FOO.c and then setup a consumer (retroactive = true) to each of the topics FOO.a, FOO.b and FOO.c I receive three copies of the last message sent to any of the topics  In this case the third message sent to FOO.c.

Expected behaviour would be to receive the last message from each topic that is message three from FOO.a, FOO.b and FOO.c

More troubling is if I setup a new session with a consumer only to FOO.a and FOO.b I receive two copied of the third message sent to FOO.c.  Even though this session is not subscribed to FOO.c, presumably this is because the policy is only keeping the last message that matches the destination and returning it as the last image, regardless of if the topic matches the subscription.

With explicit policy entries for each topic (FOO.a, FOO.b) the broker returns the correct messages, so I believe the problem is with wildcard handling.  I need wildcard support here because I do not know my topic names upfront.  I would think that this would be a common scenario (like setting a last image recovery policy on all stock quotes Stock.> )",Bug
AMQ-758,12481779,,"Specifying Message Groups on the client causes serialized/ single threaded processing of messages on the server side even when server side session pooling is configured.

Please find attached  sample code along with a JUnit test ""MessageGroupTests"" that demonstrates the issue. My sample is based on Lingo. The client calls an async method solve(scenarioName) and receives progress callbacks. When the cleint calls cancel(scenarioName) during a solve, the cancel method on the server side should be received and stop the running solve. Since a single JMS session evexcutes message listeners serially, I've configured a JMS server session pool of size 20 using Spring's DefaultMessageListenerContainer class.

I've configured use of a message group via a Lingo marshaller class org.sanjiv.lingo.client.MessageGroupMarshaller. This class basically sets the JMS header  ""JMSXGroupID"" to the ""scenarioName"" in question so that when a cluster of servers are running, the cancel(scenarioName) call is directed to the server that had solve(scenarioName) called for a given ""scenarioName"".

The issue is that when the message groups are enabled using the MessageGroupMarshaller, the cancel(scenarioName) call blocks and waits for the async solve(scenarioName) method to complete on the server (which is not the right behaviour). Disabling message groups by commenting out the client side MessageGroupMarshaller marshaller in org/sanjiv/lingo/test/messageGroupContext.xml results in the call being excuted correctly.

I see that the docs for message groups say that message order is preserved, however that should not require that the second message blocks till the first message completes. Only the order in which the listeners are executes should be guaranteed to be the order of message receipt.

Let me know if you have any questions.",Bug
AMQ-668,12481286,,"+----------------------------------------
| Executing clean ActiveMQ :: Web
| Memory: 6M/9M
+----------------------------------------
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml
DEPRECATED: the default goal should be specified in the <build> section of project.xml instead of maven.xml

build:end:

Attempting to download rome-.jar.
WARNING: Failed to download rome-.jar.
Attempting to download jdom-.jar.
WARNING: Failed to download jdom-.jar.

BUILD FAILED
File...... /Users/bsnyder/.maven/cache/maven-multiproject-plugin-1.4.1/plugin.jelly
Element... maven:reactor
Line...... 218
Column.... -1
The build cannot continue because of the following unsatisfied dependencies:

rome-.jar
jdom-.jar

Total time   : 1 minutes 21 seconds 
Finished at  : Tuesday, March 28, 2006 1:51:36 PM MST",Bug
AMQ-653,12481633,,These need to be updated to point to the incubator web site.,Bug
AMQ-513,12483917,,"Oracle driver is not supported. This because the getBlob is not implemented.


---------------------------------------stacktrace:
java.lang.IndexOutOfBoundsException
	at java.io.DataInputStream.readFully(DataInputStream.java:263)
	at org.apache.activemq.openwire.BooleanStream.unmarshal(BooleanStream.java:88)
	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:213)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
	at java.lang.Thread.run(Thread.java:534)

2006-01-30 15:28:06,959 DEBUG [tcp:///127.0.0.1:1376] region.AbstractRegion (AbstractRegion.java:75)     - Adding destination: queue://queue
2006-01-30 15:28:07,037 DEBUG [tcp:///127.0.0.1:1376] broker.AbstractConnection (AbstractConnection.java:194)     - Sync error occurred: java.io.IOException: Failed to recover container. Reason: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
java.io.IOException: Failed to recover container. Reason: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:30)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:158)
	at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:49)
	at org.apache.activemq.broker.region.Queue.<init>(Queue.java:88)
	at org.apache.activemq.broker.region.QueueRegion.createDestination(QueueRegion.java:59)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:76)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:188)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:122)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:137)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:122)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:134)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:134)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:255)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:66)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:74)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:66)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:78)
	at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:413)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:275)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:190)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:60)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:82)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:105)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:77)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:534)
Caused by: java.sql.SQLException: Invalid column type: getBLOB not implemented for class oracle.jdbc.driver.T4CNumberAccessor
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:125)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:162)
	at oracle.jdbc.driver.Accessor.unimpl(Accessor.java:387)
	at oracle.jdbc.driver.Accessor.getBLOB(Accessor.java:1324)
	at oracle.jdbc.driver.OracleResultSetImpl.getBLOB(OracleResultSetImpl.java:1223)
	at oracle.jdbc.driver.OracleResultSetImpl.getBlob(OracleResultSetImpl.java:1414)
	at org.apache.commons.dbcp.DelegatingResultSet.getBlob(DelegatingResultSet.java:269)
	at org.apache.commons.dbcp.DelegatingResultSet.getBlob(DelegatingResultSet.java:269)
	at org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter.getBinaryData(OracleJDBCAdapter.java:62)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecover(DefaultJDBCAdapter.java:343)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:147)
	... 25 more",Bug
AMQ-944,12481954,,"It seems that one can nto use multicast in a transportConnector.

Description of the test:
In the distribution, go into /example
Edit the build.xml in order to use multicast. for instance
Change the URL in the build.xml to :
<property name=""url"" value=""multicast://225.0.0.1:61620"" />
Start the producer: ant producer

Here is the output:
    [echo] Running producer against server at $url = multicast://225.0.0.1:61620 for subject $subject = Syntheses
    [java] Connecting to URL: multicast://225.0.0.1:61620
    [java] Publishing a Message with size 1000 to queue: Syntheses
    [java] Using non-durable publishing
    [java] Sleeping between publish 0 ms
    [java] DEBUG MulticastTransport             - Joining multicast address: /225.0.0.1
    [java] DEBUG UdpTransport                   - Consumer thread starting for: multicast://225.0.0.1:61620@0
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /225.0.
0.1:61620 command: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:
0, clientId = ID:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnecto
r = false, manageable = true}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 1 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@698403
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 1 to: /225.0
.0.1:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ConnectionIn
fo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = ID:ZOZMA-2042-115
9347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, manageable = true}
    [java] DEBUG ReliableTransport              - Still waiting for response on: multicast://225.0.0.1:61620@0 to comma
nd: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = I
D:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, mana
geable = true} sending replay message
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /192.9.
211.39:61620 command: ReplayCommand {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 2 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@d02b51
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 2 to: /192.9
.211.39:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ReplayComman
d {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG ReliableTransport              - Processing replay command: ReplayCommand {commandId = 2, firstNakNumb
er = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Buffer: org.apache.activemq.transport.reliable.DefaultReplayBuffer@1b
3f829 replaying messages from: 1 to: 1
*     [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 REDELIVERING datagram: 1 to: /
225.0.0.1:61620*
",Bug
AMQ-849,12481796,,"Noticed that when using copyOnSend feature and compression, sent messages were not being compressed. It was then found that this was due to the fact that the connection that is used to determine whether compression should be performed or not, was null for the copied message. A look into the Message found that the connection and a number of other properties of the Message were not copied in the copy(Message) 

The patch attached copies the remaining properties of the Message to the message copy.",Bug
AMQ-1018,12481902,,"I have deployed my application in Tomcat 5.5.9, which uses Activemq 4.0.1. 

To get ConnectionFactory I have written a method called getConnectionFactory.

Following way i am tring to lookup..
Context ctx = new InitialContext();
Context ctx2= (Context) initCtx.lookup(""java:comp/env"");
ConnectionFactory cf = (ConnectionFactory) ctx2.lookup(""jms/ConnectionFactory"");

3 iterations of start and stop works successfully. But when I start the application 4th time, it executes Context ctx2 = (Context)initCtx.lookup(""java:comp/env""); then it goes to next line. After that it never returns ConnectionFactory. After I notice that the application hangs..

Please find the stack which i got by running ""kill -3 <tomcat-process-pid>
 ",Bug
AMQ-903,12482960,,"I have activemq with a postgresql backend running as a standalone server, and a client application that produces persistent messages in 50 threads. Each time I run my app it pushes as many msg as it can for about 62.5 seconds after which it quits. Although initially it works fast, every time I run my app it produces less messages:

enqueue speed 50 threads: msg/second: 334.18333333333334
             second time: msg/second: 194.15
              third time: msg/second: 123.0
             fourth time: msg/second: 58.61666666666667
              fifth time: msg/second: 19.433333333333334
              sixth time: msg/second: 33.81666666666667
            seventh time: msg/second: 11.783333333333333
              eigth time: msg/second: 24.733333333333334
             ninght time: msg/second: 10.883333333333333

After I ran the above test there seem to be 50241 msg in that queue.

activemq=> select count(1) from activemq_msgs ;
 count
-------
 50241
(1 row)

activemq=> select count(1) from activemq_acks ;
 count
-------
     0
(1 row)

Note that I don't have any message consumers active for this test.

Here is the way the client app connects:

	<bean id=""jmsResourceAdapter""
		class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"" value=""tcp://localhost:61616?wireFormat.cacheEnabled=false&amp;wireFormat.tightEncodingEnabled=false"" />
	</bean>
",Bug
AMQ-890,12481701,,I think this must be an issue running under jdk 1.5 only. It shows up on Mac OS X and Linux 1.5 jvms. Remove and gc() were stumbling over each other and invalidating the iterator. I broke them apart a bit to avoid the exception. Thanks to Alan Robbins for help tracking this down.,Bug
AMQ-957,12482146,,"When running a network of brokers, the first broker shutdown (kill) works.  Subsequent brokers hang after the kill.  Pasted are the significant threads from kill-3 (after the initial kill).


""ActiveMQ ShutdownHook"" prio=10 tid=0x008ee098 nid=0x66 in Object.wait() [0x8e11f000..0x8e11f9f0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x99d61140> (a java.lang.Object)
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:352)
        - locked <0x99d61140> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)
        - locked <0x99d611c8> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:297)
        at org.apache.activemq.network.DiscoveryNetworkConnector.doStop(DiscoveryNetworkConnector.java:191)
        at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:58)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:42)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:398)
        at org.apache.activemq.broker.BrokerService.containerShutdown(BrokerService.java:1040)
        at org.apache.activemq.broker.BrokerService$3.run(BrokerService.java:1017)


I think this goes into DemandForwardingBridgeSupport::stop.  I fixed an issue (submitted in another issue report, I believe) in 4.0.1 for the same thing.  I believe the problem is that the code is expecting to send a message to a broker when it wants to stop the network bridge.  This is problematic, since the broker may be gone.  There could be any of a number of problems going on in the network, and trying to send a message first before closing out the network bridge will only sometimes work.

I can submit a patch for this.",Bug
AMQ-967,12483907,,"
The documentation (http://incubator.apache.org/activemq/resource-adapter-properties.html) suggests that setting maximumRedeliveries to -1 means ""no maximum"", i.e. infinite retries.
However, my tests (and the code) show that -1 is equivalent to 0 (i.e. no redelivery).

The patch attempts to fix this.",Bug
AMQ-1226,12482641,,"Setup:
1 Publisher (single thread)
1 Subscriber
1 DurableTopic
1 Broker (Default configuration)

Steps to reproduce:
1) Publisher sends MapMessages that include a message number (1, 2, 3, ...)

2) Subscriber receives messages and makes sure the message numbers are in order

3) Stop the subscriber and let some messages accumulate on the broker.  Let's assume the last message received was number 11.

4) Restart the subscriber.

5) First several messages can be in reverse order.  I.E.  16, 15, 14, 13, 12

6) Then messages start coming in order.  I.E.   17, 18, 19, ...

Cause:
org.apache.activemq.broker.region.DurableTopicSubscription.deactivate()
When the consumer stops, the deactivate method moves messages that have been dispatched but not acknowledged from the ""dispatched"" LinkedList to the ""pending""  PendingMessageCursor (which is backed by a LinkedList).  These messages must be placed at the beginning of the ""pending"" list because the dispatched messages are chronologically before the pending messages already in the list.  The deactivate method iterates over the ""dispatched"" list and adds each message to the beginning of the ""pending"" list one at a time.  This reverses the order of the messages.

If the messages in question get written to JDBC, the problem can be hidden because the messages get queried in the correct order.

If the prefetch size is set to 1 the problem does not present because there will only be 1 message in the ""dispatched"" list.

Solution:
In the deactivate method, iterate the ""dispatched"" list in reverse order.

Patch against 4.1.1 attached.
",Bug
AMQ-889,12481822,,"A client that uses a transport like the failover transport can damage the broker's ability to deliver messages to other clients and ultimately cause broker resource leaks and message loss. I've found 4 issues starting on the client and ending on the broker that could be improved to make the situation a lot better. In this issue I've provided a patch for #3.

1) A failover client stores session metadata commands like ConsumerInfo in a local state tracker. When failover occurs it replays these commands verbatim to the newly connected-to broker. If the failover transport fails back to the original broker it will replay the same commands with the same ids as it already sent the broker. If the failover happens before the broker notices the old connection has gone this can result in bad mojo. Clients should probably regenerate session, consumer, and maybe connection ids.

2) When the broker detects a duplicate ClientId being sent to it it throws an exception saying so, but this does not stop the broker from processing subsequent messages on that connection. The broker should tear down the connection immediately when it sees a client thrashing about.

3) When a broker receives a certain series of ConsumerInfo add and remove commands with the same ConsumerId it leaks resources. One of the resources leaked is the knowledge of lock owners on messages out in prefetch buffers. This means those messages are stuck forever on the broker and can never be retrieved and never be gc()ed. More below.

4) Messages locked and out in prefetch buffers have no broker-side timeout. If a consumer is up, saying hello to the inactivity monitor, but otherwise doing nothing then its messages are locked forever. The broker should have a janitor that redrives stale messages. This seems like the hardest of the 4 to fix, but is one of the most important.

More on #3: One bad sequence of events is:

1) Consumer 'c' connects to the broker over a failover transport. 
2) c subscribes to a queue and addConsumer() gets called. 
3) c fails away and then fails back.
4) c replays ConsumerInfo to the broker. addConsumer() gets called again and overwrites subscription tracking from the first.

After this the broker will eventually get a double remove and there will be noisy JMX complaints etc., but the serious problem has already occurred in step 4. My patch synchronizes the add step so that the  broker is protected. The individual client will still be a bit confused, and there will still be noise when the second remove comes and JMX can't find the consumer to remove, but the resource and message leaks are taken care of.

I'll file issues on the other 3 problems if they sound valid to you and aren't already entered.",Bug
AMQ-932,12481823,,"Connections to the openwire port that are pathologically broken (for example any http request) or that die in some other way extremely quickly will lead to memory losses of aout 64Kb each time. This happens because many services are stop()ed directly in the middle of start(), and then never stopped for real, or stopped again but on an object tree with an inconsistent state. This is usually also accompanied by the JMX message:

WARN  ManagedTransportConnection     - Failed to unregister mbean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=default,Connection=25

But that is a cosmetic symptom and not critical (and this has otherwise nothing to do with JMX).

My patch is a band-aid that is functional but I'm not very happy with it. The patch changes some service logic so that if stop is called in the middle of start, the stop is instead queued and called at the end of start. There will still be multiple stops, and you'll still see the cosmetic JMX error from the second ineffectual stop, but the first stop cleans up correctly so there are no leaks.

I think there's probably a better solution, but it was tough to see what. I'd appreciate better ideas. Possibly something involving moving the dangerous operations (wire format negotiation etc) out of start?

I am working on a unit test, but I can't promise I will have something to submit. I'm having to play JVM games to detect the problem in a unit test and that might not fly for general purpose use.",Bug
AMQ-1006,12481899,,"In case that multiple consumers with different message selectors are registered for the same destination, messages are not evenly divided.

To reproduce, register 2 consumers for prio 9, one for prio 4. Of 1000 messages with prio 9 both prio 9 consumers should receive 500. Actually, the first consumer gets 667 messages, the second 333.

This is caused by the consumer shifting strategy in the RoundRobinDispatchPolicy which rotates consumers, even if they did not match.

The attached file contains a testcase illustrating the behavior and a patch for RoundRobinDispatchPolicy, that shifts the first matching consumer instead of the first.
",Bug
AMQ-959,12481837,,"When sending messages to composite destinations, for each simple destination a copy of the original message is created an sent. However, it's internal messageId is reused. As the messageId carries the brokerSequenceId, which is used as primary key in the jdbc message store, this is overwritten by the last send. All messages refer to the same store row so that the first acknowledge removes the content for all MessageReferences in memory.

The attached patch creates a copy of the messageId when copying a message.

Regards,
Holger


",Bug
AMQ-1029,12481908,,"The BrokerService keeps the configured TransportConnectors in a list called transportConnectors. In startAllConnectors, the list is traversed and each connector is started through startTransportConnector(). This method checks if JMX is configured, and if so, it called connector.asManagedConnector() which returns a new instance of a TransportConnector. This instance is started.

But in the  transportConnectors list of BrokerService, the old, unstarted object is still existent. Since a TransportConnector starts a TransportServiceDetector thread, the old, unstarted instance contains a TSD that is not active. But the started TSD isn't referenced anymore.

On shutdown, the old, unstarted TC and subsequently TSD are stopped. The ""lost"" instance can't be touched anymore.

My patch does this: During spin-up, startTransportConnector() returns the instance that is started. The started instances are collected in an arraylist, this list replaces transportConnectors after startup.

Thanks to jstrachan for being patient on irc.
",Bug
AMQ-929,12482031,,"XmlSpy reports http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd is invalid with the following message:

<xs:element ref='tns:topic'> makes the content model non-deterministic. Possible causes: name equality, overlapping occurance or substitution groups.

It's complaining because it has no way to validate whether it should validate against tns:topic/tns:queue or the xs:any for the following element

<xs:element name='destination' minOccurs='0' maxOccurs='1'>
   <xs:complexType>
      <xs:choice minOccurs='0' maxOccurs='1'>
         <xs:element ref='tns:queue'/>
         <xs:element ref='tns:topic'/>
         <xs:any/>
      </xs:choice>
   </xs:complexType>
</xs:element>

Possible fix adapted from http://www.thescripts.com/forum/threadedpost1605613.html:

<xs:element name=""destination"" minOccurs=""0"" maxOccurs=""1"">
	<xs:complexType>
		<xs:choice minOccurs=""0"" maxOccurs=""1"">
			<xs:element name=""extensions"">
				<xs:sequence maxOccurs=""1"">
					<xs:any/>				
				</xs:sequence>
			</xs:element>
			<xs:element ref=""tns:queue""/>
			<xs:element ref=""tns:topic""/>
		</xs:choice>
	</xs:complexType>
</xs:element>

But I suspect difficult to fix as the XSD is autogenerated + you'll lose backwards compatability with previous documents. The problem occurs repeatedly throughout the schema.

",Bug
AMQ-1161,12481952,,"PooledSession does not appear to use the Topic supplied to the createPublisher(topic) method. When the publish(Message) method is called on the returned TopicPublisher instance, an UnsupportedOperationException is thrown (""A destination must be specified."").
Some simple digging turns up the fact that the ActiveMQTopicPublisher instance nested inside PooledTopicPublisher gets initialized with a ProducerInfo whose destination is null. Looks like PooledSession.getTopicPublisher() is responsible for creating the publisher from the contained ActiveMQSession, but does not supply a destination (explicitly passes null).

Sample code to recreate issue (also attached is Junit test case):
		ActiveMQTopic topic = new ActiveMQTopic(""test"");
		PooledConnectionFactory pcf = new PooledConnectionFactory();
		pcf.setConnectionFactory(new ActiveMQConnectionFactory(""vm://test""));

		TopicConnection conn = (TopicConnection)pcf.createConnection();
		TopicSession session = conn.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
		TopicPublisher publisher = session.createPublisher(topic);
		publisher.publish(session.createMessage());
",Bug
AMQ-1192,12481986,,"I have added to the STOMP tester so it can take command line args for number of message to be read/sent.  Using this the following tests will show the problems

#1)  All messages are lost when a client does STOMP disconnect

1.1 start a subscriber to read 5 messages
./activemq_tester -d sub -m 5
1.2 start a publisher to publish 10 messages
./activemq_tester -d pub -m 10
1.3 run subscriber again to get the remaining 5 messages
./activemq_tester -d sub -m 5

---> No messages are available for the second run of the test subscriber.  It seems there is no way to shutdown a stomp client without loosing all the messages on that q.

Output here.

-bash-2.05b$ ./activemq_tester -d pub -m 10
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Message.Sending Message: This is message number 0
Sending Message: This is message number 1
Sending Message: This is message number 2
Sending Message: This is message number 3
Sending Message: This is message number 4
Sending Message: This is message number 5
Sending Message: This is message number 6
Sending Message: This is message number 7
Sending Message: This is message number 8
Sending Message: This is message number 9
OK
Sending Disconnect.OK
Disconnecting...OK

--- first run of subscriber ----------------------
-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.Received: MESSAGE, This is message number 0
Received: MESSAGE, This is message number 1
Received: MESSAGE, This is message number 2
Received: MESSAGE, This is message number 3
Received: MESSAGE, This is message number 4
OK
Sending Disconnect.OK
Disconnecting...OK



----- second run of subscriber -----------------
-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.

=======> None of the remaning message numbers 5...9 are available.  They are lost.


2) Now to see the ghost STOMP subscriber problem, hit control-C to stop the subscriber.
Then rerun subscriber and publisher and see the following output.....
(publisher output not shown here, same as before)

-bash-2.05b$ ./activemq_tester -d sub -m 5
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.Received: MESSAGE, This is message number 1
Received: MESSAGE, This is message number 3
Received: MESSAGE, This is message number 5
Received: MESSAGE, This is message number 7
Received: MESSAGE, This is message number 9
OK
Sending Disconnect.OK
Disconnecting...OK


",Bug
AMQ-1147,12481886,,"The cast to the concrete class at ActiveMQManagedConnectionFactory:50 fails:

    public void setResourceAdapter(ResourceAdapter adapter) throws ResourceException {
        this.adapter = (ActiveMQResourceAdapter) adapter;

org.springframework.beans.TypeMismatchException: Failed to convert property value of type [$Proxy63] to required type [javax.resource.spi.ResourceAdapter] for property 'resourceAdapter'; nested exception is java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
Caused by: java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
    at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.setResourceAdapter(ActiveMQManagedConnectionFactory.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:786)
[...]

Spring (2.0.3 build 66) config:

	<aop:aspectj-autoproxy />

	<aop:spring-configured />

	<bean id=""jms.managedConnectionFactory"" class=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"">
		<property name=""resourceAdapter"">
			<ref local=""jms.resourceAdapter"" />
		</property>
	</bean>

	<bean id=""jms.resourceAdapter"" class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"">
			<value>${amq.serverUrl}</value>
		</property>
	</bean>

There's probably a workaround for this, but it's still annoying.",Bug
AMQ-1128,12481849,,"When setting create=false in ActiveMQConnectionFactory.brokerUrl, the VMTransportFactory's doCompositeConnect method fails with:

Invalid connect parameters: {create=false}

Removing this option from the options map when retrieving it fixes this bug.  Patch attached.
",Bug
AMQ-1442,12482472,,"ActiveMQ binary distribution (apache-activemq-4.1.1.tar.gz) has a compatibility issue with the bundled spring binary. xbean-spring-2.8.jar binary is depending on spring-1.2.x binary but the mentioned ActiveMQ distribution comes with spring-2.x binary and it's not compatible. it throws the following exception when you have the default spring-2.x binary :

18:36:34,069 WARN  [ServiceController] Problem starting service jboss.jca:service=RARDeployment,name='activemq-ra.rar'
javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: org.springframework.beans.factory.BeanDefinitionStoreException: Unrecognized xbean element mapping: beans in namespace http://activemq.org/config/1.0
        at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:83)
        at org.jboss.resource.deployment.RARDeployment.startService(RARDeployment.java:109)

to work around this issue, you have to provide a spring-1.2.x binary.

steps to reproduce this problem :
make ActiveMQ embedded inside JBossAS, uncomment 
<config-property-value>xbean:broker-config.xml</config-property-value>
which tells the AMQ to process broker-config.xml

the complete error log is attached
",Bug
AMQ-1321,12482444,,"Default topic SubscriptionRecoveryPolicy is a FixedCountSubscriptionRecoveryPolicy, that can eventually lead to huge amount of memory wasted by messages in topics. James recommended to set it to NoSubscriptionRecoveryPolicy.
I'm sending a patch to do so in 4.1 branch.",Bug
AMQ-1448,12482431,,"After building maven-activemq-perf-plugin as described in http://activemq.apache.org/activemq-performance-module-users-manual.html and then changing to the performance folder, the installed plug-in cannot be found by maven.  The reason is an outdated groupId section for the plugin configuration.

The groupId needs to have .tooling as postfix.  See attached patch file.

",Bug
AMQ-1443,12482418,,"I am trying to build ActiveMQ as found under https://svn.apache.org/repos/asf/activemq/tags/activemq-4.1.1.

The build fails due to missing Log4j dependencies.  I had to change the scope of log4j from runtime to compile to get it compiled.
",Bug
AMQ-1624,12482370,,"After a normal build, the blob-message fileserver webapp dosn't work.
The classes necessary for file-upload will are not included.

The patch include the class-files from fileserver module to the assambly and insert the essential block to the activemq.xml",Bug
AMQ-1480,12481984,,"Every time I read one message (with REST/GET) from a queue with more than 1 message,  two messages are deleted.",Bug
AMQ-1545,12483413,,Opening three browser windows of the Chat sample is resulting in it not working properly.  Each message sent from one window gets picked up by only one of the three browser windows (in rotating fashion).  It is possible to move to a publish-subscribe model for the javascript comprising this example so all windows get each message sent?,Bug
AMQ-1616,12482344,,"According to the JMS Spec, section 4.3.5, ""Closing a closed connection must NOT throw an exception.""",Bug
AMQ-1315,12482342,,The links for the rss and atom view of the queues (in queues.jsp) are broken. They render an error page (something like could not create connection factory). ,Bug
AMQ-1810,12482165,,"If a client tries to connect to the broker and the broker is not available the client can't be stopped because of a deadlock in ActiveMQConnection.

The problem is that the thread that wants to establish the connection is stuck in {{syncSendPacket()}} which is called from inside {{ensureConnectionInfoSent()}} which is {{synchronized}} (and holds the lock on the ActiveMQConnection instance). The call to {{close()}} calls {{stop()}} and this will call {{checkClosedOrFailed()}} which is {{synchronized}}, too, and there is the deadlock.

The patch has removed the {{synchronized}} on the {{ensureConnectionInfoSent()}} and uses a mutex instead to prevent calling the method unsynchronized.

Another problem is that {{PooledConnectionFactory}} is triggered from Spring classes to create connections even if the PooledConnectionFactory was stopped (call to {{stop()}} and the new created connections can not be stopped normally later. 
I have added a {{stopped}} flag that prevents the creation of new connecions after {{stop()}} was called.

I think the issue AMQ-1470 is related to the same problem. 
The patch also contains the patch for AMQ-1791.",Bug
AMQ-1961,12482230,,"I create a vm queue with ten messages. I then create a consumer, dequeue the top message (message #1), and close that consumer. If I then create a second consumer, and try to dequeue the top message (message #2), there is a small chance that this will unexpectedly fail, and the request will time out. This is one problem.

After this happens, examining the queue with a queue browser shows message #2 still on the queue. However, subsequent attempts to dequeue this message will always time out. Messages #3-10 will be in the same state; they will still be in the queue, but they cannot be dequeued. This is a worse problem, as it means that we can not reuse this queue.

The problem arises more frequently as there are more consumers. With two or three consumers, it comes up sporadically. With twenty or more consumers, it happens almost 100% of the time. I've attached a test case which demonstrates the bug consistenty.",Bug
AMQ-1743,12482494,,"The 5.1.0 distribution does not include the xstream jars, which are needed for the new JSON / XML to Java Map translation that is part of the Stomp transport.",Bug
AMQ-1740,12482488,,"The Web console fails with java.lang.NoClassDefFoundError: com/thoughtworks/xstream/XStream while browsing the queues through atom or rss. Please refer to the attached screeshot.

Resolution - 
Copied the latest xstream jar, xstream-1.3.jar, into the lib directory of the activemq distribution (apache-activemq-5.1.0\lib) and restarted activemq. This resolved the issue and now the queues can be browsed through atom or rss.",Bug
AMQ-2170,12483685,,"http://activemq.apache.org/per-destination-policies.html says that the advisory messages available for a destination are
advisoryForConsumed
advisoryForDelivered
advisoryForDiscardedMessages
advisoryForSlowConsumers
advsioryForFastProducers
advisoryWhenFull

However, the page at http://activemq.apache.org/advisory-message.html says
advisoryForConsumed
advisoryForDelivery (different)
advisoryForDiscardingMessages (different)
advisoryForSlowConsumers
advisdoryForFastProducers (different)
advisoryWhenFull

The two pages should say the same thing (currently the 2nd page matches the code); and you should also consider changing the name of 'advisdoryForFastProducers' to be 'advisoryForFastProducers' in the code and the documentation to remove the typo.",Bug
AMQ-1274,12481731,,"If Active MQ is installed in a directory that contains spaces (i.e. E:\Program Files\apache-activemq-4.2-SNAPSHOT) the win32 service wrapper installer does not work.

Just need to add quotes around path variables in bin\win32\wrapper.conf",Bug
AMQ-2213,12483738,,"The equals method return false even when it is executed on the same object for the specialized classes of Session (TopicSession, QueueSession). If those objects are held within a List, the contains method would return false even if the object in question is already in the list. 

This is a minor issue as the cleanups are normally done on the connection level and users shouldn't need to keep track of open sessions for a later cleanup.
 

",Bug
AMQ-1263,12481992,,"Start two brokers in a JDBC master/slave configuration.  One will become master, the other slave.
Shutdown the database.
The slave will immediately begin emitting emitting database connection exceptions messages from the DefaultdatabaseLocker.
Bring up the database again.
The slave continues to emit database error messages and all subsequent attempts by the DefaultdatabaseLocker to issue its locking query will fail.

The problem is that the DefaultdatabaseLocker grabs one db connection at startup and never releases it.  Therefore unless the JDBC connection has an auto-reconnect feature, the slave broker is dead in the water, because its Connection is bad.  The fix is to allocate a new Connection and PreparedStatement on every iteration of the database locker loop, and free the statement/connection on any Exception.

",Bug
AMQ-2334,12483757,,"Shared master/slave setup, described here http://activemq.apache.org/shared-file-system-master-slave.html
Scenario:
1. Transacted consumer receives a message
2. Transacted consumer disconnects prior to committing
3. Transacted consumer #2 receives the same message.

Normally consumer #2 sees that message as getJMSRedelivered() = true.  However, if the broker fails and another takes over from the data dir between step 1 and 3, the redelivery is set as false - even though a consumer has, in fact, seen the message before.  See attached unit test.",Bug
AMQ-2526,12483785,,"Imagine you are processing a few jobs by a thread pool. A timeout is set for the whole batch. A job should send a JMS message. If the timeout expires before all the jobs are completed the pool will interrupt still running jobs. 

Most of the time the interruption will be caught and processed deep inside of ActiveMQ TCP transport classes. While I'm not entirely convinced it's a good idea to shut down and reopen the connection to the ActiveMQ server if a client thread is merely interrupted what really seems ugly is:

15:12:53,745 ERROR [org.apache.activemq.transport.tcp.TcpTransport] Could not stop service: tcp:///x.x.x.x:61616. Reason: java.lang.InterruptedException
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1200)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:245)
	at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:482)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
	at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:499)
	at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:113)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:64)
	at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:87)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:201)
	at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:471)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1214)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1208)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1643)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:227)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)

and the reason for it is that the await call on the CountDownLatch in TcpTransport::doStop will throws an InterruptedException if the calling thread is already interrupted. No attempt is made (in both 5.2 or 5.3) to gracefully process InterruptedException, the exception itself is logged as ERROR with a rather menacing message and the log file gets full of meaningless stack traces although no real harm was done.

Calling latch.await(1,TimeUnit.SECONDS) in a try block seems like a no-brainer but there could be even smarted approaches to processing InterruptedExceptions differently than, say, IOEs and other genuine problems. ",Bug
AMQ-2673,12483660,,"When a Producer is started before a Consumer we get a ""javax.jms.JMSException: Unmatched acknowledege"".

The same application runs fine when a Producer is started after a Consumer.

Attached you will find full repro instruction code and scripts.",Bug
AMQ-2414,12483691,,"JDBC Master/Slave doesn't work properly for mysql cluster when the master and slave brokers are using different MYSQL frontends as would be required in a HA setup.  The code currently locks the database using a TABLE lock which are not cluster wide in mysql.
http://dev.mysql.com/doc/refman/5.1/en/mysql-cluster-limitations-multiple-nodes.html

The default code path uses a SELECT FOR UPDATE to get a lock.  This is supported in mysql cluster.
The attached patch works for me.",Bug
AMQ-2301,12483583,,"Using the AMQ web console and watching the number of currently open connections (http://localhost:8161/admin/connections.jsp), there are a number of empty lines listed. See screenshot.",Bug
AMQ-2674,12483621,,"Slow consumer problem when using java explicit configuration while the same application runs fine when using an equivalent (?) activemq.xml configuration.

Attached you will find full repro instruction code and scripts.",Bug
AMQ-2761,12483482,12483687,"We are seeing an issue with ActiveMQ Topic subscription when there is an uncaught exception.

It appears to be related to an old report (but who knows) :
http://mail-archives.apache.org/mod_mbox/activemq-users/200805.mbox/<17189972.post@talk.nabble.com> 

Basically, what happens is our Consumer (onMessage) was throwing an NPE. After that happens, the consumer no longer receives any more messages.

Following it through in the debugger - when the exception is thrown, what we see is the the ""ActiveMQ Session Task"" thread completes... 
After that, it never seems to execute again. Seems some state in the PooledTaskRunner gets borked? Investigating further - but at first glance it appears it thinks the connection is shutting down...
",Bug
AMQ-2612,12483480,,"Scenario:
1. Configure polling consumer (prefetch=0), with onMessage()-style processing, e.g. with Spring's DefaultMessageListenerContainer.
2. Restart broker.
3. Notice consumer does not consumer messages anymore.

In client application this may show up during short network interruptions as reconnect message in logs/console + processing stoppage.

See http://old.nabble.com/ActiveMQ-reconnect-issue-with-consumer.prefetchSize%3D0-td27574923.html for more context.",Bug
AMQ-2557,12483178,,"This is an exception test with the following set up. 

ProducerTool sends 200000 non-persistent messages to a Topic with the message size = 2000. 

The ConsumerTool that reads the messages from the Topic has a sleep time of 2 msec, thus creating a slow consumer scenario.   

Temp store = 300mb, Topic memoryLimit = 30mb, producerFlowControl = false. 

The consumer begins to receive messages and messages get written out to the temp store as expected, because the slow consumer cannot keep up with the message load and temp topic fills up. However, when the temp store eventually fills as well, the broker goes comatose. It no longer accepts clients connections and stops dispatching messages to the slow consumer.  You'd expect the broker to at least continue dispatching messages to the slow consumer while the producer is blocked awaiting the temp store to free up. If I double the temp store capacity, everyone is a happy camper. I'll attach a thread dump.



",Bug
AMQ-2528,12483585,,"According to the JMS specification, an ""empty string"" message selector indicates no message selector (i.e., all messages should be selected):

""A message selector is a String whose syntax is based on a subset of the SQL92 conditional expression syntax. If the value of a message selector is an empty string, the value is treated as a null and indicates that there is no message selector for the message consumer.""

However, if org.apache.activemq.broker.region.Queue#removeMatchingMessages(String selector)  with selector = """", the following stacktrace is generated:

javax.jms.InvalidSelectorException: 
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:72)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:46)
	at org.apache.activemq.broker.region.Queue.createSelectorFilter(Queue.java:1200)
	at org.apache.activemq.broker.region.Queue.removeMatchingMessages(Queue.java:908)
	at org.apache.activemq.broker.region.Queue.removeMatchingMessages(Queue.java:898)
	at com.invoqsystems.foundation.utility.AMQUtility.deleteMessages(AMQUtility.java:192)
	at com.invoqsystems.foundation.utility.AMQUtilityTest.testDeleteMessages(AMQUtilityTest.java:187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)
	at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)
	at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:71)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
Caused by: org.apache.activemq.selector.ParseException: Parse error at line 0, column 0.  Encountered: <EOF>
	at org.apache.activemq.selector.SelectorParser.generateParseException(SelectorParser.java:1196)
	at org.apache.activemq.selector.SelectorParser.jj_consume_token(SelectorParser.java:1148)
	at org.apache.activemq.selector.SelectorParser.unaryExpr(SelectorParser.java:453)
	at org.apache.activemq.selector.SelectorParser.multExpr(SelectorParser.java:375)
	at org.apache.activemq.selector.SelectorParser.addExpression(SelectorParser.java:344)
	at org.apache.activemq.selector.SelectorParser.comparisonExpression(SelectorParser.java:196)
	at org.apache.activemq.selector.SelectorParser.equalityExpression(SelectorParser.java:141)
	at org.apache.activemq.selector.SelectorParser.andExpression(SelectorParser.java:120)
	at org.apache.activemq.selector.SelectorParser.orExpression(SelectorParser.java:99)
	at org.apache.activemq.selector.SelectorParser.JmsSelector(SelectorParser.java:91)
	at org.apache.activemq.selector.SelectorParser.parse(SelectorParser.java:69)
	... 26 more


",Bug
AMQ-2944,12483836,,"I am using a single broker configured to accept both tcp and ssl connections using the configuration below

<transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
</transportConnectors>

The clients are configured to use the failover transport over ssl to connect to a single broker (e.g. URL: failover:ssl://Host:61616).  Upon startup the client correctly connects to the broker on port 61617 via ssl.  I then simulate a network outage and the transport is interrupted and waits for the connection to become available.  After a short amount of time the Broker detects inactivity on the connection and then drops the connection (viewed via JMX and Jconsole).  When the network connection is restored, the client reconnects to broker on port 61616 using tcp instead of ssl on port 61617 (not good if you require ssl encryption).

It appears that the ordering of the transportConnectors in the activemq.xml file affects which transport is used upon resumption of an interrupted failover transport.  It turns out that upon reconnection the first defined transport will always be used regardless of what transport was specified in the original client connection url.  Changing the ordering to the following fixes the problem and upon reconnection the ssl transport will be used.  However, the reverse issue will occur for clients that originally connection via tcp transport where upon reconnection they will connect via ssl transport instead of tcp.

<transportConnectors>
       <transportConnector name=""ssl"" uri=""ssl://0.0.0.0:61617""/>
       <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
</transportConnectors>",Bug
AMQ-2712,12482327,,"A QueueBrowser cannot be used on a transacted session.  During the call to destroyConsumer(), the call:

            if (session.getTransacted()) {
                session.commit();
            }

will fail and the consumer will not be closed.

Additionally, when calling nextElement(), the ackLater() method (called by beforeMessageIsConsumed(), called by receiveNoWait(), called by nextElement()) will throw a JMSException.

The latter issue may be related to https://issues.apache.org/activemq/browse/AMQ-2659, but the former is not.

The workaround is to always use non-transacted QueueBrowsers and manually handle any issues if you try to consume a message found in the QueueBrowser.",Bug
AMQ-2974,12483510,,"We are using the NMS stomp-client to communicate with ActiveMQ. Our Stomp-Clients are mobile devices connected via GSM and loose the connection from time to time. Therefore we are using durable subscriptions and the clients use a fixed but unique Client-ID. When they loose the connection they can't reconnect because the server doesn't release the (failed) connection.

The server log looks like this:
INFO  | Transport failed: java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///xxx.xxx.xxx.xxx:yyyyy
java.io.IOException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:zzzzz
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
        at org.apache.activemq.transport.stomp.ProtocolConverter$2.onResponse(ProtocolConverter.java:510)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:579)
        at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:58)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1247)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:808)
        at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:768)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:187)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:503)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:192)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:636)
Caused by: javax.jms.InvalidClientIDException: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:242)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:78)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:694)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:83)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:137)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
        ... 10 more

At the same time the NMS-Client logs the following:
StompWireFormat - Received ERROR command: Broker: localhost - Client: client1 already connected from /xxx.xxx.xxx.xxx:yyyyy

The connection is not being released even after more than 10 minutes. I have to restart the ActiveMQ server to be able to reconnect earlier.

For me it looks quite similar to the following Issue: https://issues.apache.org/activemq/browse/AMQ-2831",Bug
AMQ-2917,12483951,,"As per the title, the activemq script is determining the conf/ and data/ directories off ACTIVEMQ_HOME, instead of off ACTIVEMQ_BASE. This has a nasty side effect in that you can't run two different broker instances on the same machine, as the script tries to store the PID for each in the sample place. Ouch! 

Have attached a fix. ",Bug
AMQ-2942,12483823,,"Well, you can however the configuration isn't applied.  This patch sorts that out.  Note that I couldn't automate a test for this as I had to manually kill off one of the brokers to get the behavior to manifest itself, as described [here|http://fusesource.com/issues/browse/MB-733].",Bug
AMQ-3012,12483831,,"Symptom
=======
org.apache.activemq.transport.http.HttpTunnelServlet.java contains the following logic:

    protected BlockingQueueTransport createTransportChannel(HttpServletRequest request, HttpServletResponse response) throws IOException {
...
            clients.put(clientID, answer);
            Transport transport = answer;
            try {
                HashMap options = new HashMap(transportOptions);
                transport = transportFactory.serverConfigure(answer, null, options);
            } catch (Exception e) {
               IOExceptionSupport.create(e);
            }

If the call to transportFactory.serverConfigure(...) throws an exception, IOExceptionSupport.create(e) is called, which wraps the exception in an IOException, but that IOException is never thrown.

Solution
=======
See attached patch file.  Add a ""throw"" clause to propagate the IOException.
",Bug
AMQ-3123,12494988,,"When an ajax client is subscribed to multiple topics, the ""id"" attribute of a returned <response> element indicates to JavaScript which callback function should process the message.  Currently, the MessageListenerServlet returns multiple copies of each message, 1 per subscription.  So all callback functions will receive all messages.

For example, if I send messages 'A1' and 'A2' to /topic/topicA, and messages 'B1' and 'B2' to /topic/topicB, my ajax client gets the following message:
<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
  <response id='handlerB' destination='topic://topicB' >A1</response>
  <response id='handlerB' destination='topic://topicB' >B1</response>
  <response id='handlerB' destination='topic://topicB' >A2</response>
  <response id='handlerB' destination='topic://topicB' >B2</response>
</ajax-response>

Further, these messages are constantly re-delivered to the client.  (They are never removed from the unconsumedMessages linked list in AjaxListener.)

If https://issues.apache.org/jira/secure/attachment/12467757/all_messages_are_delivered_to_ajax_clients.patch from https://issues.apache.org/jira/browse/AMQ-3094 is applied, the duplication is reduced, but the ""id"" values for the ""topicB"" messages are still incorrect.

<ajax-response>
  <response id='handlerA' destination='topic://topicA' >A1</response>
  <response id='handlerA' destination='topic://topicA' >B1</response>
  <response id='handlerA' destination='topic://topicA' >A2</response>
  <response id='handlerA' destination='topic://topicA' >B2</response>
</ajax-response>

I've attached a test which demonstrates the problem.  This patch will conflict with the one attached to AMQ-3094, but the conflicts should be easy to resolve.",Bug
AMQ-3380,12512008,,"This is a pure master/slave setup with multiple transacted exclusive consumers.  When the master is stopped, the exclusive consumer is switched (which seems odd to me).  This would be okay except the prior consumer is not rolled back.  The new consumer does not see all the messages (presumably since the prior consumer was not rolled back).  In rare cases in my environment, I have experienced message loss -- a message does not get sent on the new consumer.",Bug
AMQ-3948,12600391,,"We have a java web-service (running in Jetty) that dynamically instantiates an ActiveMQ queue and send messages to the queue - the messages are integers (i.e. 1, 2, 3, etc). We have from one to many consumers that read from this queue to process these messages. Each consumer is started from a single process but each consumer is running in it's own thread or process. When we have multiple consumers running, they occasionally will pick up the same integer or message from the queue. This is not desired. If a consumer reads a message, we don't want other consumers to retrieve that same message. We're fairly new to ActiveMQ but those we're telling about this issue said it should not be happening. They think it might be that we have an ActiveMQ configuration issue. Could be we need to set a property to prevent this. Just looking for some help. I've attached our applicationContext-mcp-parallelization-activemq XML. We could have configured this incorrectly. We're using the internalAmqConnectionFactory for this queue.",Bug
AMQ-3557,12528266,,"We are trying to upgrade our ActiveMQ installation and have run into some performance issues. I'll attached our activemq.xml file to this bug.

I've setup a fresh SQLServer database for our upgrade tests and using the example Ant tools in the distribution, I've populated a persistent queue with 1,000,000 messages. I then consume those messages using the example Ant consumption script. The producing side works fine. However the performance of the consumption side is extremely poor. To consume just 10,000 of those messages takes over 5 minutes.

The consumer will pause for 4-5 seconds every 200 messages. This is easily visible in the output of the Ant script. We have also traced the DB to see what is happening there and have found that the findNextMessagesStatement takes 4-5 seconds every time it is executed. The statement's ID parameter is increased by 200 every time it is executed.  We also noticed the use of the ""SET ROWCOUNT 10000"" statement setting the maximum number of rows returned from a query at 10000. We also traced previous versions of ActiveMQ and found that SET ROWCOUNT was used much more often, with much smaller values (often 10, 20 or 30).

We have also tested the same setup with version 5.4.0 and did not have the same issues. Consumption speeds with 5.4.0 were normal, with no pauses. Version 5.4.3 did have the problem, however. So there seems to be a regression somewhere between 5.4.0 and 5.4.3 (also affects 5.5.0 and later).

Please let me know if you need more information, including the database traces.
",Bug
AMQ-3303,12506378,,"Null pointer exception when accessing the JSPs if the first jmx server (here activemq-1) in the jmx url is the slave.
findBrokers in RemoteJMXBrokerFacade finds the slave broker but accessing some of its attributes results in a NullPointerException.",Bug
AMQ-3292,12504985,,,Bug
AMQ-3649,12537157,,"
{noformat}
2012-01-03 19:17:50,646 | DEBUG | commit: TX:ID:foo-7365-1325617993757-0:1:1 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
2012-01-03 19:17:50,650 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///bar:13219
java.io.EOFException
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:383)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:361)
	at org.apache.kahadb.page.PageFile.readPage(PageFile.java:779)
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:440)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)
	at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)
	at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1026)
	at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:1777)
	at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:976)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:973)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:874)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:856)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:783)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
2012-01-03 19:17:50,650 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
java.lang.NullPointerException
	at org.apache.activemq.util.DefaultIOExceptionHandler.handle(DefaultIOExceptionHandler.java:54)
	at org.apache.activemq.broker.BrokerService.handleIOException(BrokerService.java:2193)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:804)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
2012-01-03 19:17:50,651 | DEBUG | rollback: TX:ID:foo-7365-1325617993757-0:1:1 syncCount: 2 | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///bar:13219
2012-01-03 19:17:50,651 | DEBUG | Error occured while processing sync command: TransactionInfo {commandId = 229, responseRequired = true, type = 2, connectionId = ID:foo-7365-1325617993757-0:1, transactionId = TX:ID:foo-7365-1325617993757-0:1:1}, exception: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back. | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///bar:13219
javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:420)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
	at org.apache.activemq.util.DefaultIOExceptionHandler.handle(DefaultIOExceptionHandler.java:54)
	at org.apache.activemq.broker.BrokerService.handleIOException(BrokerService.java:2193)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:804)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:270)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 13 more
{noformat}",Bug
AMQ-3567,12528814,,"The process that activemq uses to check if there has been inactivity for a connection has a flaw when it tries to close the connection because of inactivity. The current process generates the following interrupt exception. 

{code} 
2011-10-25 12:13:56,878 | DEBUG | org.apache.activemq.util.ServiceSupport - Could not stop service: tcp://localhost/127.0.0.1:61616. Reason: java.lang.InterruptedException
java.lang.InterruptedException
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1302)
    at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
    at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:553)
    at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:70)
    at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:570)
    at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:132)
    at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
    at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
    at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
    at org.apache.activemq.transport.failover.FailoverTransport.disposeTransport(FailoverTransport.java:207)
    at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
    at org.apache.activemq.transport.failover.FailoverTransport$3.onException(FailoverTransport.java:184)
    at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
    at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)
    at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:265)
    at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:185)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:680)
{code} 

This is caused because the spawned thread in the AbstractInactivityMonitor classes readCheck method calls the onException method. This method will then call the stopMonitorThreads method which subsequently calls the shutdownNow method of the ASYNC_TASKS executor. This call causes the executor to call the interrupt method for all active threads in the executor. The problem is that the calling thread is part of the ASYNC_TASKS executor and therefore it is generating the interrupt exception. 

Here is the stack trace of the call that is causing the interrupt. 

{code} 
Daemon Thread [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@66da9ea4] (Suspended (entry into method interrupt in Thread))   
    Thread.interrupt() line: 902   
    ThreadPoolExecutor$Worker.interruptNow() line: 855   
    ThreadPoolExecutor.shutdownNow() line: 1167   
    InactivityMonitor.stopMonitorThreads() line: 363   
    InactivityMonitor.onException(IOException) line: 264   
    InactivityMonitor$4.run() line: 185   
    ThreadPoolExecutor$Worker.runTask(Runnable) line: 886   
    ThreadPoolExecutor$Worker.run() line: 908   
    Thread.run() line: 680  
{code} 


The solution is to replace the shutdownNow method call with shutdown. Subsequent testing with this change does not cause the interrupt exception. 

I was able to create a testcase that reproduces this issue. The testcase uses the useInactivityMonitor=false attribute to reproduce this issue, thanks Gary for the hint. Unfortunately there aren't any steps that I can use to determine that the raised interrupted exception was raised or not. The test will pass either way. 

A patch will be added to this issue.


",Bug
AMQ-3488,12521829,,"ActiveMQTempDestinations hold onto the source connection that created them. When the source connection is closed, its temporary destinations are deleted. Unfortunately, DestinationInfo commands convey the destination object with its source connection to all other connections on the same VMTransportServer. Hence when these other connections are closed, they attempt to delete the source connection's temporary destination.

Note that enabling marshaling on the VM transport works around this bug because destination serialization and deserialization does not maintain the source connection reference.

This bug was not present in 5.4.2.",Bug
AMQ-3506,12523721,,"When configuring a PooledConnectionFactory with maximumActive=1 and blockIfSessionPoolIsFull=true (default behavior for latter config) it is possible that multiple threads that concurrently try to use the same JMS connection to create a new session might create more sessions than the configured maximumActive limit.

That's because the call to ConnectionPool.createSession() is not synchronized and if multiple threads try to call this method concurrently (on the same underlying JMS connection) then the if-condition in 
{code:java}
SessionKey key = new SessionKey(transacted, ackMode);
SessionPool pool = cache.get(key);
if (pool == null) {
  pool = createSessionPool(key);
  cache.put(key, pool);
}
{code}

will evaluate to true for *all* threads and they all end up creating their own sessionPool using the same SessionKey properties. 
Access to the if-condition needs to be synchronized so that only one session pool gets created. That will ensure that not more than the configured maximumActive number of sessions can get created. ",Bug
AMQ-3514,12525074,,"Hi, 

we are debugging a shutdown problem using the activemq-web-console deployed into jetty. 

It seems as if everything is terminated as expected, apart from a TimerThread which logs to the console about every minute. 

05 Jul 2011 09:03:19,246 DEBUG [Timer-1] org.apache.activemq.web.MessageListenerServlet.debug() -- Cleaning up expired web clients. 

Tracing down the problem indicated one possible cause. 
The web-console package declares the AjaxServlet to send messages via the web to the broker, it extends MessageListenerServlet. 

The init() mehtod of the MessageListenerServlet schedules task 

        clientCleanupTimer.schedule( new ClientCleaner(), 5000, 60000 ); 

but the timer (clientCleanupTimer) is never canceled and according to the javadoc of Timer this can prevent the JVM from shutting down cleanly. 

Patch attached",Bug
AMQ-3518,12525230,,"The MessageServlet used for the REST interface supplied in the demo web app will not correctly use the request body of an HTTP POST request if the content-type header contains more than just the MIME type.

The specification for this header indicates that there can be multiple values in this header.  ",Bug
AMQ-3837,12555021,,"When a client has connected to broker,we can see more than one rows of connections via web console on page titled connections.",Bug
AMQ-3794,12548999,,"The method 
{code:title=org.apache.activemq.transport.ws.StompSocket.java}
public void sendToStomp(StompFrame command) throws IOException {
   outbound.sendMessage(WebSocket.SENTINEL_FRAME, command.toString());
}
{code}

 calls {{toString()}} method of the {{StompFrame}} instance instead of the {{format()}} method. The message body is truncated by the {{toString()}} to 64 chars.",Bug
AMQ-3974,12603501,,"If a JNDI lookup is done for a dynamic or topic called ""a/b"" then another lookup is done for ""a"", then the second lookup returns an instance of org.apache.activemq.jndi.ReadOnlyContext instead of a Queue. Example:
# Object q1 = context.lookup(""dynamicQueues/a/b"");
  This correctly returns a Queue object
# Object q2 = context.lookup(""dynamicQueues/a"");
  This incorrectly returns a ReadOnlyContext object instead of a Queue.

To reproduce:
# drop attached file JNDILookup.java into $ACTIVEMQ_HOME/example/src
# edit build.xml in the example directory to add the following:
{quote}
    <target name=""jndi"" depends=""compile"" description=""Runs JDNI testcase"">
        <echo>Running a Log4j JMS Appender example</echo>
        <java classname=""JNDILookup"" fork=""yes"" maxmemory=""100M"">
            <classpath refid=""javac.classpath"" />
        </java>
    </target>
{quote}
# run by issuing the command ""ant jndi"". 
# Observce that the output is as follows:
{quote}
jndi:
     [echo] Running JNDI testcases
     [java] wrongObjectTypeFound: ERROR q2 is not a queue, q2=org.apache.activemq.jndi.ReadOnlyContext@7ddf5a8f
     [java] wrongDestinationFound: ERROR q2 has unexpected name a, expected a/b
{quote}
The message starting ""wrongObjectTypeFound:"" demonstrates the problem.",Bug
AMQ-3744,12544389,,"The bug affects the ActiveMQ-Fuse Version 5.5.1-fuse-02-02. The version 5.5.1-fuse-00-08 is the last testet with no problem.

when trying to connect to a failover-url with multiple failover nodes, the failover transport connects successful already at the first node, even if it is an inactive slave. 
Then, of course, no session can be started. The consumer is waiting all the time.",Bug
AMQ-3722,12542847,,"Small cosmetic error

The help message printed from activemq-admin browse

{code}
Main browse --amqurl tcp://localhost:61616 --user someUser --pass somePass FOO.BAR
        - Print the message header, custom message header, and message body of all messages in the
          queue FOO.BAR, using someUser as the user name, and somePass as the password
{code}

the ""-pass"" argument above is not recognized, it should be ""-password""


",Bug
AMQ-3669,12539109,,"We fill a queue that is backed by a qmirror with data (persistent) that exceeds the configured memory limit.
The producer (producerFlowControl=""true"" at queue and qmirror) will be throttled when the the limit is reached, no messages are spooled to disk.
As an overall result, we are not able to write a lot of messages into amq.

*Configuration:*

{code:xml} 
	<destinationInterceptors>
		<mirroredQueue copyMessage = ""true"" postfix="".qmirror"" prefix=""""/>
	</destinationInterceptors>

	<destinationPolicy>
		<policyMap>
		  <policyEntries>
			<policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""2mb"" />
			<policyEntry queue=""created.static.for.persistent"" producerFlowControl=""true"" memoryLimit=""1mb"" />
		  </policyEntries>
		</policyMap>
	</destinationPolicy> 

	<destinations>
		<queue physicalName=""created.static.for.persistent"" />
	</destinations>

	<persistenceAdapter>
		<kahaDB directory=""${activemq.base}/data/kahadb""/>
	</persistenceAdapter>
	
	<systemUsage>
		<systemUsage>
			<memoryUsage><memoryUsage limit=""10 mb"" /></memoryUsage>
			<storeUsage><storeUsage limit=""100 mb""/></storeUsage>
			<tempUsage><tempUsage limit=""100 mb""/></tempUsage>
		</systemUsage>
	</systemUsage>
	
	<transportConnectors>
		<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
	</transportConnectors>
 {code}

*Java test code:*

{code} 
    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
    Connection connection = factory.createConnection(""user"", ""pwd"");
    connection.start();
    Session session = connection.createSession(false, Session.CLIENT_ACKNOWLEDGE);
    Destination destination = session.createQueue(""created.static.for.persistent"");
    MessageProducer producer = session.createProducer(destination);
    producer.setDeliveryMode(DeliveryMode.PERSISTENT);
    char[] m = new char[1024];
    Arrays.fill(m, 'x');
    // create some messages that have 1k each
    for (int i = 0; i < 12000; i++) {
      ActiveMQTextMessage message = new ActiveMQTextMessage();
      message.setText(new String(m));
      producer.send(message);
    }
    connection.stop();
    connection.close();
  }

{code} 

*Expectation:*

Messages should be written to disk when the memory limit exceeds, all messages should be available within the queue/topic.

*Result:*

 INFO | Usage Manager memory limit (2097152) reached for topic://created.static.for.persistent.qmirror. Producers will be throttled to the rate at which messages are removed from this destination to prevent flooding it. See http://activemq.apache.org/producer-flow-control.html for more info

Store percent used  : 10 
Memory percent used : 20
Temp percent used   : 0

Interesting: The smaller flow control for the queue (1mb) does not seem to catch but the qmirror does (2mb).
",Bug
AMQ-4673,12662462,,"I have an application that uses activemq-camel and deploys/works fine with GlassFish v3.  I tried to deploy the same application on GlassFish v4 and get this error:

remote failure: Error occurred during deployment: Exception while deploying the app [appname] : The lifecycle method [afterPropertiesSet] must not throw a checked exception. Related annotation information: annotation [@javax.annotation.PostConstruct()] on annotated element [public void org.apache.activemq.camel.component.CamelEndpointLoader.afterPropertiesSet() throws java.lang.Exception] of type [METHOD]. Please see server.log for more details.
Command deploy failed.

It appears that CamelEndpointLoader has a @PostConstruct method that throws an Exception and per the Java EE spec that isn't allowed.  Apparently GlassFish v3 was lenient but v4 is not.

Looking at the code, it is easy to fix.  The afterPropertiesSet method just needs to catch the exceptions from addQueue/addTopic and log them at the end of the method like it does earlier in the method.  If a failure to add these during the method should actually be considered a failure, then something like IllegalStateException or another unchecked exception should be thrown instead.

This fix has been tested and verified to get past the problem.",Bug
AMQ-3849,12556381,,"activemq-core/src/main/proto/journal-data.proto contains several typos in the word 'transaction', spelled as 'transaciton'. These typos also propagate to the Java code and the API, as a result of protobuf compilation.

Will submit a fix in the next hours.",Bug
AMQ-3831,12554314,,"There was an issue in the init.d scripts generated by the maven appassembler plugin that is in ActiveMQ too

http://jira.codehaus.org/browse/MAPPASM-113

{quote}
When using RUN_AS_USER (set to a different user than the current one) su is called to call the script again. The return code of the called script is later ignored and 0 is always returned.

For example, status should return non zero when service is not running, but it returns zero anyway.
{quote}

",Bug
AMQ-4084,12609462,,"When building the broker on a Windows machine, the Linux/Unix specific files are not converted to the correct EOL character.  Specifically, the activemq and activemq-admin script files.  If these files are not converted when the package is built on a Windows machine, then the broker fails to run when deployed on a Linux/Unix machine.",Bug
AMQ-5086,12699227,,"Experience this bug on 5.7.0, I think this is the same on the trunk

using vm transport for a client to connect to an embedded broker, in a multithreaded application, I'm experiencing a an error (sometimes) which appears to be a race condition at startup.

Im using create=false and waitForStart to create a connectionFactory for a client connection
vm://ApplicationName?create=false&waitForStart=120000

The broker service is started in a seperate thread

the client connection is started first. but surprisingly it tries start the brokers transport connector. An apparent glitch follows when the broker service stops and re-start the transport.

{noformat}
2014-03-05 11:07:57,626 [ClientConnection_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Started
[...]
2014-03-05 11:08:07,009 [Main_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Stopped
2014-03-05 11:08:07,011 [Main_thread] INFO  org.apache.activemq.broker.TransportConnector - Connector vm://ApplicationName Started
{noformat}

I look into the activemq source and saw this:

BrokerService.class
{code}
public void start() throws Exception {
[...]
    // in jvm master slave, lets not publish over existing broker till we get the lock
    final BrokerRegistry brokerRegistry = BrokerRegistry.getInstance();
    if (brokerRegistry.lookup(getBrokerName()) == null) {
            brokerRegistry.bind(getBrokerName(), BrokerService.this);
    }
    startPersistenceAdapter(startAsync);
    startBroker(startAsync);
    brokerRegistry.bind(getBrokerName(), BrokerService.this);
{code}

VMTransportFactory.class
{code}
    private BrokerService lookupBroker(final BrokerRegistry registry, final String brokerName, int waitForStart) {
        BrokerService broker = null;
        synchronized(registry.getRegistryMutext()) {
            broker = registry.lookup(brokerName);
            if (broker == null && waitForStart > 0) {
                final long expiry = System.currentTimeMillis() + waitForStart;
                while (broker == null  && expiry > System.currentTimeMillis()) {
                    long timeout = Math.max(0, expiry - System.currentTimeMillis());
                    try {
                        LOG.debug(""waiting for broker named: "" + brokerName + "" to start"");
                        registry.getRegistryMutext().wait(timeout);
                    } catch (InterruptedException ignored) {
                    }
                    broker = registry.lookup(brokerName);
                }
            }
        }
        return broker;
    }
{code}

It appears that create=false and waitForStart only waits for the broker to be added to the BrokerRegistry. However when the brokerService is starts, it seems that the broker is added to the registry before it is started.

I believe some synchronization is missing make the VMTransportFactory wait for the broker not only to be added to the registry, but also fully started.










",Bug
AMQ-4142,12613936,,The SimpleAuthenticationPluginTest sometimes hangs on Hudson,Bug
AMQ-4133,12613301,,"Hello,

we noticed an inconsistent behaviour of stomp+ssl and stomp+nio+ssl with same connector options.

- stomp+ssl works with both {{transport.needClientAuth=true}} and {{needClientAuth=true}} options
- stomp+nio+ssl works with {{transport.needClientAuth=true}} but not with {{needClientAuth=true}}
In this last case it fails with a non-obvious exception:
{noformat}
junit.framework.ComparisonFailure: java.lang.SecurityException: Unable to authenticate transport without SSL certificate.
        at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:74)
        at org.apache.activemq.security.JaasDualAuthenticationBroker.addConnection(JaasDualAuthenticationBroker.java:98)
{noformat}

It would be nice to have a URI parameters validation or the same behaviour with similar connectors.

What do you think?

Unit test which shows the problem attached, sorry for reusing pieces from another bug.",Bug
AMQ-5140,12707722,,"Using hawtio, navigate to activeMQ, select Health in Tree, then Operations.

Both operations Health() and Health list() lead to the exception, although in the attributes section everything is fine!?

Status: Good 

{noformat}
java.lang.ArithmeticException: / by zero
	at org.apache.activemq.broker.jmx.HealthView.healthList(HealthView.java:158)
	at org.apache.activemq.broker.jmx.HealthView.health(HealthView.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at sun.reflect.misc.Trampoline.invoke(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at sun.reflect.misc.MethodUtil.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(Unknown Source)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(Unknown Source)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(Unknown Source)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(Unknown Source)
	at javax.management.StandardMBean.invoke(Unknown Source)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.invoke(AnnotatedMBean.java:198)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(Unknown Source)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(Unknown Source)
	at org.jolokia.handler.ExecHandler.doHandleRequest(ExecHandler.java:98)
	at org.jolokia.handler.ExecHandler.doHandleRequest(ExecHandler.java:40)
	at org.jolokia.handler.JsonRequestHandler.handleRequest(JsonRequestHandler.java:89)
	at org.jolokia.backend.MBeanServerExecutorLocal.handleRequest(MBeanServerExecutorLocal.java:109)
	at org.jolokia.backend.MBeanServerHandler.dispatchRequest(MBeanServerHandler.java:102)
	at org.jolokia.backend.LocalRequestDispatcher.dispatchRequest(LocalRequestDispatcher.java:98)
	at org.jolokia.backend.BackendManager.callRequestDispatcher(BackendManager.java:409)
	at org.jolokia.backend.BackendManager.handleRequest(BackendManager.java:158)
	at org.jolokia.http.HttpRequestHandler.executeRequest(HttpRequestHandler.java:197)
	at org.jolokia.http.HttpRequestHandler.handlePostRequest(HttpRequestHandler.java:137)
	at org.jolokia.http.AgentServlet$2.handleRequest(AgentServlet.java:399)
	at org.jolokia.http.AgentServlet.handle(AgentServlet.java:287)
	at org.jolokia.http.AgentServlet.doPost(AgentServlet.java:256)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1329)
	at io.hawt.web.AuthenticationFilter$2.run(AuthenticationFilter.java:143)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Unknown Source)
	at io.hawt.web.AuthenticationFilter.executeAs(AuthenticationFilter.java:140)
	at io.hawt.web.AuthenticationFilter.doFilter(AuthenticationFilter.java:108)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at io.hawt.web.CORSFilter.doFilter(CORSFilter.java:42)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.ops4j.pax.web.service.internal.WelcomeFilesFilter.doFilter(WelcomeFilesFilter.java:193)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1300)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:445)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceServletHandler.doHandle(HttpServiceServletHandler.java:70)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:534)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1038)
	at org.ops4j.pax.web.service.jetty.internal.HttpServiceContext.doHandle(HttpServiceContext.java:117)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:374)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:972)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
	at org.ops4j.pax.web.service.jetty.internal.JettyServerHandlerCollection.handle(JettyServerHandlerCollection.java:75)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
	at org.eclipse.jetty.server.Server.handle(Server.java:363)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:483)
	at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:931)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:992)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:856)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
	at java.lang.Thread.run(Unknown Source)
{noformat}",Bug
AMQ-4893,12679489,,If we try to copy headers between messages using getProperties and setObjectProperty with those values it now fails since the UTF8Buffer is not in the whitelist of convertable types. I think it should be added as a whitelisted type that gets handled like a string on setObjectProperty (and probably setStringProperty). Otherwise this causes the application code to have to special case String properties and couple to the hawtbuffer implementation detail.,Bug
AMQ-4696,12665911,,"I can add a more detail description if needed but for now to reproduce this you'll need to comment out testUnsubscribe in the JoramJmsTest TopicSessionTest, build a snapshot, uncomment TopicSessionTest in JoramJmsTest and run that.  The testDurableSubscriber will fail.

I have a patch for this, I can post it now or after the patch for AMQ-4596 is posted",Bug
AMQ-4601,12654790,,"Attached a test case that does the following: 

1. Registers 4 consumers. 

2. Sends a message. 

3. When the first message is received, it does the following:
3.1. Unregister the listeners for the consumers. 
3.2. Close the consumers. 
3.3. Rollback the transaction. 

4. Consume the message from a new consumer

After running the test called TestActiveMqRedeliveryIssue you will see in the logs (among others things): 

delivery count 1 
delivery count 5 

The first one corresponds to the first message and the second one to the message that is consumed from the queue after the stop() procedure was called. 

As you can see, the count increased by 4, which is the number of consumers. 

The expected behaviour would be to have the redelivery counter set to 1 when the message is consumed the second time",Bug
AMQ-4588,12653550,,"In order to have the AMQ client run on OpenShift the IdGenerator call 'new ServerSocket(0);' needs to be configurable to be avoided. OpenShift only allows binding to a specific, provided, unique loopback address and a limited set of ports. Ideally there would be a configuration option that allows the stub prefix to be set via a JVM param. The current logic doesn't break OpenShift as the PermissionDenied exception is caught and swallowed but the stack trace is ugly.",Bug
AMQ-4589,12653686,,"Running activemq-web under a container that supports Servlet 3, there is a race condition when resuming continuations that leads to lost messages because the same continuation is resumed multiple times and the second time around the undelivered_message attribute is overwritten. 

Here's an example debug log of the issue under Jetty:

{noformat}
2013-06-19 10:46:51,340 DEBUG o.a.a.web.MessageListenerServlet   - doMessage timeout=25000
2013-06-19 10:46:51,350 DEBUG o.a.a.web.MessageListenerServlet   - received null from ActiveMQMessageConsumer { value=ID:deapp0313-52345-1371228095770-3:126:1:1, started=true }
2013-06-19 10:46:51,350 DEBUG o.a.a.web.MessageListenerServlet   - Suspending continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,053 DEBUG org.apache.activemq.web.AjaxListener   - message is ActiveMQTextMessage {commandId = 4419, responseRequired = true, messageId = ID:deapp0313-52345-1371228095770-1:1:1:1:4415, originalDestination = null, originalTransactionId = null, producerId = ID:deapp0313-52345-1371228095770-1:1:1:1, destination = topic://W2ETopic, transactionId = null, expiration = 0, timestamp = 1371631612606, arrival = 0, brokerInTime = 1371631612628, brokerOutTime = 1371631612629, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@1e5bc429, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {instance=1796}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = {""instance"":{""instanceId"":1796,""changeNo"":217...nput"":true}}}
2013-06-19 10:46:53,062 DEBUG org.apache.activemq.web.AjaxListener   - Resuming suspended continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,063 DEBUG org.apache.activemq.web.AjaxListener   - message for ActiveMQMessageConsumer { value=ID:deapp0313-52345-1371228095770-3:126:1:1, started=true } continuation=org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,064 DEBUG org.apache.activemq.web.AjaxListener   - message is ActiveMQTextMessage {commandId = 4420, responseRequired = true, messageId = ID:deapp0313-52345-1371228095770-1:1:1:1:4416, originalDestination = null, originalTransactionId = null, producerId = ID:deapp0313-52345-1371228095770-1:1:1:1, destination = topic://W2ETopic, transactionId = null, expiration = 0, timestamp = 1371631612644, arrival = 0, brokerInTime = 1371631612644, brokerOutTime = 1371631613022, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@1aab6f51, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {instance=1796}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = {""instance"":{""instanceId"":1796,""changeNo"":217...nput"":true}}}
2013-06-19 10:46:53,064 DEBUG org.apache.activemq.web.AjaxListener   - Resuming suspended continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - GET client=org.apache.activemq.web.AjaxWebClient@7c00281 session=c5qseeifcc9l1n49e7ivdx3at clientId=w2e-gui-0.18586184200830758 uri=/amq query=timeout=120000&d=1371631611528&r=0.4084213834721595&clientId=w2e-gui-0.18586184200830758
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - doMessage timeout=25000
2013-06-19 10:46:53,065 DEBUG o.a.a.web.MessageListenerServlet   - sending pre-existing message
2013-06-19 10:46:53,066 DEBUG o.a.a.web.MessageListenerServlet   - Send 0 unconsumed messages
2013-06-19 10:46:53,065 ERROR org.apache.activemq.web.AjaxListener   - Error receiving message java.lang.IllegalStateException: REDISPATCHED,resumed
java.lang.IllegalStateException: REDISPATCHED,resumed
	at org.eclipse.jetty.server.HttpChannelState.dispatch(HttpChannelState.java:335) ~[jetty-server-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.eclipse.jetty.server.AsyncContextState.dispatch(AsyncContextState.java:109) ~[jetty-server-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.eclipse.jetty.continuation.Servlet3Continuation.resume(Servlet3Continuation.java:186) ~[jetty-continuation-9.0.3.v20130506.jar:9.0.3.v20130506]
	at org.apache.activemq.web.AjaxListener.onMessageAvailable(AjaxListener.java:74) ~[activemq-web-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1343) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129) [activemq-client-5.8.0.jar:5.8.0]
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47) [activemq-client-5.8.0.jar:5.8.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) [na:1.7.0_07]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) [na:1.7.0_07]
	at java.lang.Thread.run(Thread.java:722) [na:1.7.0_07]
2013-06-19 10:46:53,068 DEBUG o.a.a.web.MessageListenerServlet   - Continuation org.eclipse.jetty.continuation.Servlet3Continuation@73d4a75a completed.
{noformat}

The root of the race is that the code uses isSuspended() to check whether a continuation has been resumed, but resume() only resets isSuspended() after the resume request has been processed in the servlet engine. The race-free way to check whether is has been resumed is to check isResumed(), see attached patch. ",Bug
AMQ-4484,12644386,,"At least for duplex NetworkConnectors a consumer for queue:// is added on the remote broker, if there are no statically included destinations.

This is caused by the string ""[]"" incorrectly converted to a list with one element, instead of an empty list.

The attached patch fixes the problem.",Bug
AMQ-4266,12628741,,We missed proton-api as dependency.,Bug
AMQ-5745,12824150,,"Code analysis revealed multiple vulnerable sections of code in ActiveMQ 5.9.0.  A patch file is attached that address the issues below.

activemq-web/src/main/resources/org/apache/activemq/web/prototype.js:700,706

	This code uses the  ""eval()"" function to evaluate JSON code -- this method is deprecated and dangerous and has been replaced by the JSON.parse() method, which is supported in all modern browsers -- considering that less than 2% of modern computers are still using legacy browsers, we believe the code should be upgraded to use the more secure method

activemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java:248
activemq-broker/src/main/java/org/apache/activemq/broker/PropertiesBrokerFactory.java:59
activemq-broker/src/main/java/org/apache/activemq/util/IOHelper.java:257,259
activemq-client/src/main/java/org/apache/activemq/ActiveMQSslConnectionFactory.java:130,162
activemq-client/src/main/java/org/apache/activemq/blob/DefaultBlobUploadStrategy.java:43,58
activemq-client/src/main/java/org/apache/activemq/blob/FTPBlobUploadStrategy.java:41
activemq-client/src/main/java/org/apache/activemq/blob/FileSystemBlobStrategy.java:68,77
activemq-console/src/main/java/org/apache/activemq/console/command/CreateCommand.java:194,218,219
activemq-fileserver/src/main/java/org/apache/activemq/util/IOHelper.java:102,104
activemq-jaas/src/main/java/org/apache/activemq/jaas/TextFileCertificateLoginModule.java:92,127
activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/adapter/BlobJDBCAdapter.java:142
activemq-jdbc-store/src/main/java/org/apache/activemq/store/jdbc/adapter/StreamJDBCAdapter.java:51
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java:198
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/util/DiskBenchmark.java:214,246,270
activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java:68
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/AbstractJmsClientSystem.java:266
activemq-web/src/main/java/org/apache/activemq/web/AjaxServlet.java:67
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/JmsProducerClient.java:356
activemq-tooling/activemq-perf-maven-plugin/src/main/java/org/apache/activemq/tool/reports/XmlFilePerfReportWriter.java:198

	Resource leaks are possible at these code locations (the patched code releases the resources within a finally() statement)

activemq-broker/src/main/java/org/apache/activemq/broker/jmx/DestinationView.java:330
activemq-client/src/main/java/org/apache/activemq/ActiveMQConnectionFactory.java:283,290
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/CallerBufferingDataFileAppender.java:182
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/DataFileAppender.java:391
activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java:568

	NULL dereferences are possible at these code locations

activemq-broker/src/main/java/org/apache/activemq/transport/vm/VMTransport.java:269

	Double-locking of this form is vulnerable to race conditions

activemq-http/src/main/java/org/apache/activemq/transport/http/HttpTunnelServlet.java:196,236
activemq-web/src/main/java/org/apache/activemq/web/MessageServlet.java:278,284

	XSS reflection is possible at these code locations (an XSS filter should be added)

activemq-fileserver/src/main/java/org/apache/activemq/util/RestFilter.java:72

	Path manipulation is possible via "".."" directory traversal

activemq-client/src/main/java/org/apache/activemq/thread/PooledTaskRunner.java:141

	A return statement inside a finally block will cause any exception that might be thrown in the try or catch block to be discarded.

activemq-log4j-appender/src/main/java/org/apache/activemq/util/JmsLogAppender.java:68

	Recording passwords to a logfile in plaintext is inadvisable",Bug
AMQ-5384,12746084,,"AMQ 5.9 gets stuck under 30-50 req/second load when using JDBC persistence - this affects our application as it hangs during performance testing (this happens almost every night).
Following stacktraces indicate that there's a deadlock on DB connection:

Stack logged by C3P0, showing when first DB connection has been picked from the pool:
{noformat}
2014-10-06 08:44:40,646 | INFO  | Logging the stack trace by which the overdue resource was checked-out. | com.mchange.v2.resourcepool.BasicResourcePool | C3P0PooledConnectionPoolManager[identityToken->2x1e6s941raztn6mju110
java.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.
        at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)
        at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)
        at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
        at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:163)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:510)
        at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)
        at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)
        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:433)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
        at java.lang.Thread.run(Thread.java:662)
{noformat}

Following stack shows the same thread pending for second DB connection (without releasing the first one):
{noformat}
""ActiveMQ Transport: tcp:///10.132.7.20:36431@5445"" daemon prio=10 tid=0x000000004119d000 nid=0x61bf in Object.wait() [0x00007f41120d7000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)
	at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1414)
	at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:606)
	- locked <0x00000000fabdd2c0> (a com.mchange.v2.resourcepool.BasicResourcePool)
	at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:526)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)
	at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)
	at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getStoreSequenceId(DefaultJDBCAdapter.java:290)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getStoreSequenceIdForMessageId(JDBCPersistenceAdapter.java:840)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.removeMessage(JDBCMessageStore.java:194)
	at org.apache.activemq.store.memory.MemoryTransactionStore$4.run(MemoryTransactionStore.java:348)
	at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:103)
	at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)
	at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
	at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:69)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:662) 
{noformat}

Problem seems to be related with JDBCMessageStore.removeMessage method:
{code:java}
    public void removeMessage(ConnectionContext context, MessageAck ack) throws IOException {
    	long seq = persistenceAdapter.getStoreSequenceIdForMessageId(ack.getLastMessageId(), destination)[0];
...
{code}

Call to {{removeMessage}} already has one DB connection passed in {{context}} method parameter, but calling {{persistenceAdapter.getStoreSequenceIdForMessageId}} creates another DB connection in the same transaction.

Deadlock occurs when all DB connections are used by {{context}}, so that  {{removeMessage}} can't fetch its own connection.

Possible solution would be to pass {{ConnectionContext}} object to {{persistenceAdapter.getStoreSequenceIdForMessageId}} method, so that the method would reuse same connection.",Bug
AMQ-4971,12689176,,"DemandForwardingBridge sends messages to the other broker and asynchronously waits for ACKs keeping message bodies in heap. Amount of un-ACK-ed messages kept in heap is not limited. If local producer is fast then whole heap will be consumed by messages waiting to be ACK-ed by other broker.
Possible option to fix the issue:
Don't wait for ACK from other broker when forwarding the message if some threshold of un-ACK-ed messages is reached.
",Bug
AMQ-5198,12716030,,"We currently have an object that acts both as a consumer and as a producer over the same queue.

Lazy initialization of the scheduler is not 100% thread safe when a consumer and a producer are created sharing the same connection.


We encountered the following sporadic NPE when a rollback() is invoked:
Caused by: java.lang.NullPointerException
        at org.apache.activemq.thread.Scheduler.executeAfterDelay(Scheduler.java:64)
        at org.apache.activemq.ActiveMQMessageConsumer.rollback(ActiveMQMessageConsumer.java:1278)
        at org.apache.activemq.ActiveMQMessageConsumer$5.afterRollback(ActiveMQMessageConsumer.java:1054)
        at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:157)
        ... 11 more



We believe that the lazy initialized getScheduler() is open for a race condition when a publish and rollback are happening concurrently.

try {
                        result = scheduler = new Scheduler(""ActiveMQConnection[""+info.getConnectionId().getValue()+""] Scheduler"");
                        scheduler.start();
                    } catch(Exception e) {
                        throw JMSExceptionSupport.create(e);
                    }

The suggested fix is to simply invoke the start within the constructor of the Scheduler class.",Bug
AMQ-5059,12695563,,The method MQTTProtocolConverter.onUnSubscribe(UNSUBSRIBE command) does not call checkConnected() to check whether CONNECT has already been received or not. ,Bug
AMQ-5058,12695557,,"The CONNECT.decode() method from mqtt-client had an issue which has been fixed in https://github.com/fusesource/mqtt-client/pull/31
Wit this fix MQTTProtocolConverter.onConnect() can now check for the condition outlined below and return a CONNACK with return code 0x02. 

From MQTT 3.1.1 draft specification

[MQTT-3.1.3-6] A Server MAY allow a Client to supply a ClientId that has a length of zero bytes.
However if it does so the Server MUST treat this as a special case and assign a
unique ClientId to that Client. It MUST then process the CONNECT packet as if
the Client had provided that unique ClientId.
[MQTT-3.1.3-7] If the Client supplies a zero-byte ClientId, the Client MUST also set Clean
Session to 1.
[MQTT-3.1.3-8] If the Client supplies a zero-byte ClientId with Clean Session set to 0, the Server
MUST respond to the CONNECT Packet with a CONNACK return code 0x02
(Identifier rejected) and then close the Network Connection.
[MQTT-3.1.3-9] If the Server rejects the ClientId it MUST respond to the CONNECT Packet with
a CONNACK return code 0x02 (Identifier rejected) and then close the Network
Connection.",Bug
AMQ-5066,12696018,,"When a client sends a SUBSCRIBE message with the same Topic/Filter as a previous SUBSCRIBE message but a different QoS, the Server MUST discard the older subscription, and resend all retained messages limited to the new Subscription QoS. ",Bug
AMQ-5065,12696016,,Retained messages must have a QoS of either the one set by the original publisher of the message or the maximum of the QoS of the subscription QoS granted to a receiver. ,Bug
AMQ-5153,12709191,,LevelDB store does not save the subscribedDestination of the SubscriptionInfo for a durable subscription.  This is important because when a restart happens you have no clue if this durable subscription goes with the topic or to a different topic (because of wildcarding).,Bug
AMQ-5166,12711710,,"The ""failoverProducersAuditDepth"" and ""maxFailoverProducersToTrack"" settings for MessageDatabase are actually used by the underlying MetaData's ActiveMQMessageAuditNoSync instance.  However, the MetaData instance and ActiveMQMessageAuditNoSync may change over the life of the MessageDatabase, and these settings are not perpetuated to the new instances (or restored instances).",Bug
AMQ-5467,12758709,,"When consuming messages in a transaction, the AMQP consumer accepts messages and specifies the transaction they are part of. AMQPProtocolConverter keeps a record of messages accepted in this way. When the transaction is committed, AMQPProtocolConverter assumes that the first and last messages in this 'dispatched in Tx' list form a range, and creates a ranged 'standard ack' MessageAck to cover the messages. The broker then checks that the acks it is processing match messages it has previously dispatched, in PrefetchSubscription#assertAckMatchesDispatched(MessageAck).

If the messages aren't added to the AMQP transaction in sequence, e.g. the assumed 'last id' is actually for a message dispatched before the assumed 'first id' in the sequence, the check fails even though all the messages being acked are in the dispatched list. There is also an implicit assumption in the processing that the ack range is an unbroken sequence, and as a result it would seem possible for messages to be acked that were not actually considered part of the AMQP transaction. This non-sequential ordering can for example happen because a client isn't releasing unconsumed prefetched messages after a rollback of consumed messages, or alternatively is processing higher priority messages before lower priority messages originally dispatched to it earlier. 

To combat these issues, the AMQP transaction commit processing should be updated to use 'individual acks'.",Bug
AMQ-5422,12752894,,"When you attempt to run ActiveMQ on Windows with the activemq.bat file from a directory with spaces (ex: ""C:\Program Files""), you get JVM related error about main class not found.  The problem is that one of the -D values in the ACTIVEMQ_OPTS line needs to have double quotes around it.  Will attach a patch to fix the problem.",Bug
AMQ-5713,12819288,,"While configuring the bridges, if we try to set the doHandleReplyTo parameter in the activemq.xml then a BeanCreationException is thrown.
Below is the sample:

<inboundQueueBridges>
	<inboundQueueBridge
		inboundQueueName = ""inBoundQ""
		localQueueName   = ""localTestQ""
		doHandleReplyTo=""false""/>
</inboundQueueBridges>

Attached is the log file.

The reason could be, the setter/getters are protected in DestinationBridge.java
",Bug
AMQ-6393,12996733,,"The issue is still persist and below is the  scenario.
I am using activemq 5.10 version.For publishing message am using VirtualTopic and also have <virtualTopic selectorAware=""true""/> in broker xml.
I have a consumer queue which consume message from this virtual topic.All the things work fine when the my consumer is up but once the consumer goes down or not active I am loosing the message.After configuring <virtualSelectorCacheBrokerPlugin/> in broker.xml I am getting below error on activemq log console. I have attached my activemq broker config file.
jvm 1 | ERROR | Unable to read persisted selector cache...it will be ignored!
jvm 1 | java.io.EOFException
jvm 1 | at java.io.ObjectInputStream$PeekInputStream.readFully(Unknown Source)[:1.8.0_101]
jvm 1 | at java.io.ObjectInputStream$BlockDataInputStream.readShort(Unknown Source)[:1.8.0_101]
jvm 1 | at java.io.ObjectInputStream.readStreamHeader(Unknown Source)[:1.8.0_101]
jvm 1 | at java.io.ObjectInputStream.<init>(Unknown Source)[:1.8.0_101]
jvm 1 | at org.apache.activemq.plugin.SubQueueSelectorCacheBroker.readCache(SubQueueSelectorCacheBroker.java:115)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.plugin.SubQueueSelectorCacheBroker.<init>(SubQueueSelectorCacheBroker.java:74)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.plugin.SubQueueSelectorCacheBrokerPlugin.installPlugin(SubQueueSelectorCacheBrokerPlugin.java:42)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.addInterceptors(BrokerService.java:2295)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:2156)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:937)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.getAdminConnectionContext(BrokerService.java:2426)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.startVirtualConsumerDestinations(BrokerService.java:2566)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.startDestinations(BrokerService.java:2417)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:667)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:659)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerService.start(BrokerService.java:595)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:73)[activemq-spring-5.10.0.jar:5.10.0]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.8.0_101]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at java.lang.reflect.Method.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1638)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1579)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1509)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:521)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:628)[spring-beans-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)[spring-context-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)[spring-context-3.2.8.RELEASE.jar:3.2.8.RELEASE]
jvm 1 | at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)[xbean-spring-3.16.jar:3.16]
jvm 1 | at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)[xbean-spring-3.16.jar:3.16]
jvm 1 | at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:104)[activemq-spring-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:104)[activemq-spring-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:67)[activemq-spring-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)[activemq-broker-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:87)[activemq-console-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)[activemq-console-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:150)[activemq-console-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)[activemq-console-5.10.0.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:104)[activemq-console-5.10.0.jar:5.10.0]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.8.0_101]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at java.lang.reflect.Method.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at org.apache.activemq.console.Main.runTaskClass(Main.java:262)[activemq.jar:5.10.0]
jvm 1 | at org.apache.activemq.console.Main.main(Main.java:115)[activemq.jar:5.10.0]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)[:1.8.0_101]
jvm 1 | at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at java.lang.reflect.Method.invoke(Unknown Source)[:1.8.0_101]
jvm 1 | at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)[wrapper.jar:3.2.3]",Bug
AMQ-5278,12727671,,"When using AMQP with transformer=jms, redelivered messages have a corrupted payload (payload of all zeros).  Creating this JIRA to link to the already opened Proton JIRA (624) and to provide a unit test for ActiveMQ.

See https://issues.apache.org/jira/browse/PROTON-624 for details.
",Bug
AMQ-5315,12732737,,"We have seen the following NPE setting up a demand forwarding bridge
{code}
java.lang.NullPointerException: null
	at org.apache.activemq.network.DemandForwardingBridgeSupport.collectBrokerInfos(DemandForwardingBridgeSupport.java:365) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport.access$400(DemandForwardingBridgeSupport.java:105) [activemq-broker-5.10.0.jar:5.10.0]
	at org.apache.activemq.network.DemandForwardingBridgeSupport$5.run(DemandForwardingBridgeSupport.java:331) [activemq-broker-5.10.0.jar:5.10.0]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_60]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_60]
	at java.lang.Thread.run(Thread.java:745) [na:1.7.0_60]
{code}

This occurred in one of our tests but only under load so seems to be a race condition of some sort.
",Bug
AMQ-5252,12724421,,"Upgrading from a 5.5.1 broker to 5.10. 
I've managed to work around the issue by making some changes to org.apache.activemq.web.LocalBrokerFacade, but unsure if this is the root issue or a band-aid fix. 

{code}
Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination); 
{code}

returns a AuthorizationDestinationFilter when the code is expecting a org.apache.activemq.broker.region.Queue - calling getNext() on the AuthorizationDestinationFilter returns the expected Queue. 
            

Old code:
{code}
 public void purgeQueue(ActiveMQDestination destination) throws Exception {	
        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);
        for (Iterator i = destinations.iterator(); i.hasNext();) 
        {        	
            Destination dest = (Destination) i.next();
            if (dest instanceof Queue) {
                Queue regionQueue = (Queue) dest;
                regionQueue.purge();
           }
        }
    }
{code}
new:

{code}
 public void purgeQueue(ActiveMQDestination destination) throws Exception {	
        Set destinations = getManagedBroker().getQueueRegion().getDestinations(destination);
        for (Iterator i = destinations.iterator(); i.hasNext();) 
        {        	
            Destination dest = (Destination) i.next();
            if (dest instanceof Queue) {
                Queue regionQueue = (Queue) dest;
                regionQueue.purge();
            }
            else if(dest instanceof  AuthorizationDestinationFilter)
            {
            	AuthorizationDestinationFilter adf = (AuthorizationDestinationFilter)dest;
            	if (adf.getNext() instanceof Queue) 
            	{
            		Queue regionQueue = (Queue)adf.getNext();
                    regionQueue.purge();  
            	}
            }
        }
    }
{code}


Attached is the activemq.xml file we're using to test this - creating a message on the webconsole and then attempting to purge it will fail unless either the code change above is made, or the <plugins> section of activemq.xml is commented out. ",Bug
AMQ-5859,12839891,,"the reconnection attempts logic  based on the reconnection policy seems wrong.

In JmsConnector#doInitializeConnection the loop trying to reconnect to the foreign broker only execute once due to the erroneous test in the while
{code}
while (maxRetries < ++attempt && !connectionSerivce.isTerminating());
{code}
should be
{code}
while (maxRetries > ++attempt && !connectionSerivce.isTerminating());
{code}
",Bug
AMQ-5961,12863111,,"When we run JBoss EAP 6.4 with high load using AMQ 6.2 (ActiveMQ 5.11) everything grinds to a halt after a few hours. We have 170 threads blocked on the same lock:

""default-threads - 1400"" #406720 prio=5 os_prio=0 tid=0x00007f1b8402b800 nid=0xfe2d waiting for monitor entry [0x00007f19ccdd5000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.TransactionContext.setXid(TransactionContext.java:729)
	- waiting to lock <0x000000063ac688b8> (a java.util.HashMap)
	at org.apache.activemq.TransactionContext.end(TransactionContext.java:418)
	at org.apache.activemq.ra.LocalAndXATransaction.end(LocalAndXATransaction.java:98)
	at org.jboss.jca.core.tx.jbossts.XAResourceWrapperImpl.end(XAResourceWrapperImpl.java:118)
	at com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord.topLevelPrepare(XAResourceRecord.java:208)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2530)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2497)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.prepare(BasicAction.java:2074)
	- locked <0x000000067461c090> (a com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.End(BasicAction.java:1485)
	- locked <0x000000067461c090> (a com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction)
	at com.arjuna.ats.arjuna.coordinator.TwoPhaseCoordinator.end(TwoPhaseCoordinator.java:98)
	at com.arjuna.ats.arjuna.AtomicAction.commit(AtomicAction.java:162)

This lock is owned by a thread that is waiting for another lock:

""default-threads - 1381"" #404073 prio=5 os_prio=0 tid=0x00007f1a6403c000 nid=0x7d49 waiting on condition [0x00007f19d8a91000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x000000063ab2a260> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1309)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1303)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:2008)
	at org.apache.activemq.ActiveMQSession$5.afterRollback(ActiveMQSession.java:973)
	at org.apache.activemq.TransactionContext.afterRollback(TransactionContext.java:162)
	at org.apache.activemq.TransactionContext.prepare(TransactionContext.java:482)
	- locked <0x000000063ac688b8> (a java.util.HashMap)
	at org.apache.activemq.ra.LocalAndXATransaction.prepare(LocalAndXATransaction.java:130)
	at com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord.topLevelPrepare(XAResourceRecord.java:213)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2530)
	at com.arjuna.ats.arjuna.coordinator.BasicAction.doPrepare(BasicAction.java:2497)

The locked object is ENDED_XA_TRANSACTION_CONTEXTS in TransactionContext. The thread that has the lock calls afterRollback without first releasing it and afterRollback does not return promptly (not at all in fact, we need to restart the server to fix this). The same can happen with afterCommit, which is also called from within a synchronized block causing a potential deadlock.

I think I have a fix for this and will create a pull request in github, or if you prefer I can send a patch? It simply means moving the external calls out from the synchronized blocks and would both remove the very real deadlock risks and improve performance.",Bug
AMQ-5563,12772304,,"In org.apache.activemq.camel.component.ActiveMQConfiguration

We have default values

    private boolean useSingleConnection = false;
    private boolean usePooledConnection = true;


And the javadoc says
{code}
    /**
     * Enables or disables whether a Spring {@link SingleConnectionFactory} will be used so that when
     * messages are sent to ActiveMQ from outside of a message consuming thread, pooling will be used rather
     * than the default with the Spring {@link JmsTemplate} which will create a new connection, session, producer
     * for each message then close them all down again.
     * <p/>
     * The default value is true so that a single connection is used by default.
     *
     * @param useSingleConnection
     */
    public void setUseSingleConnection(boolean useSingleConnection) {
        this.useSingleConnection = useSingleConnection;
    }


    /**
     * Enables or disables whether a PooledConnectionFactory will be used so that when
     * messages are sent to ActiveMQ from outside of a message consuming thread, pooling will be used rather
     * than the default with the Spring {@link JmsTemplate} which will create a new connection, session, producer
     * for each message then close them all down again.
     * <p/>
     * The default value is false by default as it requires an extra dependency on commons-pool.
     */
    public void setUsePooledConnection(boolean usePooledConnection) {
        this.usePooledConnection = usePooledConnection;
    }
{code}

Notice the javadoc has wrong defaults. Its in fact pooled that is the default.",Bug
AMQ-5903,12849466,,"When using the broker camel component as defined here:  http://activemq.apache.org/broker-camel-component.html

There appears to be an undocumented limitation of the broker component's current implementation. I need to know whether said limitation is by design or an oversight. If it's an oversight then I can submit a patch for it.

This example route does not work as expected - the JMSXGroupID header is lost when received by the broker component.

<route> 
<from uri=""broker:queue:test""/> 
<setHeader headerName=""JMSXGroupID""> 
<constant>123</constant> 
</setHeader> 
<to uri=""broker:queue:test""/> 
</route>

After single stepping with a debugger the component executes this code: https://github.com/apache/activemq/blob/master/activemq-camel/src/main/java/org/apache/activemq/camel/component/broker/BrokerProducer.java#L102

As you can see from the method's implementation it only copies over a fixed set of six well-known headers. All other headers on the inbound message are discarded. Why not copy over every header? Consequently the JMSXGroupID header is not copied, despite being present on the inbound message.

This would appear to be a bug in my opinion as I do not believe we should be loosing any headers on a message in this case.  ",Bug
AMQ-5877,12844064,,"We are unable to read the message with message selector if we follow the below steps in ActiveMQ 5.11.1 
* Start ActiveMQ
* Send Two messages
* Read one message with our selector,Using consumer.recieve() API
* Send One more message, And hold the messageId
* Read the message with the above message Id which we are holding as a selector(""JMSMessageID='"" + messageId + ""'"") immediately.
* Now message we wont able to read, consumer thread will be waiting infinitely

*Note :*  Its required activemq-all-5.11.1.jar,Junit jars need to be in classpath.

Issue reproducible prgoram
{code:java}
import java.util.Properties;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Queue;
import javax.jms.Session;
import javax.naming.Context;
import javax.naming.InitialContext;

import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

/**
 * We are unable to read the message with message selector if we follow the
 * below steps in ActiveMQ 5.11.1
 * <ul>
 * <li>Start ActiveMQ</li>
 * <li>Send Two messages</li>
 * <li>Read one message with our selector,Using consumer.recieve() API</li>
 * <li>Send One more message, And hold the messageId</li>
 * <li>Read the message with the above message Id which we are holding as a
 * selector(""JMSMessageID='"" + messageId + ""'"") immediately.</li>
 * <li>Now message we wont able to read, consumer thread will be waiting
 * infinitely</li>
 * </ul>
 * <b>Note : </b> Its required activemq-all-5.11.1.jar,Junit jars need to be in classpath.
 *
 */
public final class MessageSelectorJunit {

	private static Connection connection = null;
	private static final String CONTEXT_FACTORY = ""org.apache.activemq.jndi.ActiveMQInitialContextFactory"";
	private static final String URL = ""tcp://localhost:61616"";
	private static final String QUEUE_NAME = ""TestQueue"";

	@BeforeClass
	public static void oneTimeSetUp() throws Exception {
		Properties properties = new Properties();
		properties.setProperty(Context.INITIAL_CONTEXT_FACTORY, CONTEXT_FACTORY);
		properties.setProperty(Context.PROVIDER_URL, URL);

		// Connection Creation
		Context context = new InitialContext(properties);
		ConnectionFactory connectionFactory = (ConnectionFactory) context.lookup(""QueueConnectionFactory"");
		connection = connectionFactory.createConnection();
		connection.start();
	}

	@Test
	public void testScenario() throws Exception {
		// Message1
		sendJMSMessage();
		sendJMSMessage();
		getJMSMessage(null);

		// Message2
		String messageId2 = sendJMSMessage();
		String messageSelector = ""JMSMessageID='"" + messageId2 + ""'"";
		Assert.assertNotNull(""Expected message to be read with message selector : "" + messageSelector,
				getJMSMessage(messageSelector));
	}

	private String sendJMSMessage() throws Exception {
		String messageId = null;
		Session session = null;
		MessageProducer producer = null;
		try {
			session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
			producer = session.createProducer(session.createQueue(QUEUE_NAME));

			Message msg = session.createTextMessage(""Test Message"");
			producer.send(msg);

			messageId = msg.getJMSMessageID();
			System.out.println(""Send MessageId : "" + messageId);
		} finally {
			producer.close();
			session.close();
		}
		return messageId;
	}

	private String getJMSMessage(String messageSelector) throws Exception {
		String recievedId = null;
		MessageConsumer consumer = null;
		Session session = null;
		try {
			session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
			Queue queue = session.createQueue(QUEUE_NAME);
			System.out.println(""Started Recieving the message with the message selector : "" + messageSelector);
			consumer = session.createConsumer(queue, messageSelector);
			connection.start();
			Message msg = consumer.receive(1000);
			if (msg != null) {
				recievedId = msg.getJMSMessageID();
				System.out.println(""Message Recieved, Id : "" + msg.getJMSMessageID());
			} else {
				System.out.println(""Message not recieved."");
			}
		} finally {
			consumer.close();
			session.close();
		}
		return recievedId;
	}

	@AfterClass
	public static void oneTimeTearDown() throws Exception {
		if (connection != null) {
			connection.close();
		}
	}
}
{code}",Bug
AMQ-5804,12833170,,"After specifying connection url like:
https://address:443?proxyHost=192.168.1.1&proxyPort=80
I got exception Scheme 'http' not registered
It happens because default schema for proxy is http,
but when we uses https address it registers only https schema in HttpsClientTransport

",Bug
AMQ-5668,12782550,,"Running KahaDB with concurrentStoreAndDispatchTopics=""true"" and sending 3 MQTT messages using different QoS values raises 

{code}
2015-03-17 13:27:48,866 WARN ActiveMQ NIO Worker 2 - Failed to send MQTT Publish:
java.lang.NullPointerException
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.setLastCachedId(AbstractStoreCursor.java:319)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.trackLastCached(AbstractStoreCursor.java:280)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.addMessageLast(AbstractStoreCursor.java:213)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.addMessageLast(TopicStorePrefetch.java:74)
	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.addMessageLast(StoreDurableSubscriberCursor.java:198)
	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:159)
	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:274)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:717)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:510)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:441)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
	at org.apache.activemq.transport.mqtt.MQTTInactivityMonitor.onCommand(MQTTInactivityMonitor.java:147)
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.sendToActiveMQ(MQTTTransportFilter.java:106)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.sendToActiveMQ(MQTTProtocolConverter.java:173)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTPublish(MQTTProtocolConverter.java:445)
	at org.apache.activemq.transport.mqtt.MQTTProtocolConverter.onMQTTCommand(MQTTProtocolConverter.java:210)
	at org.apache.activemq.transport.mqtt.MQTTTransportFilter.onCommand(MQTTTransportFilter.java:94)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.mqtt.MQTTCodec$1.onFrame(MQTTCodec.java:54)
	at org.apache.activemq.transport.mqtt.MQTTCodec.processCommand(MQTTCodec.java:79)
	at org.apache.activemq.transport.mqtt.MQTTCodec.access$400(MQTTCodec.java:26)
	at org.apache.activemq.transport.mqtt.MQTTCodec$4.parse(MQTTCodec.java:194)
	at org.apache.activemq.transport.mqtt.MQTTCodec$3.parse(MQTTCodec.java:160)
	at org.apache.activemq.transport.mqtt.MQTTCodec$2.parse(MQTTCodec.java:123)
	at org.apache.activemq.transport.mqtt.MQTTCodec.parse(MQTTCodec.java:65)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport.serviceRead(MQTTNIOTransport.java:105)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport.access$000(MQTTNIOTransport.java:43)
	at org.apache.activemq.transport.mqtt.MQTTNIOTransport$1.onSelect(MQTTNIOTransport.java:66)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:97)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:744)
{code}",Bug
AMQ-6185,12944842,,"The keep-alive mechanism does not work (no keep-alives are sent), when the connections go over HTTP layer.
The InactivityMonitor closes then the connection and new connection to target is established. This repeats every 30 seconds (the default time out).

E.g.: Let's have a simple broker network. Machine A connects to machine B with duplex network bridge over HTTP...

Machine A config:
<networkConnector duplex=""true"" uri=""static:(http://machineB:61617)"" name=""bridgeToB"" />

Machine B config:
<transportConnector name=""http"" uri=""http://0.0.0.0:61617?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600""/>

When the transport layer is changed to e.g. TCP then keep-alive works and the connection is persistent.
",Bug
AMQ-6350,12988297,,"Blueprint:
{code}
<cm:property-placeholder persistent-id="".."" update-strategy=""reload"" />
<bean id=""pooledConnectionFactory"" class=""org.apache.activemq.jms.pool.PooledConnectionFactory""
        init-method=""start"" destroy-method=""stop"">
...
</bean>
{code}
or Java:
{code}
org.apache.activemq.jms.pool.PooledConnectionFactory pcf = new org.apache.activemq.jms.pool.PooledConnectionFactory();
pcf.start();
...
pcf.stop();
pcf.start();
// producer.send(textMsg);
{code}

Stacktrace:
{code}
Caused by: javax.jms.IllegalStateException: java.lang.IllegalStateException: Pool not open
	at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:159)
	at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
	at org.talend.ipaas.rt.amqsource.AMQEventSource.createJmsSession(AMQEventSource.java:282)
	at org.talend.ipaas.rt.amqsource.AMQEventSource.sendEvent(AMQEventSource.java:117)
	... 2 more
Caused by: java.lang.IllegalStateException: Pool not open
	at org.apache.commons.pool2.impl.BaseGenericObjectPool.assertOpen(BaseGenericObjectPool.java:672)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:339)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:279)
	at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:141)
	... 5 more
{code}",Bug
AMQ-7010,13171677,,"Recently, we upgraded our ActiveMQ instance from {{5.13.2}} to {{5.15.3}}. We basically use an almost default broker setup with KahaDB. Due to our setup, we occasionally run into {{java.io.IOException: No space left on device}}, which until now was fine since the broker would properly ignore them using the {{DefaultIOExceptionHandler}}, and resume its work once space is available again.

After upgrading to {{5.15.3}}, however, we noticed that the broker would actually stop itself following a _no space left_ exception. Digging a little bit, it seems that the change in behavior can be linked to a fix introduced in the {{5.15.0}} release, see AMQ-6625. With this fix, KahaDB would sometimes throw the following exception: {{java.io.IOException: Async Writer Thread Shutdown}} from its {{DataFileAppender}}, which, unfortunately, is not handled by the {{DefaultIOExceptionHandler}} unless {{ignoreAllErrors}} is set to true.

This would basically mean that the {{DefaultIOExceptionHandler}} has become useless in catching only _no space left_ exceptions, which I do not think is the intended behavior. 
h3. How to reproduce
 # Start a broker with default config on a small partition
 # Send a persistent message with web console to any queue
 # Fill the partition by any mean
 # Send more messages with web console, broker is eventually shut down

See the attached broker logs.",Bug
AMQ-6549,13029727,,Wrong logging message,Bug
AMQ-7006,13169695,,The patch referenced in AMQ-5423 only addressed the memory leak for Client-Individual mode. Client mode is still affected as multiple messages are acknowledged with a single ACK.  The single ACK is removed from memory but all the rest remain which grows over time until AMQ crashes or until the client session ends and all the pending ACKs are cleaned up at that point.  At the moment we are having to regularly restart our STOMP clients to prevent the memory leak from causing a crash.,Bug
AMQ-7118,13201770,,"KahaDB store limit can be exceeded with durable subscribers.

AMQ with store limit set, we can observe that the usage continues to increase AFTER PFC is engaged. Given time, this growth stabilizes. The issue of having exceeded the store limit remains.

See below output from KahaDB dump in attachments:

This appears to be caused by checkpointAckMessageFileMap. The log files are not GC'd, and the KAHA_ACK_MESSAGE_FILE_MAP_COMMAND is replicated and the DB log files continue to expand - this can become exponential. Side effect of also not checking storage size in checkpoint update can cause the DB log files to exceed any set limits. The real critical part is the duplicated and leaking Kaha messages which appears to happen with durable subscribers.

 

 

 ",Bug
AMQ-6042,12912765,,"In ActiveMQMessageConsumer, currently the rollback cause is only set for the case auto- or individual-acks. However, it should also be set for the other cases, so that in the rollback() method it can be picked up when creating the poison ack.

{code}
    if (isAutoAcknowledgeBatch() || isAutoAcknowledgeEach() || session.isIndividualAcknowledge()) {
        // schedual redelivery and possible dlq processing
        md.setRollbackCause(e);
        rollback();
    } else {
        // Transacted or Client ack: Deliver the next message.
        afterMessageIsConsumed(md, false);
    }
{code}

I'd suggest to move md.setRollbackCause(e); to before the if().",Bug
AMQ-5316,12732764,,"LoggingBrokerPluggin.logMessageEvents is not used.

It would be good to remove it from the configuration to avoid confusion - patch attached.

It would also be good to remove this from http://activemq.apache.org/logging-interceptor.html



",Bug
AMQ-4781,12671985,,,Bug
AMQ-4500,12645516,,"SparseAckReplayAfterStoreCleanupLevelDBStoreTest extends AMQ2832Test but uses LevelDB.  The test case testAlternateLossScenario is dependent on KahaDB, so it fails under SparseAckReplayAfterStoreCleanupLevelDBStoreTest.

I'll add a patch which skips this test when using LevelDB.
",Bug
AMQ-4427,12640315,,"260 out of 454 failed on the last run, mostl with ""java.net.BindException: Address already in use""
",Bug
AMQ-4415,12639641,,"Problem tests include:

AMQ2584Test 
AMQ2870Test  
QueueMbeanRestartTest 
FailoverTransactionTest
ConcurrentProducerDurableConsumerTest
DurableSubscriptionOfflineTest

The patch adds timeouts, and for the AMQ2584Test and AMQ2870Test does not run the LevelDB instance of the test, as these fail in tearDown, so timeouts do not prevent the tests from hanging.

Note:  Where possible I've changed these from using CombinationTestSupport to JUnit4 Parameterized tests with timeouts defined.  It looks like sometimes if a test which extends CombinationTestSupport turns on AutoFail and a timeout occurs, Maven reports the following:

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

",Bug
AMQ-4265,12628729,,"This test is failing with error:

Failed to start per destination persistence adapter for destination: queue://TEST.QUEUE, options:[KahaDBPersistenceAdapter[/home/jenkins/jenkins-slave/workspace/ActiveMQ-Java7/activemq-core/target/activemq-data/mKahaDB/queue#3a#2f#2fTEST.QUEUE], KahaDBPersistenceAdapter[/home/jenkins/jenkins-slave/workspace/ActiveMQ-Java7/activemq-core/target/activemq-data/mKahaDB/queue#3a#2f#2fTEST.QUEUE]]

",Bug
AMQ-4400,12638584,,"This is one of those once in a blue moon failures, but it just failed on fuse CI the other night.
",Bug
AMQ-4281,12629704,,"This depends on the order the tests are run in.  testConnectionFailsToConnectToVMBrokerThatIsNotRunning will fail if it is run after either testSetExceptionListener or testSetClientInternalExceptionListener.
",Bug
AMQ-4260,12628121,,"MessageGroupLateArrivalsTest fails intermittently on some systems.  In the testConsumersLateToThePartyGetSomeNewGroups test, it looks like sometimes worker2 does not start in time, so worker1 consumes all of it's messages.",Bug
AMQ-4388,12637647,,"I think this is the last of the tests which ironically fail because of the use of platform specific File.seperator.
",Bug
AMQ-4387,12637643,,"All test cases are failing on windows, where only testStompNIOSSLWithCertificate fails on mac or ubuntu",Bug
AMQ-4379,12637246,,The testTransactions case fails because of a hardcoded reference to /tmp,Bug
AMQ-4331,12632900,,"The activemq.xml file used by this test contained:

    <persistenceAdapter>
      <kahaPersistenceAdapter directory=""file:target/amq1095""
          maxDataFileLength=""200000""/>
    </persistenceAdapter>

which is no longer valid.  I fixed the test by changing it to 

    <persistenceAdapter>
      <kahaDB directory=""file:target/amq1095""/>
    </persistenceAdapter>",Bug
AMQ-4389,12637817,,,Bug
AMQ-4342,12633661,,"This test fails intermittently at a point where it expects BrokerView.getMemoryPercentUsage() to return 0, but it returns 1.  The problem here is that getMemoryPercentageUsage returns an int, and that number is truncated when calculated.

I did some debugging and found when the test fails the actual usage is about 0.85%, and when it fails it's only 1.02%.  I'll attach a patch that makes the assertion here slightly more lenient to accommodate for this.
",Bug
AMQ-4463,12641463,,"This fails occasionally with the following messages because of a race condition at startup:

java.lang.AssertionError: No messages received on iteration: 0

",Bug
AMQ-3214,12500963,,"-Have a multi-thread consumers running to consumer messages
-Have Connection to have these :
       		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(brokerUrl);
		connectionFactory.setUseAsyncSend(false);
		connectionFactory.setDispatchAsync(false);
		connectionFactory.setAlwaysSessionAsync(false);
		connectionFactory.setAlwaysSyncSend(true);

-Run the consumers for several hours and profile it
-You will see there are threads with the name ""InactivityMonitor Async Task"" being spawning continuously

This will cause the entire consumer system to slow down eventually due to thread context switching.  

Suggestion to fix: we should not put a limit on the number of ""InactivityMonitor Async Task"" threads to be Max Integer.  There is a bug in Java lib that
it will not stop a thread after a given idle time-to-live. We could fix this in the file InactivityMonitor.java
",Bug
AMQ-3735,12543779,,"I downloaded the latest snapshot of the source today and tried installing the broker as a service using the instructions here: http://www.forwardslashbin.com/?p=46. When running it, apparently the Jetty configuration could not find the path to the conf folder. When removing the jetty.xml file from activemq xml, everything seemed to execute fine. Looking at the revision history, it looks like ${activemq.conf} is new to help externalize conf files. I'll be attaching the wrapper.log to this bug.",Bug
AMQ-3709,12541891,,"We created a monitor that utilizes calls to the web-console to determine stuck messages.  Occasionally, requests come back 404 (because the message disappears between calls) and the monitor dies because the XHTML for that page is invalid.  This patch makes the 404 and 500 pages valid in the eyes of the w3c markup validation service.

Note: I'm placing the patch here because I do not see a place to upload it on this form.  If it appears later, I will attached.

Index: activemq-web-console/src/main/webapp/500.html
===================================================================
--- activemq-web-console/src/main/webapp/500.html	(revision 1242141)
+++ activemq-web-console/src/main/webapp/500.html	(working copy)
@@ -22,8 +22,7 @@
  
 <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> 
  
-<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""> 
-<html> 
+<html xmlns='http://www.w3.org/1999/xhtml'> 
 <head> 
     <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" /> 
     <title>Apache ActiveMQ</title> 
@@ -67,7 +66,7 @@
                     <div class=""top_red_bar""> 
                         <div id=""site-breadcrumbs""> 
                         </div> 
-                        <div id=""site-quicklinks""><P> 
+                        <div id=""site-quicklinks""><p> 
                             <a href=""http://activemq.apache.org/support.html""
                                title=""Get help and support using Apache ActiveMQ"">Support</a></p> 
                         </div> 
@@ -93,7 +92,7 @@
                                     <div class=""navigation""> 
                                         <div class=""navigation_top""> 
                                             <div class=""navigation_bottom""> 
-                                                <H3>Useful Links</H3> 
+                                                <h3>Useful Links</h3> 
  
                                                 <ul class=""alternate"" type=""square""> 
                                                     <li><a href=""http://activemq.apache.org/""
Index: activemq-web-console/src/main/webapp/404.html
===================================================================
--- activemq-web-console/src/main/webapp/404.html	(revision 1242141)
+++ activemq-web-console/src/main/webapp/404.html	(working copy)
@@ -22,8 +22,7 @@
  
 <!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> 
  
-<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd""> 
-<html> 
+<html xmlns='http://www.w3.org/1999/xhtml'> 
 <head> 
     <meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"" /> 
     <title>Apache ActiveMQ</title> 
@@ -67,7 +66,7 @@
                     <div class=""top_red_bar""> 
                         <div id=""site-breadcrumbs""> 
                         </div> 
-                        <div id=""site-quicklinks""><P> 
+                        <div id=""site-quicklinks""><p> 
                             <a href=""http://activemq.apache.org/support.html""
                                title=""Get help and support using Apache ActiveMQ"">Support</a></p> 
                         </div> 
@@ -92,7 +91,7 @@
                                     <div class=""navigation""> 
                                         <div class=""navigation_top""> 
                                             <div class=""navigation_bottom""> 
-                                                <H3>Useful Links</H3> 
+                                                <h3>Useful Links</h3> 
  
                                                 <ul class=""alternate"" type=""square""> 
                                                     <li><a href=""http://activemq.apache.org/""


",Bug
AMQ-3601,12532121,,A no-args constructor should be added to org.apache.activemq.util.ByteSequence,Bug
AMQ-3587,12531000,,"Even when started with an existing log, the LogFileManager initializes activeLogFileCount to zero. This leads to LogFileManager.isPastHalfActive() to incorrectly return false and no JournalEventListener.overflowNotification() being issued.",Bug
AMQ-3450,12518810,,"We have a situation in front of us and its explained as below:

1. We have durable subscriber subscribed to a topic. 
2. This durable subscriber is a perl script which is run by a daemon.
3. The perl script uses stomp to connect to the broker.
4. The perl script wakes up every 5 mins, checks for messages in the topic and processes them in a batch by pre-fetching the messages.
5. The subscriber uses a client acknowledgement and acknowledges only the last message of the batch.
6. We are using AMQ 5.5 with kahaDB persistence.

Now what we see is,

1. Even though the messages are processed in a batch and the last message is acknowledged the inflight count does not come down.
2. Enqueue count, Dequeue count and Dispatch count do not match.
3. The journal files are not getting cleaned up.

I do understand that the journal files would be cleaned up once the references to the messages are lost or removed (i.e. the messages are consumed). But does it have to do anything with the various count attributes I see on the topic?

Also should I expect the inflight count to come down to 0 if client crashes and then consumes all messages after come back live?

I also see that dequeue count stays at 0 even when the dispatch count and the inflight counts change. I believe dequeue count has got a direct relation with messages getting removed from the topic.

Please let me know if there could be any other reason that could cause the journal files to stay back.

Thank you
Hari",Bug
AMQ-3037,12483885,,"When use a ActiveMQMapMessage.setLong(""key"", 200) and then use ActiveMQMapMessage.getInt(""key"") it will throw an Exception.

Exceptions is;
javax.jms.MessageFormatException:  cannot read an int from java.lang.Long
	at org.apache.activemq.command.ActiveMQMapMessage.getInt(ActiveMQMapMessage.java:320)
",Bug
AMQ-484,12481471,,"When transport connector as follows is defined

<transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>

in conjuction with the broker definition of:

<broker useJmx=""true"" />

The resulting TransportConnector created by XBeans from the defintion is provided with the discoveryUri.  However, the BrokerService then replaces that instance with ManagedTransportConnector instance but does not transfer the discoveryUri.  The result is no discovery agent is created for the connector when the connector is started.


",Bug
AMQ-1292,12482009,,commit for 549845 took out the logger imports but it left the logger,Bug
AMQ-1221,12482006,,"I found this problems when I try to consume from a Queue But I didn't when the Queue is a local one !!!!!!!!!!!!!!!!!!!!!

this is what I found in the consol when I run the example :

<<<<<<"""" Caught: java.lang.RuntimeException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.tunisiana.ws.common.audit.AuditMessage
java.lang.RuntimeException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.tunisiana.ws.common.audit.AuditMessage
	at file1.tt2$HelloWorldConsumer.run(tt2.java:197)
	at file1.tt2.main(tt2.java:38)
Caused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.tunisiana.ws.common.audit.AuditMessage
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:33)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:172)
	at file1.tt2$HelloWorldConsumer.run(tt2.java:191)
	... 1 more
Caused by: java.io.IOException: com.tunisiana.ws.common.audit.AuditMessage
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:168)
	... 2 more   """">>>>>
",Bug
AMQ-2707,12483423,,"I built activemq-protobuf from http://svn.apache.org/repos/asf/activemq/activemq-protobuf/trunk/ (r817001).
I changed the configuration of the activemq-protobuf plugin in the activemq-protobuf-test pom.xml to use type {{alt}}.
The plugin generates invalid Java for .proto files defining nested messages.

An example:

{code:title=Simple.proto}
package foo;

message Outer {
  message Inner {
    required string x = 1;
  }
  required Inner inner = 1;
}
{code}

generates code including a method {{Simple.Outer.OuterBean.readExternal}}:

{code:title=Simple.java}
public void readExternal(java.io.DataInput in) throws java.io.IOException {
  assert frozen==null : org.apache.activemq.protobuf.MessageBufferSupport.FORZEN_ERROR_MESSAGE;
  bean = this;
  frozen = null;
  if( in.readBoolean() ) {
    Outer.Inner.Outer.InnerBean o = new Outer.Inner.Outer.InnerBean();
    o.readExternal(in);
    f_inner = o;
  } else {
    f_inner = null;
  }
}
{code}

which fails to compile; it should refer to {{Outer.Inner.InnerBean}} rather than {{Outer.Inner.Outer.InnerBean}}.

I'm attaching a zip containing a patch which I've tested with 4 levels of nesting, & some test .proto files.",Bug
AMQ-1229,12482519,12485942,"org.apache.activemq.util.FactoryFinder.doFindFactoryProperies() correctly consults the current class's loader if Thread.currentThread().getContextClassLoader() is null:

        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        if (classLoader == null) classLoader = getClass().getClassLoader();

newInstance(), however, generates a null pointer exception if Thread.currentThread().getContextClassLoader() is null:

        Class clazz;
        try {
            clazz = Thread.currentThread().getContextClassLoader().loadClass(className);
        } catch (ClassNotFoundException e) {
            clazz = FactoryFinder.class.getClassLoader().loadClass(className);
        }",Bug
AMQ-1054,12481866,,"XAResource.recover seems to fail for 4.x of ActiveMQ:

ERROR IN RECOVERY [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
[Lorg.apache.activemq.command.DataStructure; [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: org.apache.activemq.TransactionContext.recover(TransactionContext.java:508) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.endRecovery(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.icatch.imp.TransactionServiceImp.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.datasource.xa.XATransactionalResource.setRecoveryService(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.icatch.system.Configuration.addResource(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.checkSetup(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createQueueConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 

Also see http://www.atomikos-support.com/forums/viewtopic.php?t=351 (where I borrowed this stack trace from). We have seen similar things in other applications that tried to use ActiveMQ. I think this is a class cast error in ActiveMQ...

With 3.1 there is no problem. ",Bug
AMQ-1439,12482090,,"All occurrences  of connectedCount != minAckCount should be replaced with connectedCount < minAckCount.  The logic should proceed once the minimum number of acks have been achieved.

see http://www.nabble.com/FanoutTransport-Patches-tf4562939s2354.html",Bug
AMQ-1132,12483319,,"When you include activemq-core as a dependency on an empty project, even simplest examples fails with

java.io.FileNotFoundException: /target/test.log (No such file or directory)

exception.

First of all, the core package includes dependency on activeio-core test jar 

    <dependency>
      <groupId>${pom.groupId}</groupId>
      <artifactId>activeio-core</artifactId>
      <optional>false</optional>
      <type>test-jar</type>
    </dependency>

for which I'm not sure is needed.
Second, in this test activeio package logging.properties is configured so that root logger writes into ${basedir}/target/test.log, which causes application to fail. It would be better to set it to write to stdout by default.
",Bug
AMQ-822,12481777,,"UdpTransportFactory contains commented out code that contain symbol that eclipse cannot handle. The following fix was sufficient for code to be compiled without problem:

fateev@fateev:/workplace/fateev/activemq/trunk> svn diff activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java
Index: activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java      (revision 421719)
+++ activemq-core/src/main/java/org/apache/activemq/transport/udp/UdpTransportFactory.java      (working copy)
@@ -161,7 +161,7 @@
          * switch to the target endpoint // based on the last packet that was
          * received // so that all future requests go to the newly created UDP
          * channel Endpoint from = info.getFrom();
-         * System.out.println(""####&#65533;setting the client side target to: "" +
+         * System.out.println(""####setting the client side target to: "" +
          * from); udpTransport.setTargetEndpoint(from); } }; return transport;
          */
     }
fateev@fateev:/workplace/fateev/activemq/trunk>
",Bug
AMQ-126,12481306,,"I'm not seeing how to specify the maximumRetries property, relating to a networkChannel, if I use zeroconf discovery agent.  It looks like the broker dynamically creates a networkChannel once it finds another broker via the zeroconf agent.  The maximumRetries property only applies to the networkChannel which, if specified, must have a URI given as well.  That seems to defeat the purpose of zeroconf.

How can I override the default maximumRetries when using zeroconf?",Bug
AMQ-118,12481221,,"Doing some testing last week, it seemed like the TransientQueueBoundedMessageContainer was dropping messages that did not have an intrested consumer. 

If there was an active consumer, the messages would get delivered, to the consumer.  If the messages were sent to the destination before the consumer was created, the messages would not get delivered to the consumer.",Bug
AMQ-151,12481131,,The requestMap in TransportChannelSupport isn't syncrhonized which in some cases can lead to indefinite freezes when sending packets syncrhonously. This is most likely to occur while using VMTransport.,Bug
AMQ-187,12481130,,"Due to a Problem with Version 1.5 (see other Commit) we tried using Version 2.0. Using Version 2.0 we permanently get an ""failed to build body from bytes"" Error. 

As fas as we analyzed, this normally seems to happen if there is a serilalisation/deserialisation Problem .. but in this Case the Broker, the ""Client"" and the ""Server"" are using all the Same machine/jdk/classes. 

We are simply ""transporting"" an Array of Tile-Requests as the Body of an ObjectMessage (see the Class below). In the Error-Case it seems that the Object-Body of the Message itself is being lost. 
The Message sent by the Client still contains the Object .. the Message received by the Server seems to have lost it's contents.

Any comments/ideas ??


8<-----------------8<----------------8<----------------8<----------
public class TileRequest implements Serializable {
  private Serializable segmentHandle;
  private RenderContext renderContext;
  private Rectangle tile;

public TileRequest(Serializable segmentHandle, RenderContext    
      renderContext, Rectangle tile) {
    this.segmentHandle = segmentHandle;
    this.renderContext = renderContext;
    this.tile = tile;
  }

  public RenderContext getRenderContext() {
    return renderContext;
  }

  public Serializable getSegmentHandle() {
    return segmentHandle;
  }

  public Rectangle getTileRectangle() {
    return tile;
  }
}",Bug
AMQ-188,12481183,,"We implemented a Communication-Protocol handling a Simple Client/Server Connection (using temp-queues) .. we are transporting image-tiles through this Queues. It seems that, if the images reacg a certain size (not specified at the moment) the whole Broker seems to block and does not accept any messages anymore .. therefore the client seems to block too .. 
Any ideas what this could cause ??",Bug
AMQ-208,12481232,,"When running an embedded broker in a Java app which acts as a message producer, I see (via JMX console for the whole app) that some activeMQ broker-related threads, dedicated to handling a TcpTransportChannel, remain alive whereas no client is connected to the broker.

As shown by the stack trace for these threads (see below) it seems that, after the remote client has disconnected, the thread is waiting to be notified by another object so that it can terminate. This issue does not happen every time a client disconnects.

Here is the waiting thread stack trace :

Name: Thread-11
State: WAITING on EDU.oswego.cs.dl.util.concurrent.PooledExecutor@f03c46
Total blocked: 162  Total waited: 10 152

Stack trace: 
java.lang.Object.wait(Native Method)
java.lang.Object.wait(Object.java:474)
EDU.oswego.cs.dl.util.concurrent.PooledExecutor.awaitTerminationAfterShutdown(Unknown Source)
org.codehaus.activemq.util.ExecutorHelper.stopExecutor(ExecutorHelper.java:50)
org.codehaus.activemq.transport.TransportChannelSupport.stopExecutor(TransportChannelSupport.java:472)
org.codehaus.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:196)
org.codehaus.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:658)
org.codehaus.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:134)
org.codehaus.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:430)
org.codehaus.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:438)
org.codehaus.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:233)
EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
java.lang.Thread.run(Thread.java:595)

",Bug
AMQ-210,12481098,,"Steps to reproduce:

2 instances of tomcat 5.0.30, jdk 1.4.2, call it tomcat1 and tomcat2
Each instance is running a webapp with the following config: brokerURL=""peer://someService"", embeddedBroker=(true or false, the behaviour is the same with either setting )

Kill tomcat1:    tomcat2's webapp detects the disconnect and successfully removes the client.
Restart tomcat1: tomcat2's webapp DOES NOT detect the reconnect of tomcat1's webapp or any other peer but continues to hear its own messages. In activemq2.0 it's unable to hear even its own messages.  

When there are at least 3 peers in a cluster this does not occur and peers seem to detect membership changes correctly.

If I am using the peer protocol incorrectly I would greatly appreciate if you let me know. All I am trying to have is 
a network of peers, each with an embedded broker to achieve transparent failover. Thanks a lot.

Igor Kaplansky",Bug
AMQ-189,12481090,,"Attempting to build by executing
> maven
in main project directory.

Receive the following...

==================================================================
==================================================================
ActiveMQ :: Assembly
+----------------------------------------
| Executing default ActiveMQ :: Integration Tests :: Ejb
| Memory: 6M/10M
+----------------------------------------
Attempting to download geronimo-spec-ejb-2.1-rc3.jar.
WARNING: Failed to download geronimo-spec-ejb-2.1-rc3.jar.

BUILD FAILED
File...... C:\Documents and Settings\bconlon\.maven\cache\maven-multiproject-plugin-1.3.1\plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
The build cannot continue because of the following unsatisfied dependency:

geronimo-spec-ejb-2.1-rc3.jar; version override doesn't exist: 2.1-rc3

Total time: 22 seconds
Finished at: Mon Feb 07 11:35:18 CST 2005
==================================================================
==================================================================

This version of geronimo-spec-ejb isn't in ibiblio or in any obvious place on apache or codehaus.  If I remove the ""ejb"" module, the build
will fail as follows:

==================================================================
==================================================================
+----------------------------------------
| Executing default ActiveMQ :: Transport :: HTTP
| Memory: 10M/12M
+----------------------------------------
Attempting to download geronimo-spec-servlet-2.4-rc3.jar.
WARNING: Failed to download geronimo-spec-servlet-2.4-rc3.jar.
Attempting to download org.mortbay.jetty-5.1-SNAPSHOT.jar.

BUILD FAILED
File...... C:\Documents and Settings\bconlon\.maven\cache\maven-multiproject-plu
gin-1.3.1\plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
The build cannot continue because of the following unsatisfied dependency:

geronimo-spec-servlet-2.4-rc3.jar; version override doesn't exist: 2.4-rc3

Total time: 42 seconds
Finished at: Mon Feb 07 11:44:28 CST 2005
==================================================================
==================================================================",Bug
AMQ-220,12481062,,"Please update JCAContainer to use ListableBeanFactory.getBeanNamesForType(Class) rather than blindly trying to instantiate every single bean in the context.

http://svn.activemq.org/trunk/activemq/modules/container/src/java/org/activemq/jca/JCAContainer.java?rev=1&view=auto


    [junit] Error creating bean with name 'abstractInboxCommand': Bean definition is abstract
    [junit] org.springframework.beans.factory.BeanIsAbstractException: Error creating bean with name
 'abstractInboxCommand': Bean definition is abstract
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.checkMergedBeanDefinition(AbstractBeanFactory.java:653)
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
    [junit]     at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:145)
    [junit]     at org.codehaus.activemq.jca.JCAContainer.afterPropertiesSet(JCAContainer.java:77)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1065)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:343)
    [junit]     at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:260)",Bug
AMQ-191,12481385,,"I have the following configuration
- 1 Producer (P)
- 1 Consumer (C)
- 1 Broker
- ActiveMQ 2.0
- DerbyDB Persistence

======================
With reliable protocol:
  P ----> sends 20000 messages ------> AMQ ----> Sends  1331 Messages  ----> C

  After the test I browsing the persistence with ij tool and don't see any messages!!!!

>java -Dderby.system.home=/export/home/jms/activemq/var -Dij.connection.derbydb=jdbc:derby:derbydb org.apache.derby.tools.ij
        ij version 10.0 (C) Copyright IBM Corp. 1997, 2004.
        DERBYDB* -      jdbc:derby:derbydb
        * = current connection
        ij> select container,COUNT(*) as quantity  from ACTIVEMQ_MSGS group by container;
        CONTAINER  |QUANTITY
        ------------------------------------
        0 rows selected
        ij> select * from  activemq_msgs;
        ID|CONTAINER |MSGID |MSG
        ------------------------------------
        0 rows selected

======================
Without reliable protocol
  P-->Sends 20000 messages-->AMQ-->Sends 20000 Messages--> C

the details logs from ActiveMQ 2.0, Consumer  and Producer are in http://www.gps.cl/logs.zip (133Kb)",Bug
AMQ-222,12481122,,"My application seems to be triggering a memory leak in the broker when using the Derby store under load with 2.1. I haven't been able to reproduce the condition, but here's a quick breakdown of how I'm using the broker:
- A single queue that passes large ObjectMessages from 11 writers to a single reader
- A topic that messages small ObjectMessages to 11 readers from a single writer

The message frequency is about 1 per second max, with normal rates being about 2 per minute (very low). I'm using the default derby store, with two connectors listening on two different interfaces. The clients all have a manual reconnect if they get a JMS exception, closing and re-opening the connection to the broker.

After about a week of production runtime, the broker seems to start generating OutOfMemoryErrors. It seems to keep accepting TCP connections when in this state, but the clients that connect to it hang during the connect. ",Bug
AMQ-209,12481030,,"Hello,

Use the configuration activemq.xml and jndi.properties attached in the test.zip file.

Compile the sources (package protojms).

Start the IMEISubscriber.
Start the IMEIPublisher.
Kill the IMEISubscriber then kill the IMEIPublisher.
Restart the IMEISubscriber: you will see that some of the persistent message have not been received by this durable subscriber !

Bug in activeMQ or in my program ? 

I have tested this within JORAM : no pb!


I have other questions:
   1) For persistence performance what is recommended ? (BerkeleyDB, ....)
   2) In order to use BerkeleyDB what are the optional jars that I have to put in the 
      classpath ?
   3) Using Joram it is not manadatory to set the clientID, I have read the spec but nothing 
      has been said regarding this API. Could you give me some explanations regarding this 
      API ?
",Bug
AMQ-227,12481017,,"ActiveMQ clients that ActiveMQ have the same client id, that is ""clientid"". This makes ActiveMQ complain about it.
Client is only using queues.
",Bug
AMQ-225,12481111,,"Hi Ben,

That's our db auto detection code not working right.  Seems like you  
oracle driver is reporting Oracle_JDBC_driver as the type of driver.   
But we were expecting to get Oracle_JDBC_Driver (case is different).
Since auto detection is not working for you (I'll work on getting this  
right for the next release), you should change the persistence config  
so it looks like:

 <persistence>
       <cachePersistence>
         <journalPersistence directory=""../var/journal/"">
           <jdbcPersistence dataSourceRef=""oracle-ds""   adapterClass=""org.codehaus.activemq.store.jdbc.adapter.OracleJDBCAdapter""/>
         </journalPersistence>
       </cachePersistence>
     </persistence>

Regards,
Hiram

On Mar 16, 2005, at 10:40 AM, Ben.Temperton@... wrote:

> Hi,
>
> I'm trying to set up active MQ to persist its message store in an  
> oracle
> database.
> I've added the following to my activemq.xml file:
>
> <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource""
> destroy-method=""close"">
>     <property name=""driverClassName"">
>       <value>oracle.jdbc.driver.OracleDriver</value>
>     </property>
>     <property name=""url"">
>       <value>jdbc:oracle:thin: <at> myserver:1521:mydb</value>
>     </property>
>     <property name=""username"">
>       <value>activemq</value>
>     </property>
>     <property name=""password"">
>       <value>activemq</value>
>     </property>
>     <property name=""poolPreparedStatements"">
>       <value>true</value>
>     </property>
>   </bean>
>
> and to my <broker> tag I have added the following:
>
> <persistence>
>       <cachePersistence>
>         <journalPersistence directory=""../var/journal/"">
>           <jdbcPersistence dataSourceRef=""oracle-ds""/>
>         </journalPersistence>
>       </cachePersistence>
>     </persistence>
>
>
> When I start up activeMQ using ""activemq.bat"", ActiveMQ creates the  
> tables
> required in mydb. However, in full debug mode, it throws the following
> warning:
>
> 15:34:28 WARN  Unrecognized database type (Oracle_JDBC_driver).  Will  
> use
> default JDBC implementation.
> 15:34:28 DEBUG Reason: java.io.IOException: Could not find class for
> resource: META-INF/services/org
> /codehaus/activemq/store/jdbc/Oracle_JDBC_driver
> java.io.IOException: Could not find class for resource:
> META-INF/services/org/codehaus/activemq/store/jdbc/Oracle_JDBC_driver
>         at
> org.codehaus.activemq.util.FactoryFinder.doFindClass(FactoryFinder.java 
> :76)
",Bug
AMQ-207,12483911,,"The logic in CompositeTransportChannel.establishConnection appears incorrcet.

...
                if (incrementTimeout && time < maximumTimeout) {
                    time *= 2;
                    time = time > maximumTimeout ? maximumTimeout : timeout;
                }
...

should be:

...
                if (incrementTimeout && time < maximumTimeout) {
                    time *= 2;
                    time = time > maximumTimeout ? maximumTimeout : time;
                }

Otherwise if zeroconfig fails to get a connection, the sleep time is approx. 30s.
",Bug
AMQ-214,12481254,,"Our 

        protected Class resolveClass(ObjectStreamClass v) throws ClassNotFoundException{
            ClassLoader cl = Thread.currentThread().getContextClassLoader();
            try {
                if (cl != null){
                    return cl.loadClass(v.getName());
                } else {
                    return Class.forName(v.getName());
                }
            } catch ( ClassNotFoundException e ) {
                return ACTIVEMQ_CLASSLOADER.loadClass(v.getName());
            }
        }

The Serilaization helper class does not handle loading class arrays.  The class name will be something like ""[java.lang.String"" but cl.loadClass does not handle classes in that format.",Bug
AMQ-223,12481059,,"We are having OutOfMemoryErrors in the broker.  Its configured for vmPersistence, messages have 60 second TTL.  I have checked Queues using Hermes (what a bitch that is to setup with ActiveMQ) and they are empty as expected.  We are using RPC style messaging, with TemporaryQueues for responses, if that helps at all.

The broker can run for a week before running out of memory, but it is related to how many connections are made.  We run 2-3 batch processes each morning that create a few thousand Connections.  Our broker continually grows, even when all consumers and producers are shutdown.

Profiling with YourKit shows the 63% of the broker memory (after GC) is held by 3292 instances of TcpTransportChannel, held by TcpTransportServerChannel.  Note, as mentioned above there are no active connections, so this doesn't appear to be a bug in our code.

This is possibly related to AMQ-125 (fixed 1.2), and AMQ-222.  It seems to be the same problem as mentioned by Charles Anthony ""Possible Memory Leak ?"" on activemq-user.  I could not find any update on that thread.

We will workaround this, by holding connections in a ThreadLocal, since there are only a few threads in a few daily processes.  But regardless, we can expect this growth to continue albeit a much slower pace.",Bug
AMQ-216,12481179,,"> cd activemq-release-2.1
> maven
[...]
    [echo] Building EAR activemq-itest-ear-2.1 with appxml ""/uyn0/andrew/nsa/messaging-system/activemq/activemq-release-2.1/itests/ear/target/application.xml""

BUILD FAILED
File...... /user/andrew/.maven/cache/maven-multiproject-plugin-1.3.1/plugin.jelly
Element... maven:reactor
Line...... 217
Column.... 9
Unable to obtain goal [ear:ear] -- /user/andrew/.maven/cache/maven-ear-plugin-1.6/plugin.jelly:99:24: <ant:fail> Case-sensitive issue: The dependency activemq:activemq-itest-ejb has a case problem.  The dependency was either retrieved in the past with the wrong case or has been specified with the wrong case in your project.xml file.  Fix your project.xml or update your local repository with the properly-cased file and try again.
Total time: 23 minutes 56 seconds
",Bug
AMQ-313,12481297,,"While looking for another problem I pulled a Full Thread dump on the broker.  I found several dozen threads
with the following stack trace and they look very troublesome to me. If an error occurs on an async send, 
due to a broken client connection, the close is failing in such a manner as to lock up the pooled thread.

This looks to me like there could be some sort of bug in the concurrent-1.3.4.jar library code.  
""Thread-292"" daemon prio=1 tid=0x085b6008 nid=0x6663 in Object.wait() [5cd59000..5cd59cd8]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x47eb41c0> (a EDU.oswego.cs.dl.util.concurrent.PooledExecutor)
        at java.lang.Object.wait(Object.java:429)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.awaitTerminationAfterShutdown(Unknown Source)
        - locked <0x47eb41c0> (a EDU.oswego.cs.dl.util.concurrent.PooledExecutor)
        at org.activemq.util.ExecutorHelper.stopExecutor(ExecutorHelper.java:50)
        at org.activemq.transport.TransportChannelSupport.stopExecutor(TransportChannelSupport.java:487)
        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:218)
        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:694)
        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:137)
        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:489)
        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:261)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:534)
 
",Bug
AMQ-261,12481295,,Cook reported that we have broker the wire Format.,Bug
AMQ-310,12481142,,"This may or may not be a bug.  I can not get a clear determination from the JMS specification, but from experience with a couple of other JMS products, I was suprized to find that destination names are case sensitive.  

myqueue != MYQUEUE

Can anyone comment on the intended policy for ActiveMQ.",Bug
AMQ-239,12481325,,"The ssl file in the META-INF directory doesn't exist in the 3.0 binary release jar file.  Simple example that uses SSL barfs:

javax.jms.JMSException: Could not load protocol: ssl. Reason: java.io.IOException: Could not find class for resource: META-INF/services/org/activemq/transport/server/ssl
	at org.activemq.transport.TransportServerChannelProvider.createJMSexception(TransportServerChannelProvider.java:85)
	at org.activemq.transport.TransportServerChannelProvider.getFactory(TransportServerChannelProvider.java:76)
	at org.activemq.transport.TransportServerChannelProvider.create(TransportServerChannelProvider.java:45)
	at org.activemq.broker.impl.BrokerConnectorImpl.createTransportServerChannel(BrokerConnectorImpl.java:415)
	at org.activemq.broker.impl.BrokerConnectorImpl.<init>(BrokerConnectorImpl.java:69)
	at org.activemq.broker.impl.BrokerContainerImpl.addConnector(BrokerContainerImpl.java:616)
	at org.activemq.broker.impl.BrokerContainerImpl.addConnector(BrokerContainerImpl.java:612)

",Bug
AMQ-325,12481429,,"Mark Lewis <mark.lewis at mir3.com> reported:

After running more or less without any problems for a couple of days, I
suddenly got this message on one of the brokers in my network as it
processed a moderately large (1-2MB) message.  After receiving this
message it appears to have broken the network connection without trying
to restart, even though I specified reliable: protocol for the network
channel. 

09:10:51 WARN  Async exception with no exception listener:
javax.jms.JMSException: Could not find parts for fragemented message:
ACTIVEMQ_TEXT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:r2-
d2-40063-1124130867102-118:0, bodyAsBytes =
org.activemq.io.util.ByteArray@aa098a, readOnlyMessage = true,
jmsClientID = 'qa_tahoe' , jmsCorrelationID = 'null' , jmsDestination =
qa_tahoe_data, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered =
false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4,
jmsTimestamp = 1124205464502, properties = null, readOnlyProperties =
true, entryBrokerName = 'ID:yoda-34917-1123719371107-0:0' ,
entryClusterName = 'default' , consumerNos = [0], transactionId =
'null' , xaTransacted = false, consumerIdentifer =
'ID:yoda-34923-1123719372923-0:0_NetworkChannel.14.14' , messageConsumed
= true, transientConsumed = false, sequenceNumber = 0, deliveryCount =
1, dispatchedFromDLQ = false, messageAcknowledge =
org.activemq.ActiveMQSession@1584a8b, jmsMessageIdentity = null,
producerKey = ID:r2-d2-40063-1124130867102-118: }, text = fragmented
message
javax.jms.JMSException: Could not find parts for fragemented message:
ACTIVEMQ_TEXT_MESSAGE: id = 0 ActiveMQMessage{ , jmsMessageID = ID:r2-
d2-40063-1124130867102-118:0, bodyAsBytes =
org.activemq.io.util.ByteArray@aa098a, readOnlyMessage = true,
jmsClientID = 'qa_tahoe' , jmsCorrelationID = 'null' , jmsDestination =
qa_tahoe_data, jmsReplyTo = null, jmsDeliveryMode = 2, jmsRedelivered =
false, jmsType = 'null' , jmsExpiration = 0, jmsPriority = 4,
jmsTimestamp = 1124205464502, properties = null, readOnlyProperties =
true, entryBrokerName = 'ID:yoda-34917-1123719371107-0:0' ,
entryClusterName = 'default' , consumerNos = [0], transactionId =
'null' , xaTransacted = false, consumerIdentifer =
'ID:yoda-34923-1123719372923-0:0_NetworkChannel.14.14' , messageConsumed
= true, transientConsumed = false, sequenceNumber = 0, deliveryCount =
1, dispatchedFromDLQ = false, messageAcknowledge =
org.activemq.ActiveMQSession@1584a8b, jmsMessageIdentity = null,
producerKey = ID:r2-d2-40063-1124130867102-118: }, text = fragmented
message
        at org.activemq.ActiveMQSession.sendMessageAck
(ActiveMQSession.java:1159)
        at org.activemq.ActiveMQSession.doAcknowledge
(ActiveMQSession.java:1092)        at
org.activemq.ActiveMQSession.acknowledge(ActiveMQSession.java:1082)
        at org.activemq.message.ActiveMQMessage.acknowledge
(ActiveMQMessage.java:1956)
        at org.activemq.transport.NetworkMessageBridge.onMessage
(NetworkMessageBridge.java:217)
        at org.activemq.ActiveMQMessageConsumer.processMessage
(ActiveMQMessageConsumer.java:447)
        at org.activemq.ActiveMQSessionExecutor.dispatch
(ActiveMQSessionExecutor.java:110)
        at org.activemq.ActiveMQSessionExecutor.run
(ActiveMQSessionExecutor.java:95)
        at java.lang.Thread.run(Thread.java:534)
09:10:51 INFO  channel status changed: Channel: tcp://localhost:61617
has stopped

",Bug
AMQ-230,12481066,,"This will either prove to be an incorrect assumption on my part, or a bug.  

Normally the reliable protocol is used to fail-over to a different broker if the 1st connected to broker dies.  However if one sets up a client connection using the reliable protocol to a one-and-only external/standalone broker that is alive, then dead, then alive, the reliable protocol does not reconnect to it.

This issue may be directly related to AMQ-211 which is marked as fixed, but this test case still fails for me.

The really interesting part is line 105 of my test case, that tries to send the 2nd message.  This line actually succeeds, but NOTHING actually happens.  By tracing through, I eventually get to ActiveMQSession, line 1458, where it calls asyncSendPacket(msg). Inside this method, it checks the isTransportOK property (which is false at this point), then does NOTHING, and returns.  

It is a silent failure.

Steps to Reproduce:

1. Using the 20050407 3.0 snapshot distribution, startup a standalone broker process using the below configuration file:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC  ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

  <broker>
    <connector>
      <tcpServerTransport uri=""tcp://localhost:61616""/>
    </connector>
<!--
    <discoveryAgent>
      <zeroconfDiscovery type=""_activemq.broker.development.""/>
    </discoveryAgent>

    <discoveryNetworkConnector/>
-->

    <persistence>
      <cachePersistence>
        <journalPersistence directory=""../var/journal"">
          <jdbcPersistence dataSourceRef=""derby-ds""/>
        </journalPersistence>
      </cachePersistence>
    </persistence>
  </broker>

  <!-- ==================================================================== -->
  <!-- JDBC DataSource Configurations -->
  <!-- ==================================================================== -->

  <!-- The Derby Datasource that will be used by the Broker -->
  <bean id=""derby-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"">
      <value>org.apache.derby.jdbc.EmbeddedDriver</value>
    </property>
    <property name=""url"">
      <!-- Use a URL like 'jdbc:hsqldb:hsql://localhost:9001' if you want to connect to a remote hsqldb -->
      <value>jdbc:derby:derbydb;create=true</value>
    </property>
    <property name=""username"">
      <value></value>
    </property>
    <property name=""password"">
      <value></value>
    </property>
    <property name=""poolPreparedStatements"">
      <value>true</value>
    </property>
  </bean>
</beans>

2. Run the attached unit test case, stopping & starting the external broker as requested in the log4j output to the console.  This unit test will wait for start/stop, but you'll have to trigger that manually.  I did not wish to try a fully automated test case because that did not represent the use-case we are trying to achieve.

",Bug
AMQ-324,12481060,,"When adding a new consumer to a queue, the DurableQueueBoundedMessageManager will try to create the queue container and start it if it hasn´t been created yet. The container startup process tries to recover messages from persistent storage into the MemoryBoundedQueue associated with the destination. If the MemoryBoundedQueue becomes full during the recorvery, a deadlock situation is reached: the enqueue method of MemoryBoundedQueue will keep waiting until a message is consumed so it can add a new message, but no messages will be consumed because the message consumer has not yet been added to the destination.
",Bug
AMQ-228,12481074,,"The .classpath file for the core module contains a classpath entry for <ACTIVEMQ_HOME>/src/class (absolute path), whereas the correct path would be <ACTIVEMQ_HOME>/modules/core/src/conf (absolute path) or just src/conf (rel. path).

The fix is as easy as adding ${basedir} in /modules/core/project.properties line 10:
maven.eclipse.classpath.include=${basedir}/src/conf",Bug
AMQ-238,12481068,,"We are using a Requestor for JMS RPC using a temporary queue.

We have a small number of clients, but each client potentially makes thousands of requests, and each request creates its own temporary queue.

We were seeing memory growth in 2.1 related to connections, this seems to be fixed in 3.0.

However, we now see memory growth in a different place.  YourKit shows 70% of the 240mb (currently) memory used, is in o.a.service.boundedvm.TransientQueueBoundedMessageManager.destinationMap (1 million objects), there are around 10,000 objects in TransientQueueBoundedMessageManager.destinations and TransientQueueBoundedMessageManager.containers.

We are opening and closing a connection for each Requestor, so the temporary queue, should be closing, and there is also a queue.delete() as in o.a.bean.Requestor.

If you want a YourKit snapshot, let me know, and I'll attach one.

We are looking at using a single topic with selectors as a workaround, but that complicates the logic, in order not to miss the response, before you start listening.  i.e. another thread is required.",Bug
AMQ-236,12481173,,"09:35:36 WARN  caught exception consuming packet: CONSUMER_INFO: id = 375 ConsumerInfo{ browser = false, destination = ActiveMQ.Advisory.TempDestinations.TemporaryQueue-{TD{ID:cyclops-4948-1113347143177-1284:0}TD}ID:cyclops-4948-1113347143177-1475:0, consumerIdentifier = 'ID:cyclops-4790-1113348862947-9:0.48.48' , clientId = 'ID:cyclops-4790-1113348862947-9:0' , sessionId = '48' , consumerName = '' , selector = '' , startTime = 1113348936040, started = true, consumerNo = 48, noLocal = false, prefetchNumber = 10, consumerKey = '[ID:cyclops-4790-1113348862947-9:0:]' }

java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(Unknown Source)
        at java.util.HashMap$KeyIterator.next(Unknown Source)
        at org.activemq.broker.impl.AdvisorySupport.addAdvisory(AdvisorySupport.java:88)
        at org.activemq.broker.impl.DefaultBroker.addMessageConsumer(DefaultBroker.java:251)
        at org.activemq.broker.impl.BrokerContainerImpl.registerMessageConsumer(BrokerContainerImpl.java:355)
        at org.activemq.broker.impl.BrokerConnectorImpl.registerMessageConsumer(BrokerConnectorImpl.java:170)
        at org.activemq.broker.impl.BrokerClientImpl.consumeConsumerInfo(BrokerClientImpl.java:466)
        at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:327)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)
        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)
        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:310)
        at java.lang.Thread.run(Unknown Source)",Bug
AMQ-262,12481341,,"I have been testing version 266 and found that request/reply test is not working at a 100% level across networked brokers.  At first I thought that the race condition that had been a prior release had be revived. This was where replier would try to use the temp destination before the bridge was established.  Before that was fixed I could just insert a delay after creating the temp destination and its use to get around the problem.  Now it seems that work-around does not work either.  The first attempt to send a message to the temp destination will fail.

I have found that repeated attempts will succeed.  It seems that the first failed attempt is trigger a completion of the temp definition setup?  Anyway if after the first request fails to receive the reply, another request is made, the replying process has no problem sending the second reply.

Could this be another problem introduced as a result of the AdvisorySupport changes? ",Bug
AMQ-265,12481233,,"Currently this event is fired from the TcpTransportChannel.initalizeStreams().  Since this method is called from the constructor before any listener could be registered, the event is never heard.  This even should be fired from the start() method.  ",Bug
AMQ-597,12481559,,"If you put two messages in the MemoryBoundedMessageCache with the same message id, the MemoryBoundedMessageCache puts itself into an inconsistent state, which causes a NullPointerException in removeOldest(), on the following line:

      CacheNode node = (CacheNode) messages.remove(messageID);
      decrementMemoryUsed(node.message);

This is because there is no corresponding CacheNode entry for the given messageID.

The problem is caused by the following block of code, in put(String, ActiveMQMessage):

            CacheNode oldNode = (CacheNode) messages.put(messageID, newNode);
            if( oldNode !=null ) {
                lruList.remove(oldNode);
                decrementMemoryUsed(oldNode.message);
            }  

When it removes the existing CacheNode from the messages map, it fails to remove it from the lruList, causing its entry to be left in the lruList. This means that the lruList will now contain two entries for the same message id.  The first one to be removed will remove the only entry in the messages map, and will be fine, but the second one to be removed will cause a NullPointerException, since there is now no corresponding CacheNode in the messages map.

To fix all that needs to be done is change the line:

                lruList.remove(oldNode);

to be

                lruList.remove(oldNode.entry);

so that the entry is correctly removed from the lruList.",Bug
AMQ-317,12481040,12481060,"I've been writing some quick test benchmarks and ran across a race condition that causes the DurableQueueBoundedMessageManager.add/removeMessageConsumer to deadlock.  relavent parts of the stack trace:


""Thread-15"" daemon prio=5 tid=0x0053ff80 nid=0x19dfc00 waiting for monitor entry [f1010000..f1010ac0]
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.removeConsumer(DurableQueueBoundedMessageContainer.java:152)
        - waiting to lock <0x4c9a7048> (a java.lang.Object)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageManager.removeMessageConsumer(DurableQueueBoundedMessageManager.java:265)
        - locked <0x4c999048> (a org.activemq.service.boundedvm.DurableQueueBoundedMessageManager)
        at org.activemq.broker.impl.DefaultBroker.removeMessageConsumer(DefaultBroker.java:265)
        at org.activemq.broker.impl.BrokerContainerImpl.deregisterMessageConsumer(BrokerContainerImpl.java:367)
        at org.activemq.broker.impl.BrokerConnectorImpl.deregisterMessageConsumer(BrokerConnectorImpl.java:182)
        at org.activemq.broker.impl.BrokerClientImpl.cleanUp(BrokerClientImpl.java:619)
        - locked <0x4caa47a8> (a org.activemq.broker.impl.BrokerClientImpl)
        at org.activemq.broker.impl.BrokerConnectorImpl.removeClient(BrokerConnectorImpl.java:327)
        at org.activemq.transport.TransportChannelSupport.stop(TransportChannelSupport.java:119)
        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:215)
        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:710)
        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:146)
        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)
        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:258)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:552)

""Durable Queue Worker"" daemon prio=6 tid=0x00526320 nid=0x19c8a00 in Object.wait() [f0f0e000..f0f0eac0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:429)
        at EDU.oswego.cs.dl.util.concurrent.BoundedBuffer.put(Unknown Source)
        - locked <0x4caa46f8> (a java.lang.Object)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)
        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:254)
        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:676)
        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClientImpl.java:221)
        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:166)
        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(DurableQueueSubscription.java:93)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.run(DurableQueueBoundedMessageContainer.java:326)
        - locked <0x4c9a7048> (a java.lang.Object)
        - locked <0x4c9a7050> (a java.lang.Object)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:552)


subsequent attempts to addConsumers will also hang until the server broker is killed and restarted

the code that causes this to happen is as follows:

          final long[] received = new long[1];

        Connection connection = connectionFactory.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        Destination destination = new ActiveMQQueue(""testQueue"");
        MessageConsumer consumer = session.createConsumer(destination);
        consumer.setMessageListener(new MessageListener() {
            public void onMessage(Message message) {
                synchronized(received) {
                    received[0]++;
                }
            }
        });
        connection.start();

        final int total = 1000000;


        new Thread(new Runnable() {
            public void run() {
                for(int i=0;i<total;i++) {
                    template.convertAndSend(""testQueue"", ""test message"");
                }
            }
        }).start();

        long last = 0;
        long cur = 0;

        do {
            synchronized(received) {
                cur = received[0];
            }
            System.out.println(""received = "" + cur + "" diff = "" + (cur - last));
            last = cur;
            Thread.sleep(1000);
        } while(cur < total);


(the template object is just a normal spring JmsTemplate configured in the app context in the test client)

If I run the above code and stop/kill/interupt the process while its still sending messages the server broker will go into this deadlock about 1 out of every 3 tries in my test setup, otherwise it just spits out an IOException and removes the messageConsumer just fine

",Bug
AMQ-399,12481423,,"
javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.EOFException: Unexpected end of ZLIB input stream
        at org.activemq.message.ActiveMQObjectMessage.createFailedToBuildBodyException(ActiveMQObjectMessage.java:232)
        at org.activemq.message.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:164)
        at com.hb.jms.api.util.JmsSessionWrapper.handleMessage(JmsSessionWrapper.java:342)
        at com.hb.jms.api.util.JmsSessionWrapper.driveWrapperInner(JmsSessionWrapper.java:511)
        at com.hb.jms.api.util.JmsSessionWrapper$InnerRunner.run(JmsSessionWrapper.java:619)
        at java.lang.Thread.run(Thread.java:595)",Bug
AMQ-387,12481420,,"DeadLetterPolicy.java method getDeadLetterNameFromDestination(ActiveMQDestination destination)

has member variable String deadLetterName that mirrors an instance variable of the same name, private String deadLetterName = DEFAULT_DEAD_LETTER_NAME;

This results in incorrect dlq naming.",Bug
AMQ-338,12481048,,"Rudolf Holler reported that he has problems consuming fragmented messages using the jca connector.  I think he correctly summerized that ""Perhapbs if the message parts are send with different threads to the MDBean, my MDBean is not able to receive all parts and put it together to one message.""",Bug
AMQ-366,12481483,,"This code crashes broker sooner or later regardless of the memory given to the broker. Broker run with 1Mb of heap crashes after ~2850 attempts (processed in several seconds only).

        ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(""tcp://192.168.0.2:62002"");
        QueueConnection connection = connectionFactory.createQueueConnection();
        connection.start();
        QueueSession session = connection.createQueueSession(true, Session.AUTO_ACKNOWLEDGE);
        int n = 1;
        while (true) {
            System.out.println(""attempt "" + n++);
            TemporaryQueue temporaryQueue = session.createTemporaryQueue();
            temporaryQueue.delete();
        }

",Bug
AMQ-357,12481362,,"I have developped a little application. It's goal is to send and recieve message on a queue.
I use an EJBStateful deploy on WebSphere.
I have configure an QueueConnectionFactory on WAS Ressource Adapter.

I have two services on the EJB :
                       open (Queue) where 
                                            I retrieve QueueConnectionFactory with JNDI Look up :

InitialContext ictx = new InitialContext();
qFactory =(QueueConnectionFactory) ictx.lookup(CONNECTION_JNDI_QUEUE);


                                            I create Connection, Session, Destination and producer:

	try {
				staticQueueConnection = qFactory.createConnection();
				staticQueueConnection.start();
				staticQueueSession = staticQueueConnection.createSession(transacted, ackMode);
				if (staticQueueSession!=null)
				{
					staticQueueDestination = staticQueueSession.createQueue(queueName);
					log.info(""Created destination: "" + staticQueueDestination);
				
					staticQueueProducer = staticQueueSession.createProducer(staticQueueDestination);
					log.info(""Created producer: "" + staticQueueProducer);
					
					
				}
			} catch (JMSException e1) {
				
				throw new NotificationException(e1.toString());
			}

                        publish(MEssage)  where 
                                            I just send message on queue:

messages = staticQueueSession.createTextMessage(notification.getText());
staticQueueProducer.send(messages);




I stock the producer on the session.

So my application do :
              Call open() so we can see on ActiveMQ log that a connection is created with a client but just after this exécution the client is removed!!!
             So when applicatiion call publish() I have the message ""Connection is closed"" adn publish failed.

I meet this problem only if I retrieve the QueueConnectionFactory on WebSphere if I create directly on classe the QueueConnectionFactory I don't met any probleme, every thing work:

	aFactory = new ActiveMQConnectionFactory();
	aFactory.setBrokerURL(URL_BROKER);
  
So If you have an idea it will be great...
",Bug
AMQ-393,12481474,,"When a PooledConnectionFactory is stopped, ObjectPools created by the SessionPools aren't closed, and therefore PooledSessions remain running.  Since the underlying ActiveMQSession isn't actually closed when the PooledSession is closed, the ActiveMQSessionExecutor and its worker threads are never stopped.  I added a method to PooledConnection called ""destroyPools"" which will close the ObjectPools associated with a connection.  The differences are pasted below.

diff oldpool/PooledConnection.java pool/PooledConnection.java
21a22
> import java.util.Iterator;
154a156,163
>     protected void destroyPools() {
>         Iterator i = cache.values().iterator();
>         while (i.hasNext()) {
>             SessionPool pool = (SessionPool) i.next();
>             i.remove();
>             pool.close();
>         }
>     }
diff oldpool/PooledConnectionFactory.java pool/PooledConnectionFactory.java
95a96
>             connection.destroyPools();
diff oldpool/SessionPool.java pool/SessionPool.java
98c98,104
<
---
>     protected void close() {
>         if (sessionPool != null) {
>             try {
>                 sessionPool.close();
>             } catch (Exception e) {}
>         }
>     }",Bug
AMQ-405,12481596,,"When using the peer:// protocol with the resource adapter, each activated endpoint creates an embedded broker, which leads to a lot of traffic and thread used. Maybe only one broker could be used for a connection factory, instead of one broker per connection.

For temporary queues, each temporary destination creates a thread for advisory that is never stopped, so that the jvm quickly runs out of memory.",Bug
AMQ-408,12481555,,"*configure the broker to have one persistence that is a datasource which is pointing to mysql.
*do not put in the journal persistence.
*making a 500 connections and kill the client VM.
*continue the above step and you will see activemq build up memory.",Bug
AMQ-402,12481528,,"I am waiting for one hour to recive message,but can't recive message.

How to set journal size in conf file?",Bug
AMQ-344,12481534,,"ManagedConnectionFactoryTest fails. The test was run on a Dell Inspiron 8600 with Windows XP:

Testcase: testConnectionFactoryConnectionMatching(org.activemq.ra.ManagedConnectionFactoryTest): Caused an ERROR
Journal is closed.
javax.jms.JMSException: Journal is closed.
at org.activemq.util.JMSExceptionHelper.newJMSException(JMSExceptionHelper.java:49)
at org.activemq.util.ExceptionTemplate.throwJMSException(ExceptionTemplate.java:72)
at org.activemq.broker.impl.DefaultBroker.stop(DefaultBroker.java:210)
at org.activemq.broker.impl.BrokerContainerImpl.stop(BrokerContainerImpl.java:266)
at org.activemq.ra.ManagedConnectionFactoryTest.tearDown(ManagedConnectionFactoryTest.java:92)
Caused by: java.lang.IllegalStateException: Journal is closed.
at org.activemq.store.journal.JournalPersistenceAdapter.checkpoint(JournalPersistenceAdapter.java:314)
at org.activemq.store.journal.JournalPersistenceAdapter.stop(JournalPersistenceAdapter.java:214)
at org.activemq.store.cache.CachePersistenceAdapter.stop(CachePersistenceAdapter.java:85)
at org.activemq.broker.impl.DefaultBroker$3.execute(DefaultBroker.java:206)
at org.activemq.util.ExceptionTemplate.run(ExceptionTemplate.java:41)
at org.activemq.broker.impl.DefaultBroker.stop(DefaultBroker.java:204)
... 11 more ",Bug
AMQ-403,12481645,,JMS client was Connected but not recive message and I query the database that it has data.,Bug
AMQ-401,12481431,,"When I use derbydb and hsqldb to store data.I always send data and not recive data.
Then will report memory limit,and then I close activeMq,and then run activeMQ,then will recover data.

But,when activeMQ print Start recover data,it will stop.I have wait 2 hours and repleace other database.Always stop.
",Bug
AMQ-412,12481432,,"11:03:12 WARN  stop dispatching
java.lang.NullPointerException
        at java.util.Hashtable.putAll(Hashtable.java:467)
        at org.activemq.transport.stomp.FrameBuilder.addHeaders(FrameBuilder.jav                                                a:56)
        at org.activemq.transport.stomp.Subscription.receive(Subscription.java:6                                                1)
        at org.activemq.transport.stomp.StompWireFormat.writePacket(StompWireFor                                                mat.java:121)
        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTranspo                                                rtChannel.java:474)
        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransport                                                Channel.java:290)
        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:                                                689)
        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClie                                                ntImpl.java:221)
        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.j                                                ava:166)
        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(Du                                                rableQueueSubscription.java:93)
        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.ru                                                n(DurableQueueBoundedMessageContainer.java:337)
        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown So                                                urce)
        at java.lang.Thread.run(Thread.java:595)",Bug
AMQ-674,12481621,,"well, we've just got bit by something huge.  

Previously we have been shipping messages from producer to consumer via a named Queue 'Index2.EntityIncrementalIndexer', where the machine index2 has a consumer called ""EntityIncrementalIndexer"" using persisted messages.

The design used Composite destinations so that the destination could be:

""Index1.EntityIncrementalIndexer,Index2.EntityIncrementalIndexer"" 

and have the 2 hosts get sent the same message simply, and if one goes down, it'll catch up later.  This gave us the ability to have a mirrored configuration, and go tertiary later if we want simply by adding a new name in the composite destation.

With a single name, this works great, been working fine for months.  Yesterday we activated the _true_ composite destination, and both machines started getting their messages fine.  

no problems so far, BUT, 12 hours later we have noticed that the broker has now stopped accepting messages, and a look at the activemq_msgs table shows 33228 messages ",Bug
AMQ-508,12481664,,"When I start with activemq.bat script following error occurs. Please note that my current and default locale is Turkish. When I changed to English US it was started without any error.

C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>activemq
ActiveMQ Message Broker (http://activemq.org/)

Loading Mesaage Broker from activemq.xml on the CLASSPATH
java.lang.RuntimeException: Instruction unknown: load²nstruction
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.mapName(InstructionFinder.java:138)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.compilePattern(InstructionFinder.java:170)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.search(InstructionFinder.java:218)
        at com.sun.org.apache.bcel.internal.util.InstructionFinder.search(InstructionFinder.java:264)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Mode.peepHoleOptimization(Mode.java:1444)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Mode.compileApplyTemplates(Mode.java:1058)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet.compileModes(Stylesheet.java:615)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet.translate(Stylesheet.java:730)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC.compile(XSLTC.java:335)
        at com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC.compile(XSLTC.java:410)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:791)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:619)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.createTransformer(ActiveMQBeanDefinitionReader.java:63)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.transformDocument(ActiveMQBeanDefinitionReader.java:94)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.registerBeanDefinitions(ActiveMQBeanDefinitionReader.java:53)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:155)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:86)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:57)
        at org.activemq.spring.SpringBrokerContainerFactory.createBrokerContainer(SpringBrokerContainerFactory.java:86)
        at org.activemq.spring.Main.main(Main.java:71)
ERROR:  'Instruction unknown: load²nstruction'
FATAL ERROR:  'Could not compile stylesheet'
Caught: org.activemq.spring.ConfigurationParseException: Could not parse resource: class path resource [activemq.xml]. Reason: javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet; nested exception is javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
org.activemq.spring.ConfigurationParseException: Could not parse resource: class path resource [activemq.xml]. Reason: javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet; nested exception is javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
javax.xml.transform.TransformerConfigurationException: Could not compile stylesheet
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(TransformerFactoryImpl.java:824)
        at com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(TransformerFactoryImpl.java:619)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.createTransformer(ActiveMQBeanDefinitionReader.java:63)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.transformDocument(ActiveMQBeanDefinitionReader.java:94)
        at org.activemq.spring.ActiveMQBeanDefinitionReader.registerBeanDefinitions(ActiveMQBeanDefinitionReader.java:53)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:155)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:86)
        at org.activemq.spring.ActiveMQBeanFactory.<init>(ActiveMQBeanFactory.java:57)
        at org.activemq.spring.SpringBrokerContainerFactory.createBrokerContainer(SpringBrokerContainerFactory.java:86)
        at org.activemq.spring.Main.main(Main.java:71)
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>
C:\activemq-3.2.1\bin>",Bug
AMQ-489,12481414,,"But ,If unilateralism channel it can be resumed.

I used bidirectional channel.

I have test one way channel that's no bug.but bidirectional channel cann't resume.

config one:
<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

<!-- ==================================================================== -->
<!-- ActiveMQ Broker Configuration -->
<!-- ==================================================================== -->
<broker name =""tao-111"">

<connector >
<tcpServerTransport uri=""tcp://localhost:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50"" />
</connector>
<connector>
<tcpServerTransport uri=""tcp://128.64.7.64:62001"" />
</connector>
<connector>
<serverTransport uri=""stomp://localhost:61626""/>
</connector>


<networkConnector>
<networkChannel uri=""reliable:tcp://128.64.7.27:62001"" />
<localPrefetchPolicy queuePrefetch=""100"" queueBrowserPrefetch=""100"" topicPrefetch=""100"" durableTopicPrefetch=""100""/>
<remotePrefetchPolicy topicPrefetch=""100"" durableTopicPrefetch=""100"" queuePrefetch=""100"" queueBrowserPrefetch=""100"" />
</networkConnector>


config two:

<?xml version=""1.0"" encoding=""UTF-8""?>
<!DOCTYPE beans PUBLIC ""-//ACTIVEMQ//DTD//EN"" ""http://activemq.org/dtd/activemq.dtd"">
<beans>

<!-- ==================================================================== -->
<!-- ActiveMQ Broker Configuration -->
<!-- ==================================================================== -->
<broker name =""tao-1"">

<connector >
<tcpServerTransport uri=""tcp://localhost:61616"" backlog=""1000"" useAsyncSend=""true"" maxOutstandingMessages=""50""/>
</connector>
<connector>
<tcpServerTransport uri=""tcp://128.64.7.27:62001"" />
</connector>
<connector>
<serverTransport uri=""stomp://localhost:61626"" />
</connector>


<networkConnector>
<networkChannel uri=""reliable:tcp://128.64.7.64:62001""/>
<localPrefetchPolicy queuePrefetch=""100"" queueBrowserPrefetch=""100"" topicPrefetch=""100"" durableTopicPrefetch=""100""/>
<remotePrefetchPolicy topicPrefetch=""100"" durableTopicPrefetch=""100"" queuePrefetch=""100"" queueBrowserPrefetch=""100"" />

</networkConnector>
.... 

",Bug
AMQ-466,12481395,,The ActiveMQ networkchannel cann't resume when network is interrupt and rescume.,Bug
AMQ-436,12481393,,"STOMP C client send message,JMS Client cann't received. Also JMS Client Send Message that cann't be reiceived by stomp client.

I used physicalName to communicate.",Bug
AMQ-559,12481437,,"The file org/activemq/activemq.dtd in activemq-core-3.2.2.jar contains some duplicate lines.  My XML parser (OC4J) 
complains about these.  Here are the duplicated lines:

<!--
	Default values for all bean definitions. Can be overridden at
	the ""bean"" level. See those attribute definitions for details.
-->
<!ATTLIST beans default-lazy-init (true | false) ""false"">
<!ATTLIST beans default-dependency-check (none | objects | simple | all) ""none"">
<!ATTLIST beans default-autowire (no | byName | byType | constructor | autodetect) ""no"">

These lines appear starting a line 21 and line 539.  Removing the second set of duplicate lines should resolve the issue.

",Bug
AMQ-641,12481566,,"If I use failover:tcp//.... in the jms client,
That all method will be blocked when net or activemq error.
This  is not a good idea.My application will be blocked. 

And If I use tcp//.... in the jms client,Sometimes ,send(message) method will be blocked,also not return.

 JMS is a asynchronous interface ,blocking is not allow at any condition.",Bug
AMQ-533,12481557,,"I received the following error when trying to run ActiveMQ for the first time in the above environment:

""Specified key was too long; max key length is 1024 bytes...""

when ActiveMQ tries to create the ACTIVEMQ_ACKS table. It looks like the pk for that table involves two columns which are defined in DefaultStatementProvider.java as being VARCHAR(250)s. In in UTF-8 characterset each char is composed of 3 bytes such that in this case the pk will be 1500 bytes which exceeds the max length for a InnoDB primary key.

Is there a spec. which stipulates that containernameDataType and subscriptionIdDataType should be VARCHAR(250)? Could these be changed to say VARCHAR(128) or some such so that the pk on that table will fall within the 1024 byte limit?
",Bug
AMQ-541,12481556,,"It appears that the activemq.xml configuration file contains a typo with respect to the adapterClass attribute settings on the jdbcPersistence element with dataSourceRef=""mysql-ds"". The default value of the adapterClass attribute is 

org.activemq.store.jdbc.adapter.BlobJDBCAdaptor

However, the class name is actually

org.activemq.store.jdbc.adapter.BlobJDBCAdapter
                                                                                        ^

This manifests itself as an error on startup when you try to use this adapter class.



",Bug
AMQ-612,12481493,,"This would be an edge case, since it would be odd that the endpoint factory never creates and endpoint, but it could happen if the endpoint factory is invalid for some reason.",Bug
AMQ-671,12481197,,"A connection URL with list configuration options (maximumRetries, failureSleepTime, etc ...) which doesn't put it parens around it's connection string as in '(tcp://localhost:61616)' is not processed properly because URI.getQuery method return null instead of the configuration options.

CompositeTransportChannelFactory.java:            answer = uri.getQuery();

For example:
reliable:(tcp://foo:61699,tcp://bar:61617,tcp://whatnot:61698)?maximumRetries=5
will work but:
reliable:tcp://foo:61699?maximumRetries=5
will not work.",Bug
AMQ-756,12481716,,"
On windows server when trying to create a Topic Session code just hangs, here is the Thread Dump, same code works fine Unix and Linux environment


""StackTrace Remote Thread"" prio=5 tid=0x0444a1a0 nid=0x15ac runnable [0..55dfb9c]

 

""tcp://dubxww11hrxxxx/10.251.116.216:29258"" prio=5 tid=0x04454868 nid=0xcf4 runnable [550f000..550fd8c]

            at java.net.SocketInputStream.socketRead0(Native Method)

            at java.net.SocketInputStream.read(SocketInputStream.java:129)

            at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)

            at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)

            at java.io.DataInputStream.readInt(DataInputStream.java:443)

            at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:180)

            at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)

            at java.lang.Thread.run(Thread.java:534)

 

""Thread-0"" daemon prio=5 tid=0x03733c30 nid=0x508 in Object.wait() [42df000..42dfd8c]

            at java.lang.Object.wait(Native Method)

            - waiting on <0x12cb01c8> (a java.util.TaskQueue)

            at java.util.TimerThread.mainLoop(Timer.java:429)

            - locked <0x12cb01c8> (a java.util.TaskQueue)

            at java.util.TimerThread.run(Timer.java:382)

 

""Signal Dispatcher"" daemon prio=10 tid=0x008ad9f0 nid=0xf8c runnable [0..0]

 

""Finalizer"" daemon prio=9 tid=0x008aafa0 nid=0x1328 in Object.wait() [2faf000..2fafd8c]

            at java.lang.Object.wait(Native Method)

            - waiting on <0x12d6cac0> (a java.lang.ref.ReferenceQueue$Lock)

            at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:111)

            - locked <0x12d6cac0> (a java.lang.ref.ReferenceQueue$Lock)

            at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:127)

            at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

 

""Reference Handler"" daemon prio=10 tid=0x008a9c20 nid=0x760 in Object.wait() [2eaf000..2eafd8c]

            at java.lang.Object.wait(Native Method)

            - waiting on <0x12d6cb28> (a java.lang.ref.Reference$Lock)

            at java.lang.Object.wait(Object.java:429)

            at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:115)

            - locked <0x12d6cb28> (a java.lang.ref.Reference$Lock)

 

""main"" prio=5 tid=0x00037c50 nid=0x1650 in Object.wait() [7e000..7fc3c]

            at java.lang.Object.wait(Native Method)

            - waiting on <0x101deeb0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)

            at java.lang.Object.wait(Object.java:429)

            at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:173)

            - locked <0x101deeb0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)

            at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:61)

            at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)

            - locked <0x101efb00> (a java.lang.Object)

            at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:62)

            at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:67)

            at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1068)

            at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1132)

            at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:251)

            at org.apache.activemq.ActiveMQConnection.createTopicSession(ActiveMQConnection.java:845)

            at com.sterlingcommerce.woodstock.event.RemoteEventProcessorImpl.<init>(RemoteEventProcessorImpl.java:103)

            at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)

            at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)

            at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)

            at java.lang.reflect.Constructor.newInstance(Constructor.java:274)

            at com.sterlingcommerce.woodstock.event.EventProcessorFactory.getProcessor(EventProcessorFactory.java:86)

            - locked <0x3147e190> (a java.lang.Class)

            at com.sterlingcommerce.woodstock.event.EventProcessorFactory.getProcessor(EventProcessorFactory.java:63)

            at com.sterlingcommerce.woodstock.bi.util.BIEventHelper.fireEvent(BIEventHelper.java:65)

            at com.sterlingcommerce.woodstock.bi.util.BIEventHelper.sendStraightThroughEvent(BIEventHelper.java:103)

            at com.sterlingcommerce.woodstock.bi.util.BIEventHelper.sendStraightThroughEvent(BIEventHelper.java:93)

            at com.sterlingcommerce.woodstock.util.frame.log.EventLog.write(EventLog.java:62)

            at com.sterlingcommerce.test.bi.BIEventFwdListenerTester.fireLoggerEvent(BIEventFwdListenerTester.java:665)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:324)

            at junit.framework.TestCase.runTest(TestCase.java:154)

            at junit.framework.TestCase.runBare(TestCase.java:127)

            at junit.framework.TestResult$1.protect(TestResult.java:106)

            at junit.framework.TestResult.runProtected(TestResult.java:124)

            at junit.framework.TestResult.run(TestResult.java:109)

            at junit.framework.TestCase.run(TestCase.java:118)

            at junit.framework.TestSuite.runTest(TestSuite.java:208)

            at junit.framework.TestSuite.run(TestSuite.java:203)

            at junit.framework.TestSuite.runTest(TestSuite.java:208)

            at junit.framework.TestSuite.run(TestSuite.java:203)

            at com.sterlingcommerce.ant.taskdefs.junit.XMLJUnitTestRunner.run(XMLJUnitTestRunner.java:439)

            at com.sterlingcommerce.ant.taskdefs.junit.GISJUnitTask.executeInVM(GISJUnitTask.java:984)

            at com.sterlingcommerce.ant.taskdefs.junit.GISJUnitTask.execute(GISJUnitTask.java:662)

            at com.sterlingcommerce.ant.taskdefs.junit.GISJUnitTask.execute(GISJUnitTask.java:637)

            at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)

            at org.apache.tools.ant.Task.perform(Task.java:364)

            at org.apache.tools.ant.Target.execute(Target.java:341)

            at org.apache.tools.ant.Target.performTasks(Target.java:369)

            at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)

            at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:37)

            at org.apache.tools.ant.Project.executeTargets(Project.java:1068)

            at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:382)

            at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:107)

            at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)

            at org.apache.tools.ant.Task.perform(Task.java:364)

            at org.apache.tools.ant.Target.execute(Target.java:341)

            at org.apache.tools.ant.Target.performTasks(Target.java:369)

            at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)

            at org.apache.tools.ant.Project.executeTarget(Project.java:1185)

            at com.sterlingcommerce.woodstock.install.deployer.AntDeployer.executeScript(AntDeployer.java:220)

            at com.sterlingcommerce.woodstock.install.deployer.AntDeployer.deploy(AntDeployer.java:173)

            at com.sterlingcommerce.woodstock.install.deployer.AntDeployer.main(AntDeployer.java:167)

            at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

            at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)

            at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)

            at java.lang.reflect.Method.invoke(Method.java:324)

            at com.sterlingcommerce.woodstock.noapp.NoAppLoader.main(NoAppLoader.java:75)

 

""VM Thread"" prio=5 tid=0x009446c0 nid=0xb24 runnable 

 

""VM Periodic Task Thread"" prio=10 tid=0x008bdb50 nid=0xe48 waiting on condition 

""Suspend Checker Thread"" prio=10 tid=0x008acf58 nid=0x3c8 runnabl
",Bug
AMQ-627,12481445,,"There are a bunch of these in the code:

                try {
                        ...
                } catch (InterruptedException e) {
                }

Which should be

                try {
                        ...
                } catch (InterruptedException e) {
                        Thread.currentThread().interrupt();
                }

... or 

                try {
                        ...
                } catch (InterruptedException e) {
                        throw JMSExceptionSupport.create(e);
                }

... or whatever. Just don't throw away my interrupts.",Bug
AMQ-605,12481473,12481938,"There have been some *scary* bugfixes in b.u.c as described here:
http://dcl.mathcs.emory.edu/util/backport-util-concurrent/changelog.php
Upgrading will probably solve some very obscure bugs, most importantly related to ReentrantReadWriteLock, Condition & livelocks (some JIRA issues sound like that). I recently upgraded mule to buc-2.1 and have not observed any regressions.
",Bug
AMQ-534,12481599,,"OpenWireScript.java contains a package declaration for org.apache.activemq.openwire.tool but is in the directory hierarchy for org.activemq.openwire.tool.

I've no idea if it's important, but it's the only thing preventing me from compiling all activemq in Eclipse (after using 'maven eclipse' to generate the .classpath and .project files). ",Bug
AMQ-617,12481597,12481626,"The exceptions are always along these lines...
16:20:30,864 INFO [STDOUT] java.lang.ClassCastException: org.apache.activemq.command.XATransactionId 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.v1.TransactionInfoMarshaller.unmarshal(TransactionInfoMarshaller.java:67) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181) 
16:20:30,865 INFO [STDOUT] at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135) 
16:20:30,865 INFO [STDOUT] at java.lang.Thread.run(Thread.java:595) 

see the test case MarshallingWithCachingTest for how to reproduce the problem.
",Bug
AMQ-621,12481622,,"setup: (1) activemq up running with ssl
            (2) JMS client (application) was compiled purely used sun solaris environment with jdk1.5.0_03 and jms1.1.jar. Debugging mode was turned on.
            (3) use jndi.properties file provided at activemq.

Execution:
         Producer simply sent 1000 text messages with 46 characters each on a queue.
         Consumer use synchrouse receive mode: receive()

Observation:
         (1) Both producer and receiver successfully handsaked with activemq (by looking into logs about ssl certification verification and negociation.
         (2) Producer continuously pushed messages into queue and consumer received messages.
         (3) After several hundred message delivered and received, consumer got null pointer exception as below:
       
         ....
         main, WRITE: TLSv1 Application Data, length = 46
         Client received: No. 450:Sever message: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
         Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, READ: TLSv1 Application Data, length = 161
         main, WRITE: TLSv1 Application Data, length = 46
         Client received: No. 451:Sever message: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
         Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, READ: TLSv1 Application Data, length = 161
         Mar 8, 2006 2:38:10 PM org.apache.activemq.ActiveMQConnection onAsyncException
         WARNING: Async exception with no exception listener: java.io.IOException: Unexpected Error: java.lang.NullPointerException
        java.io.IOException: Unexpected Error: java.lang.NullPointerException
        at org.activeio.adapter.SyncToAsyncChannel.run(SyncToAsyncChannel.java:161)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:643)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.lang.NullPointerException
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:146)
        at org.activeio.command.AsyncChannelToAsyncCommandChannel$1.onPacket(AsyncChannelToAsyncCommandChannel.java:69)
        at org.apache.activemq.transport.activeio.PacketAggregatingAsyncChannel.onPacket(PacketAggregatingAsyncChannel.java:92)
        at org.activeio.FilterAsyncChannel.onPacket(FilterAsyncChannel.java:87)
        at org.apache.activemq.transport.activeio.ActivityMonitor.onPacket(ActivityMonitor.java:42)
        at org.activeio.adapter.SyncToAsyncChannel.run(SyncToAsyncChannel.java:155)
        ... 3 more
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, SEND TLSv1 ALERT:  warning, description = close_notify
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, WRITE: TLSv1 Alert, length = 18
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called close()
Socket Connection: /127.0.0.1:55693 -> localhost/127.0.0.1:61618, called closeInternal(true)

 







",Bug
AMQ-623,12481586,,"I got exceptions from time to time when I close connections,

---------------------------------------------------------------------------------------------------------------------------------------------
2006-3-9 11:42:11 org.apache.activemq.ActiveMQConnection transportFailed
Warn: Cleanup failed
javax.jms.JMSException: Cannot write to the stream any more it has already been closed
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1043)
	at org.apache.activemq.ActiveMQConnection.cleanup(ActiveMQConnection.java:1191)
	at org.apache.activemq.ActiveMQConnection.transportFailed(ActiveMQConnection.java:1585)
	at org.apache.activemq.ActiveMQConnection.onException(ActiveMQConnection.java:1338)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:102)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:90)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:149)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.io.EOFException: Cannot write to the stream any more it has already been closed
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
	at java.io.DataOutputStream.writeInt(Unknown Source)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:169)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:117)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:90)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:65)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:54)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1041)
	... 9 more
---------------------------------------------------------------------------------------------------------------------------------------------

It seems that things happened in this order:

1. On client, in user thread, connection.close() is called.

2. On server, shutdown info is received  and socket is closed.

3. On client, in consumer thread, TcpTransport got an EOFException because socket is closed before TcpTransport.closed is set to true.

4. On client, ActiveMQConnection.cleanup() is called becauseof EOFException happend in 3. But isConnectionInfoSentToBroker is still true, another Exception is raised when sending packet to broker through the already closed socket.


",Bug
AMQ-547,12481548,,"My current broker has a consumer that sends email when requested. I connect to it with a producer that pushes a single message onto the queue. I just ran that 70 times and told it to send 70 messages, which I then received. To the best of my knowledge, active should be idle. 

Browsing in jconsole, I see the following data for the broker itself: 

totalConsumerCount 1 - check - my one consumer 

totalDequeueCount 70 - check - I put 70 on the queue. 

totalEnqueueCount 768 - hmmm. Are there 689 somethings waiting to be cleared? 

totalMessage 0 - makes sense, as I got every email that I asked for. There should be no messages left. 

Looking in the connection and connector mbeans, I see 70 messages enqueued, and 70 dequeued, which would fit with 70 being sent since I started the broker. Further, there were 140 connections. 

The other anomaly I saw was the number of connections. Every time I queue up another twenty, I appear to get another connection. They have nothing enqueued, and nothing dequeued, and they are instances of org.apache.activemq.broker.jmx.ConnectionView. Even after everything is done, they show as active and connected, but not waiting. Anyone seen this behavior? 

So, my question is why are there so many enqueues on the broker? As a side question, are there cases where the connection list just grows?",Bug
AMQ-694,12481657,,"I am using 4.0 M3 and create a durable consumer with JMS API ""createDurableSubscriber(Topic topic, java.lang.String name, java.lang.String messageSelector, boolean noLocal)"". I found that ActiveMQ behaves very strange when too long string is assigned to ""messageSelector"". The ActiveMQ is Ok if I cut the string to short.

Anyone had this experience before? Any solution fo it? Here is my long string:

ehs.handler.event.type.email_sp=event_type\='email_unsub_promotion' or event_type\='email_unsub_promotion_dne' or event_type\='email_user_sign_up' or event_type\='email_user_sign_up_er' or event_type\='email_registration_confirm' or event_type\='email_client_approved_offerr' or event_type\='email_certificate_received' or event_type\='email_gift_card_redeemed' or event_type\='email_password_lost' or event_type\='email_resend_sign_up'
",Bug
AMQ-709,12481652,,"values for dependencies are using interpolation that isn't defined.

therefore all dependent jars are breaking on the download",Bug
AMQ-530,12481322,,"
The method in DefaultThreadPools should be called getDefaultPool() not getDeaultPool().
",Bug
AMQ-585,12483261,,"I am using ActiveMQ as part of a web-app deployed to Tomcat. Active MQ is configured via spring and follows the spring examples that you ship with the source in M4. If I configure the broker to use JMX (  <broker useJmx=""true""> ) and deploy the app to tomcat, everything goes fine. However, when I deploy a newer version of the app (hot deploy) I get the following error when the JMS consumer is created from spring:

006-02-20 15:16:17,378 ERROR org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:205) Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'smsResponseConsumer' defined in ServletContext resource [/WEB-INF/applicationContext-messaging.xml]: Initialization of bean failed; nested exception is javax.jms.JMSException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost
javax.jms.JMSException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost

And the root cause of this exception is:

Caused by: javax.management.InstanceAlreadyExistsException: org.apache.activemq:Type=Topic,Destination=ActiveMQ.Advisory.Connection,BrokerName=localhost
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:274)
	at org.apache.activemq.openwire.DataStreamMarshaller.createThrowable(DataStreamMarshaller.java:199)
	at org.apache.activemq.openwire.DataStreamMarshaller.unmarsalThrowable(DataStreamMarshaller.java:159)
	at org.apache.activemq.openwire.v1.ExceptionResponseMarshaller.unmarshal(ExceptionResponseMarshaller.java:67)
	at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
	... 1 more

So it appears as if the JMX entry isn't ""unbound"" when the applicaiton restarts on a redeploy.

If I set JMX to false then I can redeploy the application without any errors. 
",Bug
AMQ-713,12481687,,"investigate possible bug with LastImageRecoveryPolicy .  A unit test for this would also help. 

http://www.nabble.com/Special-Topic-Queue...-t1558344.html",Bug
AMQ-696,12481745,,"While using the new Spring-2.0 DefaultMessageListenerContainer I can reliably reproduce the following exception on the broker side which usually results in a hang on the client side:
 
The broker logs the following exception:
 
INFO  Service                        - Sync error occurred: javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:inspiron-1410-114619274
7453-2:1 already connected
javax.jms.InvalidClientIDException: Broker: localhost - Client: ID:inspiron-1410-1146192747453-2:1 already connected
        at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:154)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:65)
        at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)
        at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:65)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:77)
        at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:500)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:82)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:106)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:93)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:139)
        at java.lang.Thread.run(Thread.java:595)
 
I have extrapolated the sequence of calls that DefaultMessageListenerContainer is making and managed to produce a simple test case that reproduces the problem:
 
import junit.framework.TestCase;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.command.ActiveMQQueue;
 
import javax.jms.*;
 
public class TestActiveMQ extends TestCase {
 
    public void testConnectionFactory() throws Exception {
        final ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
        final ActiveMQQueue queue = new ActiveMQQueue(""testqueue"");
        final Connection conn = cf.createConnection();
 
        Runnable r = new Runnable() {
            public void run() {
                try {
                    Session session = conn.createSession(false, 1);
                    MessageConsumer consumer = session.createConsumer(queue, null);
                    Message msg = consumer.receive(1000);
                } catch (JMSException e) {
                    e.printStackTrace();
                }
            }
        };
        new Thread(r).start();
        conn.start();
 
        try {
            synchronized (this) {
                wait(3000);
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
 
Let us know if you need anymore information. Dont want to scrub ActiveMQ from my list of candidates If I can help it.
 
cheers
craig
 

",Bug
AMQ-684,12481594,,RC1 not have this bug.,Bug
AMQ-1278,12482004,,"When we attempt to create a temporary queue, the connection hangs:

""http-8080-Processor1"" daemon prio=10 tid=0x00127650 nid=0xd in Object.wait() [0x340fe000..0x340ffc28]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.waitFor(FutureTask.java:267)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:117)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:44)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:69)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1108)
        at org.apache.activemq.ActiveMQConnection.createTempDestination(ActiveMQConnection.java:1453)
        at org.apache.activemq.ActiveMQSession.createTemporaryQueue(ActiveMQSession.java:1103)
        at es.tid.geremias.planb.QueryTask.getTask(QueryTask.java:198)
        at es.tid.geremias.planb.QueryTask.doGet(QueryTask.java:157)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
        at java.lang.Thread.run(Unknown Source)",Bug
AMQ-689,12481637,,"I have redelivery configured, but when it fails in all attempts (through a RuntimeException), I get the following message:

11:00:54,775 DEBUG [ServerSessionImpl:0] Endpoint failed to process message.
java.lang.NullPointerException
	at org.apache.activemq.ra.ServerSessionImpl.afterDelivery(ServerSessionImpl.java:218)
	at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:723)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:163)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
11:00:54,775 INFO  [ServerSessionImpl:0] Endpoint failed to process message. Reason: java.lang.NullPointerException
11:00:54,775 DEBUG [ServerSessionImpl:0] run loop end
11:00:54,775 DEBUG [ServerSessionImpl:0] Endpoint did not release properly: org.apache.activemq.ra.InvalidMessageEndpointException
org.apache.activemq.ra.InvalidMessageEndpointException
	at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointDead.release(MessageEndpointProxy.java:156)
	at org.apache.activemq.ra.MessageEndpointProxy.release(MessageEndpointProxy.java:68)
	at org.apache.activemq.ra.ServerSessionImpl.close(ServerSessionImpl.java:250)
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:180)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:177)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
11:00:54,775 DEBUG [ServerSessionImpl:0] Run finished
11:00:54,775 DEBUG [ServerSessionImpl:0] Work completed: javax.resource.spi.work.WorkEvent[source=Work :ServerSessionImpl:0]
11:00:54,790 DEBUG [ServerSessionPoolImpl] ServerSession requested.

The code that throws this NPE is ServerSessionImpl, whose excerpt I send below. There are more reports of this 

            try {
                endpoint.afterDelivery();
            } catch (Throwable e) {
                throw new RuntimeException(""Endpoint after delivery notification failure"", e);
            } finally {
                if( session.getTransactionContext().isInLocalTransaction() ) { <<<<--------------------------- NPE
                    if( !useRAManagedTx ) {
                        // Sanitiy Check: If the local transaction has not been commited..
                        // Commit it now.
                        log.warn(""Local transaction had not been commited.  Commiting now."");
                    }
                    try {
                        session.commit();
                    } catch (JMSException e) {
                        log.info(""Commit failed:"", e);
                    }
                }
            }",Bug
AMQ-679,12481396,,"If start broker  i get this message:

WARNING: Database driver NOT recognized: 
[ibm_db2_jdbc_universal_driver_architecture].  Will use default JDBC 
implementation.

But this seems to be o.k. so far, because after starting the broker, two new 
tables (activemq_msgs/acks) get created. 

Testing a Consumer to receive Messages
the broker throws this exception:

2006-04-05 17:13:03,304 [.168.1.52:52134] 
INFO  Service                        - Sync error occurred: java.io.IOException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.
java.io.IOException: Non-atomic batch failure.  The batch was submitted, but at least one exception occurred on an individual member of the batch. Use getNextException() to retrieve the exceptions for specific batched elements.
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:42)
	at org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:125)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:73)
	at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:223)
	at org.apache.activemq.store.memory.MemoryTransactionStore$1.addMessage(MemoryTransactionStore.java:116)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:246)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:196)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:307)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:192)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:108)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:120)
	at org.apache.activemq.broker.AbstractConnection.processMessage(AbstractConnection.java:346)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:590)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:196)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:88)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:70)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Thread.java:570)",Bug
AMQ-770,12481670,,"Seems like there was a change between 4.0-RC3 and incubator-4.0(.1) with regards to the default value for the destination option ""consumer.dispatchAsync"".  According to the web documentation for destination options, as well as behavior in RC3, the default is true.  However, it looks like incubator-4.0(.1) defaults to false.  I have to explicitly give the consumer.dispatchAsync=true for a destination option, in order to get async dispatch in the Broker.

Is this a code bug, or documentation bug?
",Bug
AMQ-419,12481453,,"With the removal of the TransportStatusListener interface the client lost the ability to obtain useful information from connection/disconnect events.  Similar information can be garnered by creating a TransportListener object and chaining it to the ActiveMQConnection class.  Connection detection can be determined by trapping the BrokerInfo object in the onCommand method and disconnect detected in the onException method. However the BrokerInfo object does not contain the brokerName defined in the configuration file.

",Bug
AMQ-528,12481938,,"Setup: 

3 networked brokers, B1, B2, and B3, on 3 servers, connected using multicast discovery. activemq.xml: 

 <broker useJmx=""false"" brokerName=""B1""> 
  
 <persistenceAdapter> 
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo"" dataSource=""#mysql-ds""/> 
 </persistenceAdapter> 
  
 <transportConnectors> 
 <transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
 </transportConnectors> 
  
 <networkConnectors> 
 <networkConnector uri=""multicast://default""/> 
 </networkConnectors> 
  
 </broker> 
  
 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""> 
           <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/> 
           <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/> 
                 <property name=""username"" value=""activemqUser""/> 
                 <property name=""password"" value=""activemqPwd""/> 
                 <property name=""poolPreparedStatements"" value=""true""/> 
 </bean> 

Similar for B2 and B3. 

Two queues: Q1 and Q2. 

Two producers, one for each queue, both producers connected to B1. 

One Q1 cosumer connected to B1, another Q1 consumer on B2. 

One Q2 consumer connected to B2, another Q2 consumer connected to B3. 

Steps: 

Start the brokers and start sending messages to the queue. 

After a while, stop the brokers (Sequence does not matter) 

See the errors in catalina.out of the Tomcat that has a broker with both producers and consumers connected 

The problems:

1. 

Exception in thread ""ActiveMQ Scheduler"" java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)
 java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
         at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""       at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)

2. The same exception is logged to the log file (in my case catalina.out) for hundreds of times, resulting a log file exceeding 150 MB in 2 minutes. ",Bug
AMQ-647,12481595,,"I'm currently testing the openwire .NET JMS implementation to communicate with a activemq java broker ; the aim of this test is to evaluate the possibilty to deploy the solution in live environment.

My test platform is quite simple :

* A java JMS publisher publishes 100messages / 1s on a test topic
* A java consumer is listening to this topic
* A openwire consumer listens to the same topic

After a few hundreds messages (about 10-20 seconds of publish), the openwire client hangs and receives no more message. Using the Visual Studio debugger, it appears that the client is waiting on a ""read"" from the socket. The side effect of this is that after a few more seconds, the publisher itself stops to emit messages as if some internal queue becomes full or someting.

I'm fully aware that Openwire is always in a development process but I want to point out that this issue already existed in the previous versions I had tested. This problem prevents using the openwire implementation in a live environment in the current state.",Bug
AMQ-500,12481535,,"I have not started to look at unix based start script, but I am finding some interesting issues with the one for use under Windows (activemq.bat).

This script is using the java jar option that points to the ACTIVEMQ_HOME/bin/run.jar file.  The manifest points to the o.a.a.broker.Main class.  

Use of this execution option and review of the o.a.a.broker.Main class (where it sets up a classloader with classpath pointing to the conf, lib and lib/optional directories would lead one to believe that the o.a.a.broker.Main class would be loaded from run.jar.  This is not the case as the script also defines the java property of java.ext.dirs to append the activemq directories.  While it also sets the command line classpath option, this is useless as including all the activemq directories will already include all activemq classes at the base classloader. This also includes a copy of the o.a.a.broker.Main class that is include in the uber activemq-4.0.jar in the ACTIVEMQ_HOME directory.

Also with the definition java.ext.dirs this will total obviate any setting of classpath information on the classloader  (auto or parameter specified) by the o.a.a.broker.Main class.

Obviously something is not right here.  If  o.a.a.broker.Main class is suppose to be setting up the class loader, why is the script setting the java.ext.dir property and the classpath option on the command line?
",Bug
AMQ-418,12481539,,"I think I can answer my own question.  The test of the command should be in the ControlCommand.visit() method.  The CommandVisitor interface of implemented by the TransportConnection already has a processShutdown() method, but I don't think this was meant for JVM level termination.

Dennis Cook wrote:

> Okay I thought I had figured out how to cause a broker shutdown.
>
> I found the onControlCommand method in the ActiveMQConnection class. Great figured just asyncSendPacket() a ControlCommand with ""shutdown"" as command.
>
> First problem found and fixed was command member of ControlCommand was not marshalled.  Next found that the ActiveMQConnection is not part of the filter chain on the broker side.
>
> It seems that an anonymous TransportListener is created, in the TransportConnection contructor, to perform the dispatch. On the surface this seems to me like the appropriate place to replicate the onControlCommand method that I found in the ActiveMQConnection class.
>
> Is the the correct approach or am I off base here?
>
>
>
> Dennis Cook wrote:
>
>> I had added the terminateBrokerVM() method to ActiveMQConnetion in v3 until there was a better way to terminate, from a remote location, the JVM running a broker.  This has been removed from v4 source, but still I cannot find a way to tell the broker JVM to shutdown cleanly.
>>
>> What is the intention for this this vesion? Is it intended that this be accomplished via JMX? I have already tried JConsole and issued STOP on both the broker and connector objects, but the JVM did not stop.
>>
",Bug
AMQ-588,12481658,,"When using a static+failover list for network connections, Broker shutdown is no longer working as of the 02/21/2006 SNAPSHOT release.  If a broker is attempting to connect to another broker which is not currently running, the shutdown blocks waiting for the failover connect thread to complete the connection.  Since the other broker is not running, the shutdown then hangs.

This scenario worked fine with the 02/17/2006 SNAPSHOT release.",Bug
AMQ-719,12481641,,The payload content for a JMS message contains initial bytes for the length of the text string.  The payload content for an dotNet openwire content does not contain this information.  This mismatch in payload results in invalid payloads when passing jms messages between technologies.,Bug
AMQ-799,12481668,,,Bug
AMQ-721,12481878,,"Openwire client hangs after receiving 999 messages
changing Session.Prefetch postpone the  problem...

Current code is :
   public class Session : ISession
    {
       :
       :
        private int prefetchSize = 1000;

this block at message #999

changing         private int prefetchSize = 2000 ==>  blocks at message #1999
",Bug
AMQ-1066,12481876,,"Hi

We use ActiveMQ in a productive environment. Yesterday, one of our application wasn't able to connect to the Broker. I found the following exception in the logfile:  (After I restarted the broker, everything was runnig again.)

-----

2006-10-09 12:05:37,986 [.27.81.119:1741] INFO  Service                        - Sync error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.util.SubscriptionKey.<init>(SubscriptionKey.java:35)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.registerSubscription(ManagedRegionBroker.java:161)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:145)
	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:113)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:296)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:77)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:73)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:86)
	at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:427)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:295)
	at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)
	at java.lang.Thread.run(Unknown Source)

",Bug
AMQ-413,12481412,,"The org.activemq.broker.Main class automatically adds the <activemq.home>/conf, <activemq.home>/lib and <activemq.home>/lib/optional directories to the extentions to be added to the context classloader.  While adding the library directories does not really cause a problem, automaticalling including the conf directory will insure that the configuration file is always found in that directory.  I had previously used an explicit ordering of the -classpath to locate the configuration file in an alternate location.

I would suggest removal of the auto add of the conf directory and use the -classpath entry in the script to add this directory.  That at least give the option of changing the script. ",Bug
AMQ-882,12481748,,"Scenario:
ActiveMQ and the publisher process running on the same server.
Several clients are running on several Windows-XP clients

Publisher code:
{code}
// initializing
connection = msgFactory.createTopicConnection();
connection.setExceptionListener(new JMSExceptionListener());
connection.start();

topicSession = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
topic = topicSession.createTopic(MFS_LOCATION_CHANGE_EVENT_TOPIC);

publisher = topicSession.createPublisher(topic);
publisher.setDeliveryMode(DeliveryMode.NON_PERSISTENT);
[...]
// sending several times with the same topic
try {
  publisher.publish(topicSession.createTextMessage(location.getName()));
} catch (JMSException e) {
  log.fatal(""Problems during informing Workplace topic:"" + location.getName(), e);
  [...]
{code}

Subscriber code:
{code}
topicConnection = msgFactory.createTopicConnection();
topicConnection.start();
topicConnection.setExceptionListener(new JMSExceptionListener(listeners, this));

topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
Topic topic = topicSession.createTopic(EventSender.MFS_LOCATION_CHANGE_EVENT_TOPIC);

topicSubscriber = topicSession.createSubscriber(topic);
topicSubscriber.setMessageListener(new MessageListener() {
        public void onMessage(Message message) {
          if (message instanceof TextMessage) {
[...]
      topicConnection.start();
{code}

After some thound of messages publish hangs for more than 1 minute and then throws a JMSException (see logs below). After searching in ActiveMQ mailing lists I changed the broker url of the publisher from:
* tcp://arvwms:61616
to 
* tcp://arvwms:61616?soTimeout=2000&connectionTimeout=10000&socketBufferSize=1024&wireFormat.maxInactivityDuration=0

This works some days fine, but now we get the exceptions again.

Is this a problem between topic publisher and ActiveMQ or could it be also a problem between ActiveMQ and topic subscriber? If it is real a problem between publisher and ActiveMQ it can't be a network problem, becuase it is the same server.

This problems occur about 10 times the day. With the exception and losing of 10 messages the day I could live, but the hanging about 1 minute is terrible for our application.

The Exception:
{code}
DEBUG 2006-08-17 12:45:53.738 portConfirmationDefaultHandler :    -:     - handle telegram: com.ssn.acx.extensions.logistics.mfsadapter.telegram.receiving.TransportOrderCompletionTelegram@1385c9f[ID=139887884,loadUnit=01900,lastLocation=SCS_CS,weight=<null>,orientation=0,infoType=COMPLETE,wmsID=1039340,reason=OK]
FATAL 2006-08-17 12:47:12.534 EventSender                    :    -:     - Problems during informing Workplace topic:SCS_CS
javax.jms.JMSException: Broken pipe
  at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1094)
  at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1553)
  at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:462)
  at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:356)
  at org.apache.activemq.ActiveMQTopicPublisher.publish(ActiveMQTopicPublisher.java:128)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.sendLocationChangeEvent(EventSender.java:150)
  at com.ssn.acx.extensions.logistics.mfsadapter.MFSTransactionWithSendingTrigger.commit(MFSTransactionWithSendingTrigger.java:109)
  at com.ssn.acx.core.common.transaction.GlobalTransactionImpl.commit(GlobalTransactionImpl.java:198)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.handleTelegram(TelegramDispatcher.java:306)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.dispatch(TelegramDispatcher.java:180)
  at com.ssn.acx.core.common.adapterservice.AbstractCollector.dispatch(AbstractCollector.java:81)
  at com.ssn.acx.api.common.adapterservice.TriggeredCollector.dispatch(TriggeredCollector.java:87)
  at com.ssn.acx.core.logistics.mfsadapter.MFSCollector.collectTelegrams(MFSCollector.java:122)
  at com.ssn.acx.core.logistics.mfsadapter.WakeUpListener.run(WakeUpListener.java:142)
  at java.lang.Thread.run(Thread.java:595)
Caused by: java.net.SocketException: Broken pipe
  at java.net.SocketOutputStream.socketWrite0(Native Method)
  at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
  at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:108)
  at java.io.DataOutputStream.flush(DataOutputStream.java:106)
  at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:125)
  at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
  at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
  at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
  at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
  at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1092)
  ... 14 more
WARN  2006-08-17 12:47:12.555 EventSender                    :    -:     - Destroy EventSender and cleanup JMS resources failed! Caught: javax.jms.JMSException: Cannot write to the stream any more it has already been closed
javax.jms.JMSException: Cannot write to the stream any more it has already been closed
  at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:57)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1094)
  at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1655)
  at org.apache.activemq.ActiveMQMessageProducer.close(ActiveMQMessageProducer.java:315)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.destroy(EventSender.java:84)
  at com.ssn.acx.extensions.logistics.mfsadapter.event.EventSender.sendLocationChangeEvent(EventSender.java:155)
  at com.ssn.acx.extensions.logistics.mfsadapter.MFSTransactionWithSendingTrigger.commit(MFSTransactionWithSendingTrigger.java:109)
  at com.ssn.acx.core.common.transaction.GlobalTransactionImpl.commit(GlobalTransactionImpl.java:198)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.handleTelegram(TelegramDispatcher.java:306)
  at com.ssn.acx.core.common.adapterservice.TelegramDispatcher.dispatch(TelegramDispatcher.java:180)
  at com.ssn.acx.core.common.adapterservice.AbstractCollector.dispatch(AbstractCollector.java:81)
  at com.ssn.acx.api.common.adapterservice.TriggeredCollector.dispatch(TriggeredCollector.java:87)
  at com.ssn.acx.core.logistics.mfsadapter.MFSCollector.collectTelegrams(MFSCollector.java:122)
  at com.ssn.acx.core.logistics.mfsadapter.WakeUpListener.run(WakeUpListener.java:142)
  at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.EOFException: Cannot write to the stream any more it has already been closed
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.checkClosed(TcpBufferedOutputStream.java:131)
  at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:69)
  at java.io.DataOutputStream.writeInt(DataOutputStream.java:180)
  at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:238)
  at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
  at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
  at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
  at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
  at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
  at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
  at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1092)
  ... 13 more
INFO  2006-08-17 12:47:12.555 EventSender                    :    -:     - Destroyed event sender{code}
",Bug
AMQ-839,12481762,,"If a client closes a connection, and then fairly quicly tries to open a connection with the same clientid, this sometimes fails.  Apparently, the connection is not completely closed on the broker when the close on the connection completes.  This allows the client to try to open a conection and receive a client already connected exception.   The close connection should not return until the connection is actually closed, or at least an attribute on the collection should allow for setting if you want to wait or not.
",Bug
AMQ-835,12481760,,"when connection closing, connection doesn't remove itself from factoryStats. so every opened connection cause to grow memory. this can be fixed by adding factoryStats.removeConnection(this); in the close() method.",Bug
AMQ-962,12481939,,"Using Spring, configured a VM message broker (non-persistant) and a message consumer that reads messages from queue.

Messages are read from queue, but despite calling message.acknowledge(); messages remain on the queue (and consume memory).

I turned off optimiseAcknowledge.

May be related to bug# AMQ-716.

	  <amq:broker id=""broker"" useJmx=""true"" persistent=""false"">
	    <amq:transportConnectors>
	      <amq:transportConnector uri=""tcp://localhost:0"" />
	    </amq:transportConnectors>
	  </amq:broker>

	 <!-- a pooling based JMS provider -->
	  <bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
	    <property name=""connectionFactory"">
	      <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
	        <property name=""brokerURL"">
	          <value>vm://localhost</value>
	        </property>
	        <property name=""optimizeAcknowledge"">
	          <value>false</value>
	        </property>	        
	      </bean>
	    </property>
	  </bean>

	  <bean id=""simpleJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
	    <property name=""connectionFactory"">
	    	<ref local=""jmsFactory"" />
	    </property>
	  </bean>

",Bug
AMQ-1089,12481912,,"When using a transportconnector with a multicast discoveryagent a warning is shown.

config: <transportConnector  name=""default"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>

WARN  MulticastDiscoveryAgent          -brokerName not set

When the transportconnector is started the MulticastDiscoveryAgent is created if it does not exist,
but the brokerName for this MulticastDiscoveryAgent is not set by the transportconnector.

See the code and the suggested modification to prevent this warning:

org.apache.activemq.broker.TransportConnector.java

<snip>
public void start() throws Exception {
        getServer().start();
        DiscoveryAgent da = getDiscoveryAgent();
        if( da!=null ) {
            da.registerService(getConnectUri().toString());
            //suggested modification start
            if(da.getBrokerName() == null || da.getBrokerName().length == 0) {
                   da.setBrokerName(this.getBroker().getBrokerName());
            }
            //suggested modification end
            da.start();
        }
        this.statusDector.start();
        log.info(""Connector ""+getName()+"" Started"");
    }
<snap>",Bug
AMQ-852,12482238,,"When you run ""my test program"" and end this process  with Ctrl+C/ kill/ kill -9 ( i mostly used Ctrl+C) sometimes during let say 100 iteration ""communication between client and broker is damaged"". This results in situation when after restart ( new pid ) client program is unable to create producer.  call to   consumer = rec_session->createConsumer( rec_queue );
 hangs client program. Sometimes this results with exception as you can see in output of my program. I think that this only occurs when the session is in ClienAckMode. From my point of view is there incorrect handling of situation when client receives message from broker and than terminates connection without ack/nack this receive in certatin circumstances ...

output:
 ./amqtest tcp://lxstaflik:61616 PH_Q_IN_10 PH_Q_OUT_10
Setting connection URL to 'tcp://lxstaflik:61616'
Setting receive queue name to 'PH_Q_IN_10'
Setting send queue name to 'PH_Q_OUT_10'
Init ...
Creating connection factory ...
Connection factory created, creating connection ...
Connection created, creating receive session...
receive session created, creating sending session ...
send session created, creating receive queue...'PH_Q_IN_10'
receive queue created, creating consumer for this queue ...
setting listener ...
Error on connection Unmarshal failed; unknown data structure type 49, at src/main/cpp/activemq/protocol/openwire/OpenWireMarshaller.cpp line 711Exiting read loop due to exception: Unmarshal failed; unknown data structure type 49, at src/main/cpp/activemq/protocol/openwire/OpenWireMarshaller.cpp line 711


Here is source code of my example:
#include <stdio.h>
#include <unistd.h>

#include <exception>
#include <iostream>
#include <map>
#include <string>

#include ""cms/IConnection.hpp""
#include ""cms/IConnectionFactory.hpp""
#include ""activemq/ConnectionFactory.hpp""
#include ""activemq/Connection.hpp""
#include ""activemq/Session.hpp""
#include ""ppr/TraceException.hpp""
#include ""ppr/net/Uri.hpp""
#include ""ppr/util/ifr/p""

using namespace apache::activemq;
using namespace apache::cms;
using namespace apache::ppr;
using namespace apache::ppr::net;
using namespace ifr;
using namespace std;


class ActiveMQTest : public IExceptionListener, public IMessageListener {
  private:
        p<Uri>                  uri;
        p<IConnectionFactory>   factory;
        p<IConnection>          connection;
        p<ISession>             rec_session;
        p<ISession>             snd_session;
        p<IQueue>               rec_queue;
        p<IQueue>               snd_queue;
        p<IMessageProducer>     producer;
        p<IMessageConsumer>     consumer;
        p<ITextMessage>         txtmsg;
        char szRecQueue[128];
        char szSndQueue[128];
  public:
        ActiveMQTest();
        virtual ~ActiveMQTest();
        virtual void setUri(const char *);
        virtual void init();
        virtual void done();
        virtual void onException(exception& error);
        virtual void onMessage(p<IMessage> message);
        virtual void ActiveMQTest::setSndQueue(const char *szQueue);
        virtual void ActiveMQTest::setRecQueue(const char *szQueue);
};

void ActiveMQTest::onMessage( p<IMessage> message) {
   p<ITextMessage>      snd_message;

   this->txtmsg = p_dyncast<ITextMessage>(message);

   p<string> string_request = txtmsg->getText();

   if (string_request != NULL ) {
     printf(""Received message : %s"",string_request->c_str());
   }

   sleep(10);

   message->acknowledge();

   snd_message = snd_session->createTextMessage() ;
   snd_message->setText(""TEST\n"") ;
   snd_message->setJMSPersistent(1);
   // Send message
   producer->send(message) ;
}

void ActiveMQTest::done() {
   rec_session->close();
   snd_session->close();
}

void ActiveMQTest::setUri(const char * uri) {
    this->uri = new Uri(uri) ;
}

void ActiveMQTest::setSndQueue(const char *szQueue) {
  strcpy(szSndQueue,szQueue);
}

void ActiveMQTest::setRecQueue(const char *szQueue) {
  strcpy(szRecQueue,szQueue);
}

ActiveMQTest::ActiveMQTest() {
  this->connection = NULL;
  this->rec_session = NULL;
  this->snd_session = NULL;
  memset(szRecQueue,0x0,sizeof(szRecQueue));
  memset(szSndQueue,0x0,sizeof(szSndQueue));
}

ActiveMQTest::~ActiveMQTest() {
}

void ActiveMQTest::init() {
  try {
    cout.rdbuf(cerr.rdbuf());
    printf(""1 Creating connection factory ... \n"");
    factory = new ConnectionFactory( uri );

    printf(""Connection factory created, creating connection ...\n"");
    connection = factory->createConnection();

    printf(""Connection created, creating receive session...\n"");
    p_cast<Connection>(connection)->setExceptionListener( smartify( this ) );
    //rec_session = connection->createSession(AutoAckMode);
    rec_session = connection->createSession(ClientAckMode);

    printf(""receive session created, creating sending session ...\n"");
    snd_session = connection->createSession(AutoAckMode);

    printf(""send session created, creating receive queue...'%s'\n"",szRecQueue);
    rec_queue = rec_session->getQueue( szRecQueue );


    printf(""receive queue created, creating consumer for this queue ...\n"");
    consumer = rec_session->createConsumer( rec_queue );


    printf(""setting listener ...\n"");
    snd_queue = snd_session->getQueue( szSndQueue );
    consumer->setMessageListener( smartify( this ) );
    producer = snd_session->createProducer( snd_queue );

    (p_dyncast<apache::activemq::Session>(rec_session))->dispatch(0);

    printf(""Init Ok.\n"");

  } catch ( TraceException& e ) {
    printf(""Error during init  ... \n"");
  }
}

void ActiveMQTest::onException( exception& error ) {
  printf(""Error on connection %s"", error.what() );
}


int main(int argc,char *argv[]) {
  ActiveMQTest* myAq;


  if ( argc < 3 ) {
    printf(""Usage: amqtest <connection_url> <receive_queue> <send_queue>\n"");
    exit(0);
  }

  myAq = new ActiveMQTest;

  printf(""Setting connection URL to '%s'\n"",argv[1]);
  myAq->setUri(argv[1]);

  printf(""Setting receive queue name to '%s'\n"",argv[2]);
  myAq->setRecQueue( argv[2] );

  printf(""Setting send queue name to '%s'\n"",argv[3]);
  myAq->setSndQueue( argv[3] );

  printf(""Init ...\n"");
  myAq->init();


int i=0;
  while( i < 3000 ) {
    printf(""Idle ... \n"");
    sleep( 1 );
    i++;
  }

  myAq->done();

  return 0;
}


",Bug
AMQ-1114,12481015,,"ActiveMQ: Through 'jconsole' we can view all the java components which ever is active. So by this way, we can see the particular queue and also we can able to find how many customers are listening.

But I want to manage the queue, like I want to kill a particular queue.  Can anybody help me how to proceed with?

It's pleasure to explain more if you are not clear.

Thanks in advance
Shekar",Bug
AMQ-898,12481864,,"We routinely have our message distribution locked up permanently and without means of recovery by a socketWrite0 call that hangs indefinitely in a thread holding a number of the Active MQ locks.  Here is a stack trace of such a locked up thread:

        at java.net.SocketOutputStream.socketWrite0(Native Method)
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:95)
        at java.io.DataOutputStream.write(DataOutputStream.java:90)
        - locked <0x4bc298c8> (a java.io.DataOutputStream)
        at org.apache.activemq.openwire.v1.BaseDataStreamMarshaller.tightMarshalByteSequence2(BaseDataStreamMarshaller.java:403)
        at org.apache.activemq.openwire.v1.MessageMarshaller.tightMarshal2(MessageMarshaller.java:160)
        at org.apache.activemq.openwire.v1.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:88)
        at org.apache.activemq.openwire.v1.ActiveMQObjectMessageMarshaller.tightMarshal2(ActiveMQObjectMessageMarshaller.java:88)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:240)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:124)
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:141)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:78)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:77)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x4bac2b80> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1111)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1553)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:462)
        at com.hb.jms.api.util.JmsSession.sendObjects(JmsSession.java:345)
        - locked <0x4aca1230> (a org.apache.activemq.ActiveMQSession)
        at com.hb.jms.api.util.JmsSession.sendObjects(JmsSession.java:307)
        at com.hb.jms.api.util.JmsSession$QueueProcessor.sendFromSessionQueue(JmsSession.java:1002)
        - locked <0x6adc9f80> (a com.hb.jms.api.util.JmsSession$SessionQueue)
        at com.hb.jms.api.util.JmsSession$QueueProcessor.run(JmsSession.java:981)
        at java.lang.Thread.run(Thread.java:595)",Bug
AMQ-774,12482963,,"I've been through the doc:

http://www.activemq.org/site/how-to-deploy-activemq-ra-versionrar-to-weblogic.html

However, when I attempt to deploy the broker on Weblogic 9.1 (actually, when i click on ""activate changes""), i get the following error:

weblogic.connector.exception.RAException: There are 1 nested errors: javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: file://../broker-config.xml, due to: java.io.IOException: Could load file factory:java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:82) at weblogic.connector.security.layer.AdapterLayer.start(AdapterLayer.java:979) at weblogic.connector.common.RAInstanceManager.initialize(RAInstanceManager.java:1139) at weblogic.connector.common.RAInstanceManager.<init>(RAInstanceManager.java:333) at weblogic.connector.deploy.ConnectorModule.prepare(ConnectorModule.java:178) at weblogic.application.internal.flow.ModuleListenerInvoker.prepare(ModuleListenerInvoker.java:90) at weblogic.application.internal.flow.DeploymentCallbackFlow$1.next(DeploymentCallbackFlow.java:318) at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26) at weblogic.application.internal.flow.DeploymentCallbackFlow.prepare(DeploymentCallbackFlow.java:53) at weblogic.application.internal.flow.DeploymentCallbackFlow.prepare(DeploymentCallbackFlow.java:43) at weblogic.application.internal.BaseDeployment$1.next(BaseDeployment.java:620) at weblogic.application.utils.StateMachineDriver.nextState(StateMachineDriver.java:26) at weblogic.application.internal.BaseDeployment.prepare(BaseDeployment.java:231) at weblogic.application.internal.DeploymentStateChecker.prepare(DeploymentStateChecker.java:147) at weblogic.deploy.internal.targetserver.AppContainerInvoker.prepare(AppContainerInvoker.java:61) at weblogic.deploy.internal.targetserver.operations.ActivateOperation.createAndPrepareContainer(ActivateOperation.java:183) at weblogic.deploy.internal.targetserver.operations.ActivateOperation.doPrepare(ActivateOperation.java:84) at weblogic.deploy.internal.targetserver.operations.AbstractOperation.prepare(AbstractOperation.java:219) at weblogic.deploy.internal.targetserver.DeploymentManager.handleDeploymentPrepare(DeploymentManager.java:750) at weblogic.deploy.internal.targetserver.DeploymentManager.prepareDeploymentList(DeploymentManager.java:1209) at weblogic.deploy.internal.targetserver.DeploymentManager.handlePrepare(DeploymentManager.java:246) at weblogic.deploy.internal.targetserver.DeploymentServiceDispatcher.prepare(DeploymentServiceDispatcher.java:157) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.doPrepareCallback(DeploymentReceiverCallbackDeliverer.java:157) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer.access$000(DeploymentReceiverCallbackDeliverer.java:12) at weblogic.deploy.service.internal.targetserver.DeploymentReceiverCallbackDeliverer$1.run(DeploymentReceiverCallbackDeliverer.java:45) at weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518) at weblogic.work.ExecuteThread.execute(ExecuteThread.java:207) at weblogic.work.ExecuteThread.run(ExecuteThread.java:179) Caused by: java.io.IOException: Could load file factory:java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:24) at org.apache.activemq.broker.BrokerFactory.createBrokerFactoryHandler(BrokerFactory.java:42) at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:55) at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:79) ... 27 more Caused by: java.io.IOException: Could not find factory class for resource: META-INF/services/org/apache/activemq/broker/file at org.apache.activeio.util.FactoryFinder.doFindFactoryProperies(FactoryFinder.java:87) at org.apache.activeio.util.FactoryFinder.newInstance(FactoryFinder.java:57) at org.apache.activeio.util.FactoryFinder.newInstance(FactoryFinder.java:46) at org.apache.activemq.broker.BrokerFactory.createBrokerFactoryHandler(BrokerFactory.java:40) ... 29 more",Bug
AMQ-832,12482981,,"I'm sending and receiving messages entirely through STOMP and messages are getting stuck in the queue (using 4.0.1).

This is pretty inconvenient as when I restart my processes and they re-subscribe, the messages get re-delivered to them.

incubator-activemq-4.0.1/bin$ ./browse --amqurl tcp://localhost:61616 something/game/0
JMS_CUSTOM_FIELD:_timestamp = 2006-07-19 10:23:43.847049
JMS_HEADER_FIELD:JMSDestination = something/game/0
JMS_HEADER_FIELD:JMSDeliveryMode = non-persistent
JMS_HEADER_FIELD:JMSMessageID = ID:hotei-60326-1153156802410-3:589:-1:1:8
JMS_BODY_FIELD:JMSBytes:1 =
JMS_HEADER_FIELD:JMSExpiration = 0
JMS_HEADER_FIELD:JMSPriority = 0
JMS_HEADER_FIELD:JMSRedelivered = false
JMS_HEADER_FIELD:JMSTimestamp = 0

JMS_CUSTOM_FIELD:_timestamp = 2006-07-19 10:23:45.535995
JMS_HEADER_FIELD:JMSDestination = something/game/0
JMS_HEADER_FIELD:JMSDeliveryMode = non-persistent
JMS_HEADER_FIELD:JMSMessageID = ID:hotei-60326-1153156802410-3:589:-1:1:9
JMS_BODY_FIELD:JMSBytes:1 =
JMS_HEADER_FIELD:JMSExpiration = 0
JMS_HEADER_FIELD:JMSPriority = 0
JMS_HEADER_FIELD:JMSRedelivered = false
JMS_HEADER_FIELD:JMSTimestamp = 0

I'm not using durable subscriptions, persistence messaging, etc.

Is there something that I'm doing wrong that might cause this?

The messages randomly get stuck .. it isn't always repeatable and is much less frequent with 4.0.1 than it was with 4.0 prereleases.

This software is going into production soon, so would it be safe to try out a 4.0.2 or 4.1 snapshot?  Would they be likely to fix this given the current sets of changes in them?
",Bug
AMQ-1035,12483141,,"Hi,

We have an AMQ Broker [4.1.0 incubator SNAPSHOT] running as a standalone java application.
 
The AMQ Broker has Authentication and Authorization plugins installed by virtue of which only users with the correct credentials may get authenticated onto the Broker, and further Access roles and permissions with respect to users and admin have been set up using the Authorization plugin.

The above broker supports both TCP and STOMP.


CASE 1:

When we connect using TCP and a JAVA written client, both the plugins work correctly and as expected.


CASE 2:

When we connect using STOMP and the Java written client:

 - The program stalls at ""connection.start(); Does not proceed further from here...


CASE 3:

When we use C++ and STOMP following are our observations:


[1] When connecting using the STOMP client with incorrect credentials, the AMQ Broker throws SecurityException [which is expected], however the STOMP client receives a message 'CONNECTED'

[2] The STOMP client does not get notified that there was a SecurityException while connecting [when connecting using wrong credentials].



Questions are:

[1] Why does the program execution not proceed in case of CASE 2 ?

[2] How does the C++ STOMP client get notified of any Authentication or Authorization exceptions that may be generated at the AMQ Broker end ?

Thanks in anticipation.

Aditya",Bug
AMQ-1604,12483410,,"
(1) Please rename the activemq-all-<version>.jar to just activemq-all.jar. It will make it easier for users to switch version. We would generally put the activemq release on a shared drive and change the pointer ""prod"", ""dev"" or ""staging"" to point to the new directory. It would be nice if the activemq-all.jar was present in all releases so the link would be the only thing I would need to change.

(2) Please change the log4j appender:
log4j.appender.out.file=${activemq.base}/data/activemq.log 
Oftentimes activemq is in a protected directory on a network drive (${activemq.base}/) so many machines can use it. It would be better if the log file would log to /tmp  or something else the user can configure. Maybe it can be configured in the activemq.xml file? (I always have to change this every time we upgrade to a new version)",Bug
AMQ-1256,12482043,,"On the bulletin board I was told that I can turn off advisory topics because the advisory topics don't disappear for temporary queues and it was impacting performance. Turning off advisory queues DISABLES access to temporary queues. When advisorySupport=""false"" any publishing to a temporary queue results in the following exception (even though the queue is open & available):

javax.jms.JMSException: Cannot publish to a deleted Destination: temp-queue://ID:rpc9-4350-1180554015568-0:0:1
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1498)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:415)",Bug
AMQ-1239,12481262,,"Seems like not committed file :(
Build log

H:\workspace\activemq-4.1>mvn -Dmaven.test.skip=true install
[INFO] Scanning for projects...
[INFO] Reactor build order:
[INFO]   ActiveMQ
[INFO]   ActiveMQ :: JAAS
[INFO]   ActiveMQ :: Core
[INFO]   ActiveMQ :: Console
[INFO]   Openwire Generator
[INFO]   ActiveMQ :: Optional
[INFO]   ActiveMQ :: RA
[INFO]   ActiveMQ :: RAR
[INFO]   ActiveMQ :: Atomikos System Test
[INFO]   ActiveMQ Tooling
[INFO]   ActiveMQ :: Memory Usage Test Plugin
[INFO]   ActiveMQ :: Performance Test Plugin
[INFO]   ActiveMQ :: StartUp Plugin
[INFO]   ActiveMQ :: Web
[INFO]   ActiveMQ :: Web Demo
[INFO]   ActiveMQ :: XMPP
[INFO]   ActiveMQ :: Web Console
[INFO]   ActiveMQ :: Assembly
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] [site:attach-descriptor]
[INFO] [install:install]
[INFO] Installing H:\workspace\activemq-4.1\pom.xml to C:\Documents and Settings\Mykola Palienko\.m2\repository\org\apa
he\activemq\activemq-parent\4.1-SNAPSHOT\activemq-parent-4.1-SNAPSHOT.pom
[INFO] [maven-one-plugin:install-maven-one-repository {execution: default}]
[INFO] Installing H:\workspace\activemq-4.1\pom.xml to C:\Documents and Settings\Mykola Palienko\.maven\repository\org.
pache.activemq\poms\activemq-parent-4.1-SNAPSHOT.pom
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: JAAS
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
Downloading: http://people.apache.org/repo/m2-incubating-repository/directory-protocols/kerberos-protocol/0.5/kerberos-
rotocol-0.5.pom
Downloading: http://repo1.maven.org/maven2/directory-protocols/kerberos-protocol/0.5/kerberos-protocol-0.5.pom
Downloading: http://people.apache.org/repo/m2-incubating-repository/directory-protocols/ldap-protocol/0.9.2/ldap-protoc
l-0.9.2.pom
Downloading: http://repo1.maven.org/maven2/directory-protocols/ldap-protocol/0.9.2/ldap-protocol-0.9.2.pom
[INFO] [compiler:compile]
[INFO] Nothing to compile - all classes are up to date
[INFO] [resources:testResources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:testCompile]
[INFO] Not compiling test sources
[INFO] [surefire:test]
[INFO] Tests are skipped.
[INFO] [jar:jar]
[INFO] Building jar: H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] [install:install]
[INFO] Installing H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar to C:\Documents and Set
ings\Mykola Palienko\.m2\repository\org\apache\activemq\activemq-jaas\4.1-SNAPSHOT\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] [maven-one-plugin:install-maven-one-repository {execution: default}]
[INFO] Installing H:\workspace\activemq-4.1\activemq-jaas\target\activemq-jaas-4.1-SNAPSHOT.jar to C:\Documents and Set
ings\Mykola Palienko\.maven\repository\org.apache.activemq\jars\activemq-jaas-4.1-SNAPSHOT.jar
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [install]
[INFO] ----------------------------------------------------------------------------
[INFO] artifact org.codehaus.mojo:build-helper-maven-plugin: checking for updates from apache.incubating.releases
[WARNING] While downloading javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] [javacc:javacc {execution: default}]
[INFO] Nothing to process - all grammars are up to date
[INFO] [xbean:mapping {execution: default}]
Checking: org.apache.activemq.memory.UsageManager
Checking: org.apache.activemq.store.rapid.RapidPersistenceAdapter
Checking: org.apache.activemq.store.jdbc.adapter.ImageBasedJDBCAdaptor
Checking: org.apache.activemq.store.jdbc.adapter.InformixJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.StreamJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.AxionJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.BlobJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.BytesJDBCAdapter
Checking: org.apache.activemq.store.jdbc.adapter.DB2JDBCAdapter
Checking: org.apache.activemq.store.jdbc.Statements
Checking: org.apache.activemq.store.jdbc.JDBCPersistenceAdapter
Checking: org.apache.activemq.store.memory.MemoryPersistenceAdapter
Checking: org.apache.activemq.store.journal.JournalPersistenceAdapter
Checking: org.apache.activemq.store.journal.QuickJournalPersistenceAdapter
Checking: org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter
Checking: org.apache.activemq.store.PersistenceAdapterFactoryBean
Checking: org.apache.activemq.xbean.XBeanBrokerService
Checking: org.apache.activemq.spring.ActiveMQConnectionFactory
Checking: org.apache.activemq.spring.ActiveMQXAConnectionFactory
Checking: org.apache.activemq.security.LDAPAuthorizationMap
Checking: org.apache.activemq.security.JaasCertificateAuthenticationPlugin
Checking: org.apache.activemq.security.DefaultAuthorizationMap
Checking: org.apache.activemq.security.SimpleAuthenticationPlugin
Checking: org.apache.activemq.security.SimpleAuthorizationMap
Checking: org.apache.activemq.security.AuthorizationPlugin
Checking: org.apache.activemq.security.AuthorizationEntry
Checking: org.apache.activemq.security.JaasAuthenticationPlugin
Checking: org.apache.activemq.proxy.ProxyConnector
Checking: org.apache.activemq.broker.region.virtual.CompositeTopic
Checking: org.apache.activemq.broker.region.virtual.VirtualTopic
Checking: org.apache.activemq.broker.region.virtual.CompositeQueue
Checking: org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor
Checking: org.apache.activemq.broker.region.group.SimpleMessageGroupMapFactory
Checking: org.apache.activemq.broker.region.group.MessageGroupHashBucketFactory
Checking: org.apache.activemq.broker.region.policy.FixedSizedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.StrictOrderDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.TimedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.VMPendingQueueMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.PrefetchRatePendingMessageLimitStrategy
Checking: org.apache.activemq.broker.region.policy.QueryBasedSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy
Checking: org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.OldestMessageWithLowestPriorityEvictionStrategy
Checking: org.apache.activemq.broker.region.policy.NoSubscriptionRecoveryPolicy
Checking: org.apache.activemq.broker.region.policy.FilePendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.PolicyEntry
Checking: org.apache.activemq.broker.region.policy.RoundRobinDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.OldestMessageEvictionStrategy
Checking: org.apache.activemq.broker.region.policy.VMPendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.region.policy.ConstantPendingMessageLimitStrategy
Checking: org.apache.activemq.broker.region.policy.SharedDeadLetterStrategy
Checking: org.apache.activemq.broker.region.policy.SimpleDispatchPolicy
Checking: org.apache.activemq.broker.region.policy.PolicyMap
Checking: org.apache.activemq.broker.region.policy.StorePendingDurableSubscriberMessageStoragePolicy
Checking: org.apache.activemq.broker.jmx.ManagementContext
Checking: org.apache.activemq.broker.ft.MasterConnector
Checking: org.apache.activemq.broker.view.ConnectionDotFilePlugin
Checking: org.apache.activemq.broker.view.DestinationDotFilePlugin
Checking: org.apache.activemq.broker.util.TimeStampingBrokerPlugin
Checking: org.apache.activemq.broker.util.MulticastTraceBrokerPlugin
Checking: org.apache.activemq.broker.util.LoggingBrokerPlugin
Checking: org.apache.activemq.broker.util.UDPTraceBrokerPlugin
Checking: org.apache.activemq.broker.util.CommandAgent
Checking: org.apache.activemq.broker.TransportConnector
Checking: org.apache.activemq.network.jms.InboundQueueBridge
Checking: org.apache.activemq.network.jms.OutboundQueueBridge
Checking: org.apache.activemq.network.jms.JmsTopicConnector
Checking: org.apache.activemq.network.jms.JmsQueueConnector
Checking: org.apache.activemq.network.jms.InboundTopicBridge
Checking: org.apache.activemq.network.jms.SimpleJmsMessageConvertor
Checking: org.apache.activemq.network.jms.OutboundTopicBridge
Checking: org.apache.activemq.network.ForwardingBridge
Checking: org.apache.activemq.network.DemandForwardingBridge
Checking: org.apache.activemq.network.MulticastNetworkConnector
Checking: org.apache.activemq.network.CompositeDemandForwardingBridge
Checking: org.apache.activemq.network.DiscoveryNetworkConnector
Checking: org.apache.activemq.command.ActiveMQQueue
Checking: org.apache.activemq.command.ActiveMQTopic
Checking: org.apache.activemq.filter.DefaultDestinationMapEntry
Checking: org.apache.activemq.ActiveMQPrefetchPolicy
Checking: org.apache.activemq.RedeliveryPolicy
[INFO] Generating META-INF properties file: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\services\org\
pache\xbean\spring\http\activemq.org\config\1.0 for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 handler mapping: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\spring.hand
ers for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 schema mapping: H:\workspace\activemq-4.1\activemq-core\target\xbean\META-INF\spring.schem
s for namespace: http://activemq.org/config/1.0
[INFO] Generating HTML documentation file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd.html for n
mespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.security.AuthorizationEntry: java.lang.ClassNotFoundException: org.a
ache.activemq.security.AuthorizationEntry
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.a
tivemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.DemandForwardingBridgeSupport: java.lang.ClassNotFoundExcept
on: org.apache.activemq.network.DemandForwardingBridgeSupport
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.broker.region.policy.PolicyEntry: java.lang.ClassNotFoundException:
rg.apache.activemq.broker.region.policy.PolicyEntry
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
[INFO] Generating XSD file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd for namespace: http://act
vemq.org/config/1.0
[INFO] Generating WIKI documentation file: H:\workspace\activemq-4.1\activemq-core\target\xbean\activemq.xsd.wiki for n
mespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.NetworkConnector: java.lang.ClassNotFoundException: org.apac
e.activemq.network.NetworkConnector
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.InboundQueueBridge: java.lang.ClassNotFoundException: or
.apache.activemq.network.jms.InboundQueueBridge
Warning, could not load class: org.apache.activemq.network.jms.OutboundQueueBridge: java.lang.ClassNotFoundException: o
g.apache.activemq.network.jms.OutboundQueueBridge
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.a
ache.activemq.command.ActiveMQDestination
[INFO] ...done.
[INFO] [resources:resources]
[INFO] Using default encoding to copy filtered resources.
[INFO] [compiler:compile]
[INFO] Compiling 329 source files to H:\workspace\activemq-4.1\activemq-core\target\classes
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Compilation failure

H:\workspace\activemq-4.1\activemq-core\src\main\java\org\apache\activemq\thread\Scheduler.java:[55,34] cannot find sym
ol
symbol  : class RunnableScheduledFuture
location: class org.apache.activemq.thread.Scheduler

H:\workspace\activemq-4.1\activemq-core\src\main\java\org\apache\activemq\thread\Scheduler.java:[56,33] cannot find sym
ol
symbol  : class RunnableScheduledFuture
location: class org.apache.activemq.thread.Scheduler


[INFO] ------------------------------------------------------------------------
[INFO] For more information, run Maven with the -e switch
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 2 minutes 28 seconds
[INFO] Finished at: Tue May 01 13:15:49 EEST 2007
[INFO] Final Memory: 26M/55M
[INFO] ------------------------------------------------------------------------",Bug
AMQ-1090,12482837,,"When running ActiveMQ as a service using the Java Wrapper Service, the CPU usage is 100%.  My logging levels are set to ERROR and there is nothing in the log.  I have tried both methods of JWS: WrapperSimpleApp and WrapperStartStopApp.  Perhaps this is a JWS issue but I've been searching around and anything I've found points back to the application.

The workaround is to not run ActiveMQ as a service but that is not the optimal solution in a production environment where ActiveMQ needs to start upon re-boot of the machine.",Bug
AMQ-941,12481948,,"Exception in thread ""ActiveMQ Transport Server: tcp://localhost:61616"" java.lang.OutOfMemoryError: Java heap space
        at org.apache.activemq.openwire.OpenWireFormat.<init>(OpenWireFormat.java:60)
        at org.apache.activemq.openwire.OpenWireFormat.<init>(OpenWireFormat.java:65)
        at org.apache.activemq.openwire.OpenWireFormatFactory.createWireFormat(OpenWireFormatFactory.java:58)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:164)
        at java.lang.Thread.run(Thread.java:619)

Java heap histogram (top 50 only):

num   #instances    #bytes  class name
--------------------------------------
  1:       650    42603600  [Lorg.apache.activemq.command.DataStructure;
  2:      7388     9818352  [B
  3:     32554     3305656  <constMethodKlass>
  4:     32554     2866464  <methodKlass>
  5:     26761     2321496  [Ljava.util.HashMap$Entry;
  6:     41208     1935824  <symbolKlass>
  7:     26582     1605224  [Ljava.lang.Object;
  8:     14316     1573672  [C
  9:      2777     1528528  <constantPoolKlass>
 10:     38976     1247232  edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap$Segment
 11:      2777     1237080  <instanceKlassKlass>
 12:     26731     1069240  java.util.HashMap
 13:      2458      992592  <constantPoolCacheKlass>
 14:     24395      780640  org.apache.activemq.filter.DestinationMapNode
 15:     32011      768264  java.util.HashMap$Entry
 16:     38976      651464  [Ledu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap$HashEntry;
 17:     38984      623744  edu.emory.mathcs.backport.java.util.concurrent.locks.ReentrantLock$NonfairSync
 18:     25303      607272  java.util.ArrayList
 19:     23150      555600  java.lang.String
 20:      3100      297600  java.lang.Class
 21:      3536      266144  [I
 22:        61      250832  [Lorg.apache.activemq.command.ConsumerId;
 23:      3452      226136  [S
 24:      4446      207928  [[I
 25:      2436      194880  [Ledu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap$Segment;
 26:      2436      116928  edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap
 27:       314      100480  <objArrayKlassKlass>
 28:      3593       86232  edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap$HashEntry
 29:       464       77952  org.apache.activemq.command.ActiveMQMessage
 30:      2328       71616  [Ljava.lang.String;
 31:      1453       69744  org.apache.activemq.command.ProducerId
 32:      1434       68832  org.apache.activemq.management.CountStatisticImpl
 33:      1645       65800  org.apache.activemq.command.SessionId
 34:      1257       60336  org.apache.activemq.command.ActiveMQTempQueue
 35:       658       52640  java.lang.reflect.Method
 36:      3251       52016  edu.emory.mathcs.backport.java.util.concurrent.atomic.AtomicBoolean
 37:      1235       49400  org.apache.activemq.command.ProducerInfo
 38:      1928       46272  java.util.Hashtable$Entry
 39:      1382       44224  java.lang.ref.SoftReference
 40:       334       40080  java.net.SocksSocketImpl
 41:       350       39200  java.lang.Thread
 42:       647       36232  edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask
 43:       853       34120  org.apache.activemq.command.MessageId
 44:       526       33664  java.lang.reflect.Constructor
 45:       323       33592  org.apache.activemq.broker.jmx.ManagedTransportConnection
 46:      1365       32760  javax.management.ObjectName$Property
 47:       322       30912  org.apache.activemq.transport.tcp.TcpTransport
 48:      1196       28704  org.apache.activemq.state.ProducerState
 49:       390       28080  org.apache.activemq.broker.region.IndirectMessageReference
 50:       348       27840  [Ljava.lang.ThreadLocal$ThreadLocalMap$Entry;
",Bug
AMQ-1137,12481933,,"h2. USE CASE
# Take 4.1.0 Release from http://people.apache.org/repo/m2-incubating-repository/org/apache/activemq/apache-activemq/4.1.0-incubator/apache-activemq-4.1.0-incubator.zip and unzip on a Linux box (SuSE 10.1, Kernel 2.6.16 with 2GB RAM and  Xeon(TM) CPU 2.80GHz
# Edit {{conf/activemq.xml}} and disable ssl and stomp transport
# Start broker: {{apache-activemq-4.1.0-incubator/bin> java -jar run.jar}}
# Edit {{example/build.xml}} and set max=1000 (send 1000 messages to queue) and *transacted=true*
# Run producer: {{ant producer}}

h2. Results

{code:title=broker logfile}
ACTIVEMQ_HOME: /home/janknecht/tmp/apache-activemq-4.1.0-incubator
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.1.0-incubator JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
INFO  DefaultDatabaseLocker          - Becoming the master on dataSource: org.apache.derby.jdbc.EmbeddedDataSource@14627a
INFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: /home/janknecht/tmp/apache-activemq-4.1.0-incubator/activemq-data/journal
INFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://acxlin.wu.ssn:61616
INFO  TransportConnector             - Connector openwire Started
INFO  NetworkConnector               - Network Connector default-nc Started
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:acxlin.wu.ssn-60609-1169619821670-1:0) started
{code} 


{code:title=producer output}
producer:
     [echo] Running producer against server at $url = tcp://localhost:61616 for subject $subject = TEST.FOO
     [java] Connecting to URL: tcp://localhost:61616
     [java] Publishing a Message with size 1000 to queue: TEST.FOO
     [java] Using non-persistent messages
     [java] Sleeping between publish 0 ms
     [java] Sending message: Message: 0 sent at: Wed Jan 24 07:28:14 CET 2007  ...
     [java] Sending message: Message: 1 sent at: Wed Jan 24 07:28:14 CET 2007  ...
     [java] Sending message: Message: 2 sent at: Wed Jan 24 07:28:14 CET 2007  ...
     [java] Sending message: Message: 3 sent at: Wed Jan 24 07:28:15 CET 2007  ...
     [java] Sending message: Message: 4 sent at: Wed Jan 24 07:28:15 CET 2007  ...
     [java] Sending message: Message: 5 sent at: Wed Jan 24 07:28:15 CET 2007  ...
...
     [java] Sending message: Message: 998 sent at: Wed Jan 24 07:28:55 CET 2007...
     [java] Sending message: Message: 999 sent at: Wed Jan 24 07:28:55 CET 2007...
     [java] Done.
     [java] connection {
     [java]   session {
     [java]     messageCount{ count: 1000 unit: count startTime: 1169620094893 lastSampleTime: 1169620135606 description: Number of messages exchanged }
     [java]     messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094893 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }
     [java]     pendingMessageCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: Number of pending messages }
     [java]     expiredMessageCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: Number of expired messages }
     [java]     messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1169620094893 lastSampleTime: 1169620094893 description: Time spent by a message before being delivered }
     [java]     durableSubscriptionCount{ count: 0 unit: count startTime: 1169620094893 lastSampleTime: 1169620094893 description: The number of durable subscriptions }

     [java]     producers {
     [java]       producer queue://TEST.FOO {
     [java]         messageCount{ count: 1000 unit: count startTime: 1169620094918 lastSampleTime: 1169620135606 description: Number of messages processed }
     [java]         messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094918 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }
     [java]         pendingMessageCount{ count: 0 unit: count startTime: 1169620094918 lastSampleTime: 1169620094918 description: Number of pending messages }
     [java]         messageRateTime{ count: 1000 maxTime: 126 minTime: 4 totalTime: 40688 averageTime: 40.688 averageTimeExMinMax: 40.63927855711423 averagePerSecond: 24.57727093983484 averagePerSecondExMinMax: 24.606736032348735 unit: millis startTime: 1169620094918 lastSampleTime: 1169620135606 description: Time taken to process a message (thoughtput rate) }
     [java]         expiredMessageCount{ count: 0 unit: count startTime: 1169620094918 lastSampleTime: 1169620094918 description: Number of expired messages }
     [java]         messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1169620094918 lastSampleTime: 1169620094918 description: Time spent by a message before being delivered }
     [java]       }
     [java]     }
     [java]     consumers {
     [java]     }
     [java]   }
     [java] }
{code} 

As you can see very bad performace, ot took about 40s to send this 1000 transacted queue messages :-(
",Bug
AMQ-1166,12481985,,"Following configuration throws exception because the placeholder is not replaced with system property com.barra.activemq.MEMORY_SIZE. Spring placeholders work in all other places in the configration, except the memory manager, because it is customized by AMQ.

<beans>   
    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>  <!-- Allows us to use system properties as variables in this configuration file -->
    <broker useJmx=""true"" deleteAllMessagesOnStartup=""false"" persistent=""true"" xmlns=""http://activemq.org/config/1.0"">
        <memoryManager>
            <usageManager id=""memory-manager"" limit=""${com.barra.activemq.MEMORY_SIZE} MB""/>
        </memoryManager>
        <managementContext>
            <managementContext connectorPort=""${com.barra.activemq.jmx.PORT}"" jmxDomainName=""apache.activemq""/> 
        </managementContext>
",Bug
AMQ-1188,12481802,,"On a machine where the hostname contains underscores (e.g. HS_RH64_A3_1) ActiveMQ fails to initialize with the stack trace below. This seems to be a problem with the TCP protocol handler since doing new URL(""http://HS_RH64_A3_1.godzilla.local:61616"") works fine.

2007-03-05 08:30:20,076 [WrapperSimpleAppMain] ERROR (BrokerService.java:412) - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transp
ort Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
java.io.IOException: Transport Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:25)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1079)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1508)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1468)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:402)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:82)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:159)
        at org.apache.activemq.console.Main.main(Main.java:91)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:197)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:94)
        at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:56)
        at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:109)
        at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:270)
        at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:122)
        at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:100)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1072)
        ... 35 more
Caused by: java.net.URISyntaxException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at java.net.URI$Parser.fail(URI.java:2816)
        at java.net.URI$Parser.parseHostname(URI.java:3355)
        at java.net.URI$Parser.parseServer(URI.java:3204)
        at java.net.URI$Parser.parseAuthority(URI.java:3123)
        at java.net.URI$Parser.parseHierarchical(URI.java:3065)
        at java.net.URI$Parser.parse(URI.java:3021)
        at java.net.URI.<init>(URI.java:663)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:91)
        ... 41 more
",Bug
AMQ-1093,12481828,,"In 4.1.0 there's deadlock on connection failover. There is the scenario: 
1. Client consumes message using message listener 
2. Conection is lost 
3. Client sends message to another queue from messagle listener and waits until connection is restored. 
4. Reconnect task blocks on reconnecting. 
 
This bug is new to 4.1.0. The problem is in ActiveMQMessageConsumre.dispatch . There is new lock on unconsumedMessages.getMutex() . So the reconnect task cannot invoke ActiveMQMessageConsumre.clearMessagesInProgress(), because lock is acquired by message listener, which waits untill message is sent (untill connection is resumed). Here is stack traces: 
 
""ActiveMQ Session Task"" daemon prio=1 tid=0x0000002b27774260 nid=0x4778 in Object.wait() [0x0000000040ef3000..0x0000000040ef4db0] 
        at java.lang.Object.wait(Native Method) 
        - waiting on <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at java.lang.Object.wait(Object.java:474) 
        at edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar.await(CondVar.java:75) 
        - locked <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:318) 
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:42) 
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:75) 
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1171) 
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548) 
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:75) 
        - locked <0x0000002b173fa480> (a org.apache.activemq.ActiveMQMessageProducer) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:60) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513) 
        at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479) 
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430) 
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477) 
        at lt.elitnet.dbp.das.impl.storage.HI2StorageImpl.storeHI2Message(HI2StorageImpl.java:57) 
        at lt.elitnet.dbp.das.impl.hi2.HI2PersistanceBase.saveIRIContent(HI2PersistanceBase.java:77) 
        at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
        at java.lang.reflect.Method.invoke(Method.java:585) 
        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:203) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:162) 
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:107) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.orm.hibernate3.HibernateInterceptor.invoke(HibernateInterceptor.java:104) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at lt.elitnet.dbp.das.impl.alarming.DataBaseConnectionAlarmsPublisher.invoke(DataBaseConnectionAlarmsPublisher.java:59) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:209) 
        at $Proxy24.saveIRIContent(Unknown Source) 
        at lt.elitnet.dbp.das.impl.hi2.HI2MessageListener.onMessage(HI2MessageListener.java:40) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.deliverMessage(TextMessageListener.java:84) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.onMessage(TextMessageListener.java:50) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:854) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:793) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:763) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:743) 
        at org.springframework.jms.listener.SimpleMessageListenerContainer$2.onMessage(SimpleMessageListenerContainer.java:190) 
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:840) 
        - locked <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:96) 
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:165) 
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111) 
        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
        at java.lang.Thread.run(Thread.java:595) 
 
""ActiveMQ Transport: tcp:///192.168.2.55:61616"" prio=1 tid=0x0000002b2e814660 nid=0x4773 waiting for monitor entry [0x0000000040e82000..0x0000000040e82c30] 
        at org.apache.activemq.MessageDispatchChannel.clear(MessageDispatchChannel.java:135) 
        - waiting to lock <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQMessageConsumer.clearMessagesInProgress(ActiveMQMessageConsumer.java:546) 
        at org.apache.activemq.ActiveMQSession.clearMessagesInProgress(ActiveMQSession.java:524) 
        at org.apache.activemq.ActiveMQConnection.transportInterupted(ActiveMQConnection.java:1547) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:236) 
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:55) 
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:120) 
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:96) 
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:147) 
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:150) 
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150) 
        at java.lang.Thread.run(Thread.java:595)",Bug
AMQ-950,12483915,,"
On Tiger, activemq always creates a rmi connector on port 1099 no matter what I do with -Djavax.management... and <managementContext/>
In particular, setting createConnector=""false"" should prevent AMQ from setting up its own connector, but it does not.

The problem is in the findMBeanServer() method:
            if (result == null && createMBeanServer) {
                result = createMBeanServer();
            }
            else {
                createConnector(result);
            }

result is not null on Tiger with useJmx=""true"", and createConnector is not protected by if(createConnector) like it is on the non-Tiger flow.
The fix (I think) is simply to do this:
            if (result == null && createMBeanServer) {
                result = createMBeanServer();
            }
            else {
                if(createConnector){
                      createConnector(result);
                }
            }",Bug
AMQ-1220,12482527,,"2007-04-05 08:46:47,241 [ActiveMQ Transport: tcp://mymachinename:61616] WARN  org.apache.activemq.ActiveMQConnection - Async exception with no exception listener: java.io.EOFException
java.io.EOFException
	at java.io.DataInputStream.readInt(Unknown Source)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:156)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
	at java.lang.Thread.run(Unknown Source)

This error occurs after the synchronous messaging is complete and successful.  It occurs after about 5 minutes of the application finishing the receive.  The error is not seen when the same send/receive methods are looped continuously.  The application is a very simple send and receive application that uses Serialization methods for send and receive of objects. 



// Sample send/receive
client.send(Request);
response = (Response) client.receive();

Spring code used for send:

        // Send Request
        jmsTemplate.convertAndSend(requestQueue, req, new MessagePostProcessor()
        {
            public Message postProcessMessage(Message message) throws JMSException
            {
                message.setJMSCorrelationID(myMessageID);
                return message;
            }
        });

Spring code used for receive:

// Wait for Synchronous Response
        // Use a Message Selector to only receive responses to the request you
        // sent
        String resSelectorId = ""JMSCorrelationID='"" + getCurrentJMSMessageID() + ""'"";
        Response resp = (Response) jmsTemplate.receiveSelectedAndConvert(responseQueue,
                resSelectorId);


Here is the shared-context.xml for the connectionFactory:

<?xml version=""1.0"" encoding=""UTF-8""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
       xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
       xsi:schemaLocation=""http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd"">
       
    <bean id=""RequestQueue"" class=""org.apache.activemq.command.ActiveMQQueue"">
        <constructor-arg value=""RequestQueue""/>
    </bean>
 
    <bean id=""ResponseQueue"" class=""org.apache.activemq.command.ActiveMQQueue"">
        <constructor-arg value=""ResponseQueue""/>
    </bean>
    
    <!--  A Pooled Based JMS Provider -->
    <bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
        <property name=""connectionFactory"">
        	<bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
        		<property name=""brokerURL"" value=""tcp://mymachinename:61616""/>
        	</bean>
        </property>
    </bean>
 
</beans>

I am sure that it is something I have failed to configure correctly since I am very new the activeMQ product.  
Thanks for your time and effort!",Bug
AMQ-862,12481863,,"I'm trying to build jencks, which has a dependency on ActiveMQ 4.1-incubator-SNAPSHOT.  I get the following unresolved dependencies:

org.apache.activemq:activemq-core:jar:4.1-incubator-SNAPSHOT
org.apache.activemq:activemq-core:test-jar:tests:4.1-incubator-SNAPSHOT

What it's actually trying to download is:

http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-core/4.1-incubator-SNAPSHOT/activemq-core-4.1-incubator-20060801.170356-6.jar
http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-core/4.1-incubator-SNAPSHOT/activemq-core-4.1-incubator-20060801.170356-2-tests.jar

Those are invalid versions.  When I asked about this on the maven IRC, I was told:

the problem is here: http://people.apache.org/repo/m2-snapshot-repository/org/apache/activemq/activemq-parent/4.1-incubator-SNAPSHOT/activemq-parent-4.1-incubator-20060804.071007-16.pom
In the dependencyManagement they're using, they have expressions for the versions.  Those resolve to the current POM's (the one specifying the dependencies) version, instead of resolving them as snapshots.  It's a common problem when using that expression for shortcuts.


It would be great if this could be fixed so that I could build jencks.  Thanks!",Bug
AMQ-1374,12482776,,"I am making a connection with activemq while running a test case of mule on Eclipse.  But when trying to connect with mule i am getting   the following error.

Exception in thread ""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" java.lang.ClassCastException: org.apache.activemq.transport.InactivityMonitor$1
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(ScheduledThreadPoolExecutor.java:189)
	at edu.emory.mathcs.backport.java.util.PriorityQueue.remove(PriorityQueue.java:507)
	at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.remove(DelayQueue.java:379)
	at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.remove(ScheduledThreadPoolExecutor.java:707)
	at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.remove(ThreadPoolExecutor.java:1582)
	at org.apache.activemq.thread.Scheduler.cancel(Scheduler.java:55)
	at org.apache.activemq.transport.InactivityMonitor.stopMonitorThreads(InactivityMonitor.java:176)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
	at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150)
	at java.lang.Thread.run(Unknown Source)

The backport utility used is version3.

Can you please help?",Bug
AMQ-1365,12482042,,"When using org.apache.activemq.pool.PooledConnection createConnection(username, password), the username and password fields are swapped.

I think the problem could be the following, based in 4.1.1 source code, 

PooledConnection.java line 77

    public synchronized Connection createConnection(String userName, String password) throws JMSException {
        ConnectionKey key = new ConnectionKey(userName, password);

ConnectionKey.java line 30

    public ConnectionKey(String password, String userName) {
        this.password = password;
        this.userName = userName;

",Bug
AMQ-1369,12482086,,"I developed another discovery agent and received Exception that cannot find aget ""discovery"".
Threre is wrong URI set to DiscoveryAgentFactory.
My configurartion 

<networkConnectors>
     
      <networkConnector name=""default-nc"" uri=""discovery:dns://mq1:61616"" failover=""true""/>
      
    </networkConnectors>

Right URI is dns://mq1:61616, but it set full URI whith ""discovery"" prefix

Workaround is add file ""discovery"" to META-INF and URI change to discovery://mq1:61616",Bug
AMQ-1316,12482188,,"There are no getter/setter in apache-activemq-4.1.1/src/activemq-ra/src/main/java/org/apache/activemq/ra/ActiveMQManagedConnectionFactory.java for the ServerURL
 
   public String getServerUrl() {
        return info.getServerUrl();
    }

  public void setServerUrl(String url) {
        info.setServerUrl(url);
    }

",Bug
AMQ-1329,12482211,,"Closing session twice leads to a closed session in a pool.
Found using spring JmsInvokerClientInterceptor.executeRequest() where session is closed both by QueueRequestor and explicitly:
   JmsUtils.closeQueueRequestor(requestor);
   JmsUtils.closeSession(session);",Bug
AMQ-1289,12481754,,"There is a spelling error inside ""example/src"" directory. The file ""CommnadLineSupport.java "" should be ""CommandLineSupport.java"" and inside the file, ""public class CommnadLineSupport"" should be changed to ""public class CommandLineSupport""",Bug
AMQ-1283,12482376,,"Messages aren't always delivered in a clustered environment.

If you have a cluster of three ActiveMQ nodes, and you send the cluster a constant stream of messages, and randomly restart individual ActiveMQ nodes, you can enter a state whereby an ActiveMQ node has undelivered messages sitting in the message store. These messages will not be delivered, unless that ActiveMQ node is restarted.

This appears to be a consequence of the fact that a Queue immediately dispatches a message received to any available subscribers, but ignores any exceptions that result from the actual send.",Bug
AMQ-1236,12481982,,"The issue prevents us from using AMQ 
discussion http://www.nabble.com/Failing-to-acquire-exclusive-lock---MySQL-t3598830s2354.html#a10051767

I'm new to ActiveMQ so probably I misconfigure it somehow.
Problem: I'm trying to setup jdbcPersistenceAdapter in AMQ 4.1.1 to store journal into the MySQL 5.0.24 with Connector mysql-connector-java-5.0.4 under Windows XP
My config file is very simple

------------------------CONFIG-------------------------------

<beans>

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
 
  <broker brokerName=""localhost"" useJmx=""true"" xmlns=""http://activemq.org/config/1.0"">
 
    <!--  Use the following to set the broker memory limit
    <memoryManager>  
        <usageManager id=""memory-manager"" limit=""20 MB""/>
    </memoryManager>
    -->
   
    <!-- Use the following to configure how ActiveMQ is exposed in JMX
    <managementContext>
       <managementContext connectorPort=""1099"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>
    -->

 
 
    <persistenceAdapter>
      <jdbcPersistenceAdapter dataSource=""#mysql-ds""/>
    </persistenceAdapter>
 
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>
       <transportConnector name=""ssl""     uri=""ssl://localhost:61617""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61613""/>
    </transportConnectors>
   
    <networkConnectors>
      <!-- by default just auto discover the other brokers -->
      <networkConnector name=""default-nc"" uri=""multicast://default""/>
      <!--
      <networkConnector name=""host1 and host2"" uri=""static://(tcp://host1:61616,tcp://host2:61616)"" failover=""true""/>
      -->
    </networkConnectors>
   
  </broker>
 
  <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
    <property name=""url"" value=""jdbc:mysql://localhost/sonoportal?relaxAutoCommit=true&profileSQL=true""/>
    <property name=""username"" value=""root""/>
    <property name=""password"" value=""""/>
    <property name=""poolPreparedStatements"" value=""true""/>
  </bean>

</beans>
------------------------ END CONFIG-------------------------------

I've also set profileSQL=true to be able to debug the reason of the problem
As a result I have following error log in ActiveMQ window console


---------------------------- LOG ---------------------------------


D:\java\tools\apache-activemq-4.1.1\bin>activemq.bat
ACTIVEMQ_HOME: D:\java\tools\apache-activemq-4.1.1\bin\..
ACTIVEMQ_BASE: D:\java\tools\apache-activemq-4.1.1\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.1.1 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 47 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 16 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  JDBCPersistenceAdapter         - Database driver recognized: [mysql-ab_jdbc_driver]
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5
Wed Apr 25 14:38:20 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: The following query was executed with a bad index, use 'EXPLAIN' for more
 details: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.DatabaseMetaData$9.forEach(DatabaseMetaData.java:4379)
        at com.mysql.jdbc.DatabaseMetaData$IterateBlock.doForAll(DatabaseMetaData.java:76)
        at com.mysql.jdbc.DatabaseMetaData.getTables(DatabaseMetaData.java:4357)
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:72)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:159)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: rollback
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0



---------------------------- END LOG ---------------------------------


All mentioned in errors commands are easily executed from MySQL Console. Tables are get created in the schema, I've no idea about what problem is. Has anyone tried to run it with MySQL persistence?

Thanks in advance for any help.

",Bug
AMQ-1287,12481962,,"The STOMP connector is throwing away messages when the STOMP client disconnects.

Here is the test scenario I am using.

1) a publisher that writes 50 messages, 1 per second
2) a subscriber that reads 10 messages, 1 per every 2 seconds
2a) subscriber correctly sends stomp disconnect when done
3) rerun subscriber each time it finishes with 10 messages.

So during the first run of the subscriber, it gets 10 messages as expected.

-bash-2.05b$ ./activemq_tester -p 61613 -d sub -s 2 -m 10
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.
Received: MESSAGE, This is message number 0, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:1
Received: MESSAGE, This is message number 1, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:2
Received: MESSAGE, This is message number 2, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:3
Received: MESSAGE, This is message number 3, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:4
Received: MESSAGE, This is message number 4, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:5
Received: MESSAGE, This is message number 5, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:6
Received: MESSAGE, This is message number 6, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:7
Received: MESSAGE, This is message number 7, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:8
Received: MESSAGE, This is message number 8, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:9
Received: MESSAGE, This is message number 9, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:10
OK
Sending Disconnect.OK
Disconnecting...OK


During this time since the publisher is about twice as fast, it has made it to message 22 and is still putting in one per second going to its prescribed 50 input messages.

Now I uparrow and run the subscriber again.....

-bash-2.05b$ ./activemq_tester -p 61613 -d sub -s 2 -m 10
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.
Received: MESSAGE, This is message number 23, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:24
Received: MESSAGE, This is message number 24, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:25
Received: MESSAGE, This is message number 25, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:26
Received: MESSAGE, This is message number 26, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:27
Received: MESSAGE, This is message number 27, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:28
Received: MESSAGE, This is message number 28, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:29
Received: MESSAGE, This is message number 29, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:30
Received: MESSAGE, This is message number 30, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:31
Received: MESSAGE, This is message number 31, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:32
Received: MESSAGE, This is message number 32, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:33
OK
Sending Disconnect.OK
Disconnecting...OK


And as you can see, messages 11..22 did not get read.

and run the client once more since publisher is not done yet.

-bash-2.05b$ ./activemq_tester -p 61613 -d sub -s 2 -m 10
Connecting......OK
Sending connect message.OK
Reading Response.Response: CONNECTED, 
OK
Sending Subscribe.OK
Reading Subscribed Messsages.
Received: MESSAGE, This is message number 46, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:47
Received: MESSAGE, This is message number 47, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:48
Received: MESSAGE, This is message number 48, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:49
Received: MESSAGE, This is message number 49, persistence flag [true]
        message-id ID:lxdm14608.etrade.com-40939-1182371192387-3:0:-1:1:50


again missing messages 34..46.


But if I check the stats on this Queue, you can see that the broker has delivered all 50 messages.


-bash-2.05b$ bin/activemq query -QQueue=*
ACTIVEMQ_HOME: /home/jschaube/activemq/apache-activemq-4.1-SNAPSHOT
ACTIVEMQ_BASE: /home/jschaube/activemq/apache-activemq-4.1-SNAPSHOT
Type = Queue
DispatchCount = 50
Destination = TEST.FOO
QueueSize = 0
Name = TEST.FOO
DequeueCount = 50
MemoryPercentageUsed = 0
ConsumerCount = 1
MemoryLimit = 9223372036854775807
EnqueueCount = 50
BrokerName = b60000



So what I suspect is that the STOMP connector had prefetched as many as were written, but then when the client sends STOMP ""DISCONNECT"" command, the connector does not put those messages back but rather just throws them away.

This is not good especially when the messages are flagged persistent and I expect to loose none.

STOMP client is c code, here is the disconnect and tear down of the socket....
   fprintf(stdout, ""Sending Disconnect."");
   {
      stomp_frame frame;
      frame.command = ""DISCONNECT"";
      frame.headers = NULL;
      frame.body = NULL;
      rc = stomp_write(connection, &frame);
      rc==APR_SUCCESS || die(-2, ""Could not send frame"", rc);
   }  
   fprintf(stdout, ""OK\n"");

   fprintf(stdout, ""Disconnecting..."");
        rc=stomp_disconnect(&connection); 
        rc==APR_SUCCESS || die(-2, ""Could not disconnect"", rc);
   fprintf(stdout, ""OK\n"");



Here is part of the config, Notice I attempted to set the prefetch values to ""1"" to resolve the problem.
But I am unsure of the syntax since it made no difference in the way it behaved.

    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61616?jms.prefetchPolicy.queu
ePrefetch=1"" discoveryUri=""multicast://default""/>
       <transportConnector name=""ssl""     uri=""ssl://localhost:61617""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61613?jms.prefetchPolicy.que
uePrefetch=1""/>
    </transportConnectors>

Joel Schaubert


",Bug
AMQ-1461,12483933,,"META-INF/spring.schemas in the active mq jar contains in release 4.1.1:

http\://activemq.org/config/1.0=activemq.xsd

this is wrong in the sense that here the namespace is mapped against the relative location of the XSD in the classpath. instead of the namespace the XSD location from the XML config should be used.

Think about the following spring XML application context header:
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xmlns:amq=""http://activemq.org/config/1.0""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
				        http://activemq.org/config/1.0 http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd"">

spring resolves the URL 
http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd
by first looking up the classpath for files that match ""META-INF/spring.schema"", and if it finds one ore more it looks inside to read the property within these files. it than tries to match the key of the property against the schema location entry of the xsi:schemaLocation entry, which in this example would be a match of ""http://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd"" and NOT ""http://activemq.org/config/1.0"".

i have locally fixed this bug by modifying the META-INF/spring.schemas file to:

http\://activemq.apache.org/schema/core/activemq-core-4.1.1.xsd=activemq.xsd

with this setting it works fine here. with the original setting there was no chance to get it up and running, which is strange because of the following examples:
http://activemq.apache.org/xml-reference.html

for details on spring and spring.schemas see
http://erik.jteam.nl/?p=27",Bug
AMQ-1582,12482505,,"Since it is mantory to use a provider URL like this:

tcp://localhost:61616?wireFormat.maxInactivityDuration=0

In order to avoid the problem described on these issues AMQ-1146 and AMQ-1482 we are starting all our jvm with that maxInactivityDuration value. 
But the problem that appears using this configuration is that when the InactivityMonitor is inactive every exception on the connection is not reported to the jms exception listener. So, it is not posible detecting the lost of the conection. Event if our ActiveMQ broker is dead, our clients are not notified.

We have compile the activemq source code using the pom you provide but using the branch activemq-4.1 (from the branches folder). As your development people has solve this problem in this branch patching the class InactivyMonitor, the version we generated is working properly. Even if we are using the maxInactivityDuraction with the zero value, the exception are reported in the proper way.

The actual issue is tha since Activemq 5.x is not supported by the last version of Geronimo AS 2.0.2 it should be needed an ActiveMQ 4.1 manteniance realese including at least the patch.


",Bug
AMQ-2679,12483570,,"setup in Geronimo deployment plan with 
{quote}
<config-property-setting name=""ServerUrl"">vm://localhost?async=true&jms.asyncDispatch=false&jms.copyMessageOnSend=false&jms.watchTopicAdvisories=false</config-property-setting> 
{quote}

I use only JMS send/reply pattern:
{quote}
connection = factory.createQueueConnection(); 
connection.start(); 
session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE); 
sender = session.createSender(requestQueue); 
replyQueue = session.createTemporaryQueue(); 
jmsRequestMessage = session.createTextMessage(); 
sender.send(jmsRequestMessage, DeliveryMode.NON_PERSISTENT, Message.DEFAULT_PRIORITY, timeToLive); 
receiver = session.createReceiver(replyQueue); 
jmsReplyMessage = receiver.receive(); 
connection.close();
{quote}

When the message traffic get huge (or the server is under intensive computing), I would got such NPE 
{quote}
 Exception in thread ""VMTransport"" java.lang.NullPointerException 
 at  org.apache.activemq.ActiveMQSessionExecutor.wakeup(ActiveMQSessionExecutor.java:76) 
 at  org.apache.activemq.ActiveMQSessionExecutor.execute(ActiveMQSessionExecutor.java:61) 
 at org.apache.activemq.ActiveMQSession.dispatch(ActiveMQSession.java:1344) 
 at  org.apache.activemq.ActiveMQConnection.onCommand(ActiveMQConnection.java:1485) 
 at  org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95) 
 at  org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65) 
 at  org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:201) 
 at  org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:120) 
 at  org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
 at  org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665) 
 at  edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:690) 
 at java.lang.Thread.run(Thread.java:619) 
{quote}

setting _jms.asyncDispatch=false_ may ease the problem, but the NPE still happens..

as comment from kevan http://n3.nabble.com/sudden-NullPointerException-from-ActiveMQSessionExecutor-wakeup-tt676485.html#a676966
It could be a timing hole in ActiveMQSessionExecutor.
possible fix from kevan
{quote}
Index: activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java 
=================================================================== 
--- activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(revision 663068) 
+++ activemq-core/src/main/java/org/apache/activemq/ActiveMQSessionExecutor.java	(working copy) 
@@ -118,10 +118,14 @@ 
         try { 
             if (messageQueue.isRunning()) { 
                 messageQueue.stop(); 
-                if (taskRunner != null) { 
-                    taskRunner.shutdown(); 
-                    taskRunner = null; 
+                TaskRunner tempTaskRunner; 
+                synchronized (this) { 
+                    tempTaskRunner = this.taskRunner; 
+                    this.taskRunner = null; 
                 } 
+                if (tempTaskRunner != null) { 
+                    tempTaskRunner.shutdown(); 
+                } 
             } 
         } catch (InterruptedException e) { 
             Thread.currentThread().interrupt(); 
{quote}


",Bug
AMQ-1759,12482993,,"4.1.2 is build/delivered with geronimo-jms_1.1_spec-1.1.1.jar is build with 1.5 (Java 5) This version is not 1.4 compatible, using ActiveMQ 4.1.2 on a 1.4 JVM throws exception:

[ERROR] java.lang.UnsupportedClassVersionError: javax/jms/Message (Unsupported major.minor version 49.0)

4.1.1 used geronimo-jms_1.1_spec-1.0.jar that is compiled with 1.4

As I understand JVM 1.4 support is dropped in 5.x, not 4.x",Bug
AMQ-1606,12483386,,,Bug
AMQ-1741,12483353,,"When Web Console is deployed in container with a resource adapter configured there is a bug with SessionPool Class:

When you browse a first queue, the QueueBrowserQuery works, but when you browse a queue a second time, an exception is thrown saying Session is closed (Because managed by Resource Adapter).

One workAround is to create a NullSessionPool that do not pool and that implements a ISessionPool interface! (To change a minimum the WebConsole):

The implements is based on SessionPool class implementation. It may be surely enhanced !



package org.apache.activemq.web;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.Session;

public class NullSessionPool implements ISessionPool {

    private ConnectionFactory connectionFactory;
    private Connection connection;

    public Connection getConnection() throws JMSException {
        if (checkConnection()) {
            return connection;
        }

        synchronized (this) {
            connection = getConnectionFactory().createConnection();
            connection.start();
            return connection;
        }
    }

    private boolean checkConnection() {
        if (connection == null) {
            return false;
        }

        try {
            connection.getMetaData();
            return true;
        } catch (JMSException e) {
            return false;
        }
    }

    public void setConnection(Connection connection) {
        this.connection = connection;
    }

    public ConnectionFactory getConnectionFactory() {
        if (connectionFactory == null) {
            throw new IllegalStateException(""No ConnectionFactory has been set for the session pool"");
        }
        return connectionFactory;
    }

    public void setConnectionFactory(ConnectionFactory connectionFactory) {
        this.connectionFactory = connectionFactory;
    }

    public Session borrowSession() throws JMSException {
        return createSession();
    }

    public void returnSession(Session session) throws JMSException {
    	session.close();
    	connection.close();
    }

    protected Session createSession() throws JMSException {
        return getConnection().createSession(false, Session.AUTO_ACKNOWLEDGE);
    }

}



ISessionPool.java:

package org.apache.activemq.web;

import javax.jms.JMSException;
import javax.jms.Session;

public interface ISessionPool {

	public abstract Session borrowSession() throws JMSException;

	public abstract void returnSession(Session session) throws JMSException;

}



The Spring config becomes: 

  
  <bean id=""sessionPool"" class=""org.apache.activemq.web.NullSessionPool"">
  	<property name=""connectionFactory"" ref=""connectionFactory""/>
  </bean>



It works great, no more bug with this workaround in a container with a resource adapter that manage connections and sessions.",Bug
AMQ-1245,12482023,,"need to add</script> to the end of main.jsp decorator in the admin app like this below, IE shows a blank page otherwise

<SCRIPT type='text/javascript' src='/admin/js/common.js'/></script>
<script type='text/javascript' src='/admin/js/css.js'/></script>
<script type='text/javascript' src='/admin/js/standardista-table-sorting.js'/></script>
",Bug
AMQ-1522,12482162,,The ActiveMQ 5.0.0 release is depending on a SNAPSHOT version of xbean which causes the build not to work properly with the maven release plugin.,Bug
AMQ-1463,12482153,,"Attempted to select RSS or Atom feed for a queue, received following error:

{noformat}
HTTP ERROR: 500

missing ConnectionFactory in QueueBrowserServlet
RequestURI=/admin/queueBrowse/DUMMY.QUEUE

Caused by:

java.lang.IllegalStateException: missing ConnectionFactory in QueueBrowserServlet
	at org.apache.activemq.web.QueueBrowseServlet.getConnectionFactory(QueueBrowseServlet.java:80)
	at org.apache.activemq.web.QueueBrowseServlet.getConnection(QueueBrowseServlet.java:64)
	at org.apache.activemq.web.QueueBrowseServlet.createSession(QueueBrowseServlet.java:158)
	at org.apache.activemq.web.QueueBrowseServlet.borrowSession(QueueBrowseServlet.java:141)
	at org.apache.activemq.web.QueueBrowseServlet.doGet(QueueBrowseServlet.java:95)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
{noformat}

URL used was http://0.0.0.0:8161/admin/queueBrowse/DUMMY.QUEUE?view=rss&ffeedType=rss_2.0

",Bug
AMQ-1280,12482208,,"I have built ActiveMQ from trunk.  Upon starting ActiveMQ, the following INFO messages are displayed in the command window:

INFO  log                            - ActiveMQ Console at http://0.0.0.0:8161/admin
INFO  log                            - ActiveMQ Web Demos at http://0.0.0.0:8161/demo

Notice that the URLs show 0.0.0.0 instead of hostname or IP address.",Bug
AMQ-1505,12483213,,"I noticed a problem where durable/persistent topic messages are not being sent to offline consumers in 5.0 when the consumer is reconnected.

The following test code works in activemq-4.1.1, but does not in 5.0-snapshot (5.0-20071120.092745)

I have the following test perl code using Net::Stomp

  #publisher
  use strict;
  use warnings;
  use Net::Stomp;
  my $stomp = Net::Stomp->new( { hostname => 'localhost', port => '61613' } );
  $stomp->connect( { login => 'hello', passcode => 'there' } );
  $stomp->send( { destination => '/topic/foo', body => 'test message', persist => 'true' } );
  $stomp->disconnect;

And the following consumer:

  # subscribe to messages from the topic 'foo'
  use strict;
  use warnings;
  use Net::Stomp;
  my $stomp = Net::Stomp->new( { hostname => 'localhost', port => '61613' } );
  $stomp->connect (
      {
          login => 'hello',
          passcode => 'there' ,
          'client-id' => 'tango',
      }
  );
  $stomp->subscribe(
      {   destination             => '/topic/foo',
          'ack'                   => 'client',
          'activemq.prefetchSize' => 1,
          'activemq.subscriptionName' => 'tango',
      }
  );
  while (1) {
    my $frame = $stomp->receive_frame;
    warn $frame->body; # do something here
    $stomp->ack( { frame => $frame } );
  }
  $stomp->disconnect;

On activemq 4.1.1, the subscription is durable/persistent (i can disconnect the consumer and any messages sent by the producer will be received by the consumer when the consumer is reconnected).  However, on the 5.0 snapshot, i cannot get any messages that are sent by the producer when the consumer is offline to be received by the consumer when the consumer is reconnected.  ",Bug
AMQ-1428,12483179,,activeio leaks handles by not cleaning up on JournalLockedException when control.dat is attempted to be locked but fails,Bug
AMQ-1535,12482267,,"The bug mentioned in this post:
http://www.nabble.com/wrapper.conf-5.0-SNAPSHOT-td13154884s2354.html#a13154884

was not fixed in the 5.0.0 release.

Please add the two lines to wrapper.conf mentioned in the post:
wrapper.app.parameter.2=start 
wrapper.app.parameter.3=xbean:activemq.xml 

Without these lines, the broker does not work as a Windows Service.

Thanks!",Bug
AMQ-1571,12482264,,"I can build activemq-core component from the command line using the command ""MAVEN_OPTS=-Xmx800m mvn clean install -Dmaven.test.skip=true"", but when I try to build the same component from eclipse I get the following error. Is this a know issue? Is there a fix for this? I've setup eclipse using the instructions that I found on http://activemq.apache.org/contributing.html.

Here is the log of the failure:

[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-parent:pom:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${groupId} - missing prefix. Use ${pom.groupId} (model: org.apache.activemq:activemq-parent:pom:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-parent:pom:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-core:bundle:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${groupId} - missing prefix. Use ${pom.groupId} (model: org.apache.activemq:activemq-core:bundle:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-core:bundle:5.1-SNAPSHOT)
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [clean, install]
[INFO] ----------------------------------------------------------------------------
[WARN] While downloading net.java.dev.javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[WARN] While downloading net.java.dev.javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] clean:clean
[INFO] Deleting directory /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target
[INFO] Deleting directory /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/classes
[INFO] Deleting directory /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/test-classes
[INFO] Deleting directory /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/site
[INFO] Deleting file-set: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/activemq-data (included: [], excluded: [])
[WARN] While downloading net.java.dev.javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] javacc:javacc
Java Compiler Compiler Version 3.2 (Parser Generator)
(type ""javacc"" with no arguments for help)
Reading from file /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/src/main/grammar/SelectorParser.jj . . .
Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer usig a Reader with the correct character encoding.
File ""TokenMgrError.java"" does not exist.  Will create one.
File ""ParseException.java"" does not exist.  Will create one.
File ""Token.java"" does not exist.  Will create one.
File ""SimpleCharStream.java"" does not exist.  Will create one.
Parser generated successfully.
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-jaas:bundle:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${groupId} - missing prefix. Use ${pom.groupId} (model: org.apache.activemq:activemq-jaas:bundle:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-jaas:bundle:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-openwire-generator:jar:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${groupId} - missing prefix. Use ${pom.groupId} (model: org.apache.activemq:activemq-openwire-generator:jar:5.1-SNAPSHOT)
[WARN] Deprecated expression: ${artifactId} - missing prefix. Use ${pom.artifactId} (model: org.apache.activemq:activemq-openwire-generator:jar:5.1-SNAPSHOT)
[INFO] xbean:mapping
[INFO] Generating META-INF properties file: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/META-INF/services/org/apache/xbean/spring/http/activemq.org/config/1.0 for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 handler mapping: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/META-INF/spring.handlers for namespace: http://activemq.org/config/1.0
[INFO] Generating Spring 2.0 schema mapping: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/META-INF/spring.schemas for namespace: http://activemq.org/config/1.0
[INFO] Generating HTML documentation file: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/activemq.xsd.html for namespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.kaha.impl.async.AsyncDataManager: java.lang.ClassNotFoundException: org.apache.activemq.kaha.impl.async.AsyncDataManager
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.store.ReferenceStoreAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.ReferenceStoreAdapter
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.wireformat.WireFormat: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormat
Warning, could not load class: org.apache.activemq.store.ReferenceStoreAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.ReferenceStoreAdapter
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.security.AuthorizationEntry: java.lang.ClassNotFoundException: org.apache.activemq.security.AuthorizationEntry
Warning, could not load class: org.apache.activemq.security.TempDestinationAuthorizationEntry: java.lang.ClassNotFoundException: org.apache.activemq.security.TempDestinationAuthorizationEntry
Warning, could not load class: org.apache.activemq.security.AuthorizationMap: java.lang.ClassNotFoundException: org.apache.activemq.security.AuthorizationMap
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.broker.jmx.BrokerView: java.lang.ClassNotFoundException: org.apache.activemq.broker.jmx.BrokerView
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.broker.region.DestinationFactory: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.DestinationFactory
Warning, could not load class: org.apache.activemq.broker.region.policy.PolicyMap: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PolicyMap
Warning, could not load class: org.apache.activemq.broker.jmx.ManagementContext: java.lang.ClassNotFoundException: org.apache.activemq.broker.jmx.ManagementContext
Warning, could not load class: org.apache.activemq.security.MessageAuthorizationPolicy: java.lang.ClassNotFoundException: org.apache.activemq.security.MessageAuthorizationPolicy
Warning, could not load class: org.apache.activemq.store.PersistenceAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.PersistenceAdapter
Warning, could not load class: org.apache.activemq.store.PersistenceAdapterFactory: java.lang.ClassNotFoundException: org.apache.activemq.store.PersistenceAdapterFactory
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.kaha.Store: java.lang.ClassNotFoundException: org.apache.activemq.kaha.Store
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.network.NetworkBridgeConfiguration: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkBridgeConfiguration
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.network.NetworkBridgeListener: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkBridgeListener
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.blob.BlobTransferPolicy: java.lang.ClassNotFoundException: org.apache.activemq.blob.BlobTransferPolicy
Warning, could not load class: org.apache.activemq.util.IdGenerator: java.lang.ClassNotFoundException: org.apache.activemq.util.IdGenerator
Warning, could not load class: org.apache.activemq.ActiveMQPrefetchPolicy: java.lang.ClassNotFoundException: org.apache.activemq.ActiveMQPrefetchPolicy
Warning, could not load class: org.apache.activemq.RedeliveryPolicy: java.lang.ClassNotFoundException: org.apache.activemq.RedeliveryPolicy
Warning, could not load class: org.apache.activemq.MessageTransformer: java.lang.ClassNotFoundException: org.apache.activemq.MessageTransformer
Warning, could not load class: org.apache.activemq.transport.TransportListener: java.lang.ClassNotFoundException: org.apache.activemq.transport.TransportListener
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.network.NetworkBridgeConfiguration: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkBridgeConfiguration
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.network.NetworkBridgeListener: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkBridgeListener
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.filter.BooleanExpression: java.lang.ClassNotFoundException: org.apache.activemq.filter.BooleanExpression
Warning, could not load class: org.apache.activemq.memory.list.MessageList: java.lang.ClassNotFoundException: org.apache.activemq.memory.list.MessageList
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.network.NetworkBridgeListener: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkBridgeListener
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.store.jdbc.JDBCAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.JDBCAdapter
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.store.jdbc.DatabaseLocker: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.DatabaseLocker
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.wireformat.WireFormat: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormat
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.store.PersistenceAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.PersistenceAdapter
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.store.jdbc.JDBCAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.JDBCAdapter
Warning, could not load class: org.apache.activemq.store.jdbc.JDBCPersistenceAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.JDBCPersistenceAdapter
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.ConnectionFilter: java.lang.ClassNotFoundException: org.apache.activemq.network.ConnectionFilter
Warning, could not load class: org.apache.activemq.broker.ConnectionContext: java.lang.ClassNotFoundException: org.apache.activemq.broker.ConnectionContext
Warning, could not load class: org.apache.activemq.broker.Broker: java.lang.ClassNotFoundException: org.apache.activemq.broker.Broker
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.usage.UsageCapacity: java.lang.ClassNotFoundException: org.apache.activemq.usage.UsageCapacity
Warning, could not load class: T: java.lang.ClassNotFoundException: T
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.DemandForwardingBridgeSupport: java.lang.ClassNotFoundException: org.apache.activemq.network.DemandForwardingBridgeSupport
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.ConnectionFilter: java.lang.ClassNotFoundException: org.apache.activemq.network.ConnectionFilter
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.transport.Transport: java.lang.ClassNotFoundException: org.apache.activemq.transport.Transport
Warning, could not load class: org.apache.activemq.broker.ConnectionContext: java.lang.ClassNotFoundException: org.apache.activemq.broker.ConnectionContext
Warning, could not load class: org.apache.activemq.broker.Broker: java.lang.ClassNotFoundException: org.apache.activemq.broker.Broker
Warning, could not load class: org.apache.activemq.wireformat.WireFormat: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormat
Warning, could not load class: org.apache.activemq.wireformat.WireFormatFactory: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormatFactory
Warning, could not load class: org.apache.activemq.broker.BrokerService: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerService
Warning, could not load class: org.apache.activemq.network.ConnectionFilter: java.lang.ClassNotFoundException: org.apache.activemq.network.ConnectionFilter
Warning, could not load class: org.apache.activemq.transport.discovery.DiscoveryAgent: java.lang.ClassNotFoundException: org.apache.activemq.transport.discovery.DiscoveryAgent
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.jms.JmsMesageConvertor: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsMesageConvertor
Warning, could not load class: org.apache.activemq.broker.region.policy.DeadLetterStrategy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.DeadLetterStrategy
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.broker.region.policy.DispatchPolicy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.DispatchPolicy
Warning, could not load class: org.apache.activemq.broker.region.policy.MessageEvictionStrategy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.MessageEvictionStrategy
Warning, could not load class: org.apache.activemq.broker.region.group.MessageGroupMapFactory: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.group.MessageGroupMapFactory
Warning, could not load class: org.apache.activemq.broker.region.policy.PendingDurableSubscriberMessageStoragePolicy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PendingDurableSubscriberMessageStoragePolicy
Warning, could not load class: org.apache.activemq.broker.region.policy.PendingMessageLimitStrategy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PendingMessageLimitStrategy
Warning, could not load class: org.apache.activemq.broker.region.policy.PendingQueueMessageStoragePolicy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PendingQueueMessageStoragePolicy
Warning, could not load class: org.apache.activemq.broker.region.policy.PendingSubscriberMessageStoragePolicy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PendingSubscriberMessageStoragePolicy
Warning, could not load class: org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.SubscriptionRecoveryPolicy
Warning, could not load class: org.apache.activemq.broker.region.policy.PolicyEntry: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.PolicyEntry
Warning, could not load class: org.apache.activemq.transport.TransportServer: java.lang.ClassNotFoundException: org.apache.activemq.transport.TransportServer
Warning, could not load class: org.apache.activemq.broker.region.policy.MessageQuery: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.policy.MessageQuery
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.filter.DestinationMap: java.lang.ClassNotFoundException: org.apache.activemq.filter.DestinationMap
Warning, could not load class: org.apache.activemq.filter.DestinationMap: java.lang.ClassNotFoundException: org.apache.activemq.filter.DestinationMap
Warning, could not load class: org.apache.activemq.security.TempDestinationAuthorizationEntry: java.lang.ClassNotFoundException: org.apache.activemq.security.TempDestinationAuthorizationEntry
Warning, could not load class: org.apache.activemq.filter.DestinationMap: java.lang.ClassNotFoundException: org.apache.activemq.filter.DestinationMap
Warning, could not load class: org.apache.activemq.usage.UsageCapacity: java.lang.ClassNotFoundException: org.apache.activemq.usage.UsageCapacity
Warning, could not load class: T: java.lang.ClassNotFoundException: T
Warning, could not load class: org.apache.activemq.store.PersistenceAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.PersistenceAdapter
Warning, could not load class: org.apache.activemq.store.jdbc.Statements: java.lang.ClassNotFoundException: org.apache.activemq.store.jdbc.Statements
Warning, could not load class: org.apache.activemq.store.PersistenceAdapter: java.lang.ClassNotFoundException: org.apache.activemq.store.PersistenceAdapter
Warning, could not load class: org.apache.activemq.usage.MemoryUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.MemoryUsage
Warning, could not load class: org.apache.activemq.usage.SystemUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.SystemUsage
Warning, could not load class: org.apache.activemq.usage.StoreUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.StoreUsage
Warning, could not load class: org.apache.activemq.kaha.Store: java.lang.ClassNotFoundException: org.apache.activemq.kaha.Store
Warning, could not load class: org.apache.activemq.usage.TempUsage: java.lang.ClassNotFoundException: org.apache.activemq.usage.TempUsage
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.usage.UsageCapacity: java.lang.ClassNotFoundException: org.apache.activemq.usage.UsageCapacity
Warning, could not load class: T: java.lang.ClassNotFoundException: T
Warning, could not load class: org.apache.activemq.kaha.Store: java.lang.ClassNotFoundException: org.apache.activemq.kaha.Store
Warning, could not load class: org.apache.activemq.broker.ConnectionContext: java.lang.ClassNotFoundException: org.apache.activemq.broker.ConnectionContext
Warning, could not load class: org.apache.activemq.broker.Broker: java.lang.ClassNotFoundException: org.apache.activemq.broker.Broker
Warning, could not load class: org.apache.activemq.broker.Broker: java.lang.ClassNotFoundException: org.apache.activemq.broker.Broker
Warning, could not load class: org.apache.activemq.command.BrokerInfo: java.lang.ClassNotFoundException: org.apache.activemq.command.BrokerInfo
Warning, could not load class: org.apache.activemq.transport.discovery.DiscoveryAgent: java.lang.ClassNotFoundException: org.apache.activemq.transport.discovery.DiscoveryAgent
Warning, could not load class: org.apache.activemq.security.MessageAuthorizationPolicy: java.lang.ClassNotFoundException: org.apache.activemq.security.MessageAuthorizationPolicy
Warning, could not load class: org.apache.activemq.transport.TransportServer: java.lang.ClassNotFoundException: org.apache.activemq.transport.TransportServer
Warning, could not load class: org.apache.activemq.thread.TaskRunnerFactory: java.lang.ClassNotFoundException: org.apache.activemq.thread.TaskRunnerFactory
Warning, could not load class: org.apache.activemq.broker.ConnectionContext: java.lang.ClassNotFoundException: org.apache.activemq.broker.ConnectionContext
Warning, could not load class: org.apache.activemq.broker.Broker: java.lang.ClassNotFoundException: org.apache.activemq.broker.Broker
Warning, could not load class: org.apache.activemq.wireformat.WireFormat: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormat
Warning, could not load class: org.apache.activemq.wireformat.WireFormatFactory: java.lang.ClassNotFoundException: org.apache.activemq.wireformat.WireFormatFactory
Warning, could not load class: org.apache.activemq.blob.BlobTransferPolicy: java.lang.ClassNotFoundException: org.apache.activemq.blob.BlobTransferPolicy
Warning, could not load class: org.apache.activemq.util.IdGenerator: java.lang.ClassNotFoundException: org.apache.activemq.util.IdGenerator
Warning, could not load class: org.apache.activemq.ActiveMQPrefetchPolicy: java.lang.ClassNotFoundException: org.apache.activemq.ActiveMQPrefetchPolicy
Warning, could not load class: org.apache.activemq.RedeliveryPolicy: java.lang.ClassNotFoundException: org.apache.activemq.RedeliveryPolicy
Warning, could not load class: org.apache.activemq.MessageTransformer: java.lang.ClassNotFoundException: org.apache.activemq.MessageTransformer
Warning, could not load class: org.apache.activemq.transport.TransportListener: java.lang.ClassNotFoundException: org.apache.activemq.transport.TransportListener
[INFO] Generating XSD file: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/activemq.xsd for namespace: http://activemq.org/config/1.0
[INFO] Generating WIKI documentation file: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/xbean/activemq.xsd.wiki for namespace: http://activemq.org/config/1.0
Warning, could not load class: org.apache.activemq.broker.region.DestinationInterceptor: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.DestinationInterceptor
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.JmsConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.JmsConnector
Warning, could not load class: org.apache.activemq.network.NetworkConnector: java.lang.ClassNotFoundException: org.apache.activemq.network.NetworkConnector
Warning, could not load class: org.apache.activemq.broker.BrokerPlugin: java.lang.ClassNotFoundException: org.apache.activemq.broker.BrokerPlugin
Warning, could not load class: org.apache.activemq.Service: java.lang.ClassNotFoundException: org.apache.activemq.Service
Warning, could not load class: org.apache.activemq.broker.TransportConnector: java.lang.ClassNotFoundException: org.apache.activemq.broker.TransportConnector
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.network.jms.InboundQueueBridge: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.InboundQueueBridge
Warning, could not load class: org.apache.activemq.network.jms.OutboundQueueBridge: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.OutboundQueueBridge
Warning, could not load class: org.apache.activemq.network.jms.InboundTopicBridge: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.InboundTopicBridge
Warning, could not load class: org.apache.activemq.network.jms.OutboundTopicBridge: java.lang.ClassNotFoundException: org.apache.activemq.network.jms.OutboundTopicBridge
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.command.ActiveMQDestination: java.lang.ClassNotFoundException: org.apache.activemq.command.ActiveMQDestination
Warning, could not load class: org.apache.activemq.broker.region.virtual.VirtualDestination: java.lang.ClassNotFoundException: org.apache.activemq.broker.region.virtual.VirtualDestination
[INFO] ...done.
[INFO] antrun:run
[INFO] Executing tasks
     [echo] Deleting unwanted resources from the test-jar
   [delete] DEPRECATED - Use of the implicit FileSet is deprecated.  Use a nested fileset element instead.
org.apache.maven.plugin.MojoExecutionException: Error executing ant tasks
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD FAILURE org.apache.activemq:activemq-core:bundle:5.1-SNAPSHOT (  task-segment: [clean, install] )
[INFO] ----------------------------------------------------------------------------
[INFO] Error executing ant tasks
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 11 second	at org.apache.maven.plugin.antrun.AbstractAntMojo.executeTasks(AbstractAntMojo.java:114)
	at org.apache.maven.plugin.antrun.AntRunMojo.execute(AntRunMojo.java:83)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:578)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:508)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:328)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:151)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:220)
	at org.apache.maven.embedder.MavenEmbedder.execute(MavenEmbedder.java:813)
	at org.maven.ide.eclipse.embedder.Maven2Executor.main(Maven2Executor.java:85)
Caused by: /Users/sjavey/Documents/workspace/amq/activemq/activemq-core/target/test-classes not found.
	at org.apache.tools.ant.types.AbstractFileSet.getDirectoryScanner(AbstractFileSet.java:349)
	at org.apache.tools.ant.taskdefs.MatchingTask.getDirectoryScanner(MatchingTask.java:186)
	at org.apache.tools.ant.taskdefs.Delete.execute(Delete.java:523)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:275)
	at org.apache.tools.ant.Task.perform(Task.java:364)
	at org.apache.tools.ant.Target.execute(Target.java:341)
	at org.apache.maven.plugin.antrun.AbstractAntMojo.executeTasks(AbstractAntMojo.java:108)
	... 8 more

[INFO] Finished at: Sun Jan 27 21:28:55 PST 2008
[INFO] Memory 16M/43M
[INFO] ----------------------------------------------------------------------------
[INFO] ----------------------------------------------------------------------------
[ERROR] BUILD FAILURE
[INFO] ----------------------------------------------------------------------------
[INFO] Error executing ant tasks
[INFO] ----------------------------------------------------------------------------
[INFO] Total time: 11 second
[INFO] Finished at: Sun Jan 27 21:28:55 PST 2008
[INFO] Memory 16M/43M
[INFO] ----------------------------------------------------------------------------

",Bug
AMQ-1122,12481989,,"In activemq.xml:

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>


should be changed to 

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>

, shouldn't it?",Bug
AMQ-1877,12483026,,"I'm not sure if this affects 5.0.0 directly but I imagine it does since I'm seeing this in the 5.0.0.14-fuse release.

When I have a single topic subscriber and publisher on a freshly started AMQ broker and I send one message I see the following invalid statistics.
{noformat}
DequeueCount = 1
DispatchCount = 1
EnqueueCount = 1
QueueSize = 1
{noformat}

What I expect to see is:
{noformat}
DequeueCount = 1
DispatchCount = 1
EnqueueCount = 1
QueueSize = 0
{noformat}

I also noticed with one publisher and no subscribers and I send one message I see the following:
{noformat}
DequeueCount = 0
DispatchCount = 0
EnqueueCount = 1
QueueSize = 1
{noformat}

What I expect to see is:
{noformat}
DequeueCount = 0
DispatchCount = 0
EnqueueCount = 1
QueueSize = 0
{noformat}",Bug
AMQ-1644,12482350,,"I'm creating pub/sub application and when I set the DeliveryMode to NON_PERSISTENT in the message produce, the MemoryPercentageUsed increased until it reached 100% and the send will be blocked on waitForSpace().

For the same application if I set the DeliveryMode to PERSISTENT, every thing works fine and MemoryPercentageUsed remains at 0%",Bug
AMQ-2012,12482727,,"Hai, am new to AMQ, i just downloaded AMQ 5.0 and i installed all the dependent packages like JAVA, and ANT, 

which i try to startup active mq as per the instruction like.

c:/activemq/bin> activemq

i got the following error

loading message broker from : xbean : activemq.xml
Failed to execute main task . Reason : java.lang.NoClassDefFoundError : org/apache/activemq/broker/BrokerFactory",Bug
AMQ-1656,12482464,,"Sometime, a (or some) message(s) hang in the queue while no consumer eat it. It happen more often a failover.

Scenario:
2 brokers (jdbc master/slave), 2 consumers (with prefetch set to 1), 2 producers

Producers :
  ant producer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Ddurable=true -Dmax=500
Consumer 1:
  ant consumer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Dmax=10000 -DclientId=c1
Consumer 2:
  ant consumer -Durl=""failover:(tcp://localhost:61618,tcp://localhost:61619)"" -Dmax=10000 -DclientId=c2

1 - Start the two brokers (one will be master, the other will be slave)
2 - Start the producers, consumers
3 - Wait a little,
4 - Kill the master -> slave become master
5 - Producers continue producing, consumers continue consuming
6 - After all producers finish their task, the consumer will finish consuming, and sometimes there still messages left in the queue (in the database, and using JMX to see the state of the queue).
7 - Restart a new broker, kill the master
8 - The messages will be consumed 


There is a race condition between the time the message is set with the broker sequence number (RegionBroker.java in send method), and the time it is actually put in the database (DefaultJDBCAdapter.java in doAddMessage method).

I have seen that sometimes message with higher sequence number are put in database before a lower sequence number.  For example: 386 is put in the database before 385. If it is happening when JDBCMessageStore is recovering the next message (lastMessageId is 384), then 386 will be fetched and the lastMessageId will change to be 386. 385 is then put in the db but never retrieved (stopping and restarting the broker will allow to retrieve the message because at start the lastMessageId is -1).

I have synchronized the code inside the RegionBroker.send, and I don't have gaps anymore. This is a workaround for us since we don't process a lot of message. But maybe a more elegant solution is to set the brokerSequenceId in doAddMessage of JDBCAdapter (I may be wrong, I didn't check if the brokerSequenceId is used elsewhere).

",Bug
AMQ-1484,12483295,,"using snapshot apache-activemq-5.0-20071028.173739-45

if you call org.apache.activemq.pool.PooledConnection.close(), it calls ConnectionPool.decrementReferenceCount()

this updates the lastUsed time and decrements the ref count, which if its now zero, calls expiredCheck();

in this case, ConnectionPool.expiredCheck() will only close the connection if hasFailed or hasExpired is true (it won't close based on idle time because you've just updated lastUsed)

which means that in a lot of cases it won't actually close the connection. if you are shutting down the JVM, the connection must be closed otherwise there will be a non-daemon thread still waiting around which will prevent everything from shutting down cleanly.

to fix, i think if ref count is zero, then it should always close().",Bug
AMQ-1076,12482449,,"There are two networked brokers, BrokerA and BrokerB...
BrokerA and BrokerB is starrted up, a durable subscriber registers for a topic on BrokerA... BrokerA is stopped, message is sent to topic in BrokerB..
Then BrokerA is started again, BrokerB is stopped. the same durable subscriber is started, but it doesnt receive any messages...

It seems that the messages from the topic was not forwarded to the other broker, when it should have.. ",Bug
AMQ-1389,12482087,,"I have two consumers, having a durable subscription on a topic. If I send a persistent message to the topic, everything works ok. However, when I restart the consumers, one of them receives the message again after connecting (it seems to be the one that ACK's the message as second). Reconnecting again doesn't give any problems, the messages aren't redelivered.

This problem does not happen when only a single consumer is connected. Also, it doesn't appear if the persistent message is sent before the consumers are connected.

Steps to reproduce:
Start two consumers with a durable topic subscription (in the example/ directory):

$ ant consumer -Ddurable=true -DclientId=test1 -Dtopic=true
$ ant consumer -Ddurable=true -DclientId=test2 -Dtopic=true

Send persistent messages to this topic:

$ ant producer -Ddurable=true -Dtopic=true

Kill consumers and start them again. One of them willl receive each message again.

This also happens if I use the STOMP protocol. In ActiveMQ 4.1.1 things work as expected, but in snapshots (I tried 4.2 and 5.0), the behaviour is as above.",Bug
AMQ-1753,12483336,,"Illegal characters in OSGi manifest (META-INF).  Hyphens are not allowed in package identifiers, if I am reading the spec correctly (http://java.sun.com/docs/books/jls/second_edition/html/lexical.doc.html), and activemq-core-5.1.0.jar manifest contains package references to weird-looking packages starting with META-INF.*.",Bug
AMQ-1782,12483395,,"The JAAS LDAP module at the following location in svn is completely undocumented, and contains neither javadocs nor code comments:

http://svn.apache.org/repos/asf/activemq/trunk/activemq-jaas/src/main/java/org/apache/activemq/jaas/LDAPLoginModule.java
",Bug
AMQ-1737,12482569,,"In ActiveMQ 5.1.0 and 5.2-snapshot (Windows distribution) I have uncommented the commandAgent configuration so that it reads

<commandAgent xmlns=""http://activemq.apache.org/schema/core"" brokerUrl=""vm://localhost""/>

However, I cannot send commands to ActiveMQ using the STOMP protocol, regardless of the servername I use in the connection (localhost, 127.0.0.1 or the local IP address). I have included the exception message below. It looks like something with RMI goes wrong. I use Windows 2000 SP 4.

In ActiveMQ 5.0, the commandAgent works fine. 

Best Regards
Michael Justin

ERROR CommandMessageListener         - Failed to process message due to: java.la
ng.Exception: java.io.IOException: Failed to retrieve RMIServer stub: javax.nami
ng.ServiceUnavailableException [Root exception is java.rmi.ConnectException: Con
nection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]. Message: Active
MQTextMessage {commandId = 4, responseRequired = false, messageId = ID:michael-1
090-1211215893984-5:0:-1:1:1, originalDestination = null, originalTransactionId
= null, producerId = ID:michael-1090-1211215893984-5:0:-1:1, destination = topic
://ActiveMQ.Agent, transactionId = null, expiration = 0, timestamp = 12112160160
78, arrival = 0, brokerInTime = 1211216016078, brokerOutTime = 1211216016078, co
rrelationId = null, replyTo = queue://HabariExpressAdmin, persistent = false, ty
pe = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = n
ull, compressed = false, userID = null, content = null, marshalledProperties = n
ull, dataStructure = null, redeliveryCounter = 0, size = 1024, properties = null
, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = quer
y -QQueue=* --view Name}
java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer stub: jav
ax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectExcepti
on: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
        at org.apache.activemq.console.command.QueryCommand.runTask(QueryCommand
.java:118)",Bug
AMQ-1258,12482022,,"The page at http://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ in the testing installation section I find the following in the windows instructions:

netstat -an|find &quot;61616&quot;

Obviously a double-escaped ampersand in the HTML. It should of course be

netstat -an|find ""61616""",Bug
AMQ-1728,12482200,,,Bug
AMQ-1750,12482169,,"I was trying to use Mule 2.0.1 to read a directory and feed the file contents into an AMQ 5.1 Queue. The issue is that I need to handle files with the same first part of the file name (before the extension) serially so as to not have race conditions and optimistic concurrency exceptions. Therefore I built a special Transformer to transform the Object I built from the file into a JMS message which sets the JMSXGroupID property. When running all in one process, I see it finding the groupID and looking up the consumer, but when I run it on 3 processes (feeder, AMQ, and processor) the messages are getting read by different consumers / Threads and I get concurrent modification exceptions.",Bug
AMQ-1899,12483257,,"Here is how to reproduce it:
1) Click on send in the top menu
2) Then click the send button without entering any information.
It will create a queue with the message into it, but the queue name is empty and I am not sure about the accessibility of this queue. ",Bug
AMQ-1831,12482995,,"A  java.lang.NumberFormatException is thrown when attempting to retrieve the JMSXProducerTXID from a message. The stack trace is:

Exception in thread ""main"" java.lang.NumberFormatException: For input string: ""TX:ID:JTURKEL-690-4629-1214839585805-0:0:1""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:447)
	at java.lang.Integer.<init>(Integer.java:620)
	at org.apache.activemq.filter.PropertyExpression$14.evaluate(PropertyExpression.java:147)
	at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:194)
	at org.apache.activemq.command.ActiveMQMessage.getObjectProperty(ActiveMQMessage.java:447)
	at org.apache.activemq.command.ActiveMQMessage.getStringProperty(ActiveMQMessage.java:535)
	at com.queue.test.MQTest.testBug(MQTest.java:41)
	at com.queue.test.ActiveMQTest.main(ActiveMQTest.java:21)

Here is some simple test code to reproduce the problem:

		ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(ActiveMQConnection.DEFAULT_USER, 
				ActiveMQConnection.DEFAULT_PASSWORD, ActiveMQConnection.DEFAULT_BROKER_URL)
		Connection connection = connectionFactory.createConnection();		
		connection.start();
		Session producerSession = connection.createSession(true, Session.SESSION_TRANSACTED);
		MessageProducer producer = producerSession.createProducer(producerSession.createQueue(""myQueue""));
		TextMessage producerMessage = producerSession.createTextMessage(""Test Message"");
		producer.send(producerMessage);
		producer.close();
		producerSession.commit();
		producerSession.close();
		
		Session consumerSession = connection.createSession(true, Session.SESSION_TRANSACTED);
		MessageConsumer consumer = consumerSession.createConsumer(consumerSession.createQueue(""myQueue""));
		Message consumerMessage = consumer.receive(1000);
		System.out.println(consumerMessage.getStringProperty(""JMSXProducerTXID""));
		consumer.close();
		consumerSession.commit();
		consumerSession.close();

		connection.close();

This problem is quite severe for us since we need the transaction id property and would like to certify against ActiveMQ.",Bug
AMQ-2065,12483926,,"I have been investigating using ActiveMQ as a transport for shipping PostgreSQL log files as a method of offsite backup.  PostgreSQL periodically produces 16meg files which I package up in a BytesMessage and place on a queue which is then emptied by an offsite machine.  This works fine when testing locally over fast links, but when trying it over slow links the inactivity monitor throws an exception part way through the message transfer despite a network dump showing constant data traffic.

I am guessing this is because the monitor does not recognise the transfer of the data as activity, only the command to retrieve it?",Bug
AMQ-1716,12482523,,"I expected to be able to configure system usage parameters via Spring like this:

{code:title=Expected Spring SystemUsage Bean Definition}

<bean id=""systemUsage""
	class=""org.apache.activemq.usage.SystemUsage"">
	<property name=""memoryUsage"">
		<bean class=""org.apache.activemq.usage.MemoryUsage"">
			<property name=""limit"" value=""100000000"" />
		</bean>
	</property>
	<property name=""storeUsage"">
		<bean class=""org.apache.activemq.usage.StoreUsage"">
			<property name=""limit"" value=""50000000"" />
		</bean>
	</property>
	<property name=""tempUsage"">
		<bean class=""org.apache.activemq.usage.TempUsage"">
			<property name=""limit"" value=""100000000"" />
		</bean>
	</property>
</bean>

<bean id=""myBroker""
		class=""org.apache.activemq.broker.BrokerService"" init-method=""start""
		destroy-method=""stop"">
		<property name=""systemUsage"" ref=""systemUsage"" />
		<stuff missing here/>
</bean>
{code}

However, this does not work because the StorageUsage and TempUsage are never bound to the persistenceAdapter or tempDataStore.

This is the workaround I had to use:

{code:title=Required Spring SystemUsage Bean Definition}

	<bean id=""persistenceAdapter""
		class=""org.apache.activemq.store.amq.AMQPersistenceAdapter"">
		<property name=""syncOnWrite"" value=""false"" />
		<property name=""directory"" value=""file:c:\mqdata"" />
	</bean>

	<bean id=""tempDataStore""
		class=""org.apache.activemq.kaha.StoreFactory"" factory-method=""open"">
		<constructor-arg type=""java.io.File"">
			<value>file:c:\mqtemp</value>
		</constructor-arg>
		<constructor-arg type=""java.lang.String"">
			<value>rw</value>
		</constructor-arg>
	</bean>
	
	<bean id=""systemUsage""
		class=""org.apache.activemq.usage.SystemUsage"">
	<constructor-arg type=""java.lang.String""
			value=""localABSystemUsage"" />
	<constructor-arg
			type=""org.apache.activemq.store.PersistenceAdapter""
			ref=""persistenceAdapter"" />
	<constructor-arg type=""org.apache.activemq.kaha.Store""
			ref=""tempDataStore"" />
	<property name=""memoryUsage"">
		<bean class=""org.apache.activemq.usage.MemoryUsage"">
			<property name=""limit"" value=""100000000"" />
		</bean>
	</property>
	<property name=""storeUsage"">
		<bean class=""org.apache.activemq.usage.StoreUsage"">
			<property name=""limit"" value=""50000000"" />
		</bean>
	</property>
	<property name=""tempUsage"">
		<bean class=""org.apache.activemq.usage.TempUsage"">
			<property name=""limit"" value=""100000000"" />
		</bean>
	</property>
</bean>

<bean id=""myBroker""
		class=""org.apache.activemq.broker.BrokerService"" init-method=""start""
		destroy-method=""stop"">

		<property name=""systemUsage"" ref=""systemUsage"" />
		<property name=""persistenceAdapter"" ref=""persistenceAdapter"" />
		<property name=""tempDataStore"" ref=""tempDataStore"" />

		<stuff missing here/>
		
	</bean>

{code}

One problem with this work-around is that old temp files are never purged as they would be if I simply configured the temp directory via the BrokerService interface.  It would be nice to have a more straight-forward means of configuring the BrokerService via Spring.",Bug
AMQ-2240,12483666,,"AMQ is used a lot with Camel and vice-versa. In AMQ there is a activemq-camel.jar for easy AMQ-Camel integration.

As Camel often uses URI for configuration we in Camel have validation for all parameters provided in the URI.
But this is lacked in the activemq-camel.jar so you can provide bogus or misspelled options and AMQ just keeps on running.
This is serious as it can be hard to overlook a tiny misspelled option and you think that it runs with this parameter, but it does not!

This seems to only apply for ""nested"" URI options, eg the options prefixed with
- jms
- broker


For instance using this factory method:
{code}
org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent(String uri);
{code}

In the sample code below, for a unit test, where I have mistyped some URI options by inserting XXX or the likes:
{code}
        ActiveMQComponent activemq = activeMQComponent(""vm://localhost?broker.XXX=foo&broker.persistent=XXX&broker.useJmx=false&jms.redeliveryPolicy.maximumRedeliveries=0&jms.redeliveryPolicy.initialRedeliveryDelay=500&jms.useAsyncSend=false&jms.sendTimeout=ABC&jms.maxXXXXReconnectAttempts=1&jms.timeout=3000"");
{code}

But AMQ 5.2 is just started without any error indications
{code}
2009-05-01 09:16:53,247 [main           ] INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting
2009-05-01 09:16:53,248 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2009-05-01 09:16:53,392 [main           ] INFO  KahaStore                      - Kaha Store using data directory activemq-data/localhost/kr-store/data
2009-05-01 09:16:53,513 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:davsclaus.local-50096-1241162213265-0:0) started
2009-05-01 09:16:53,520 [main           ] INFO  TransportConnector             - Connector vm://localhost Started
{code}

But if I enter an invalid URI without the prefix such as: bla=foo
{code}
        ActiveMQComponent activemq = activeMQComponent(""vm://localhost?bla=foo"");
{code}

I get a nice error report
{code}
org.apache.camel.RuntimeCamelException: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {bla=foo}
{code}",Bug
AMQ-2326,12483648,,"calling start() on org.apache.activemq.pool.PooledConnection do the following:
   
   public void start() throws JMSException {
        if (started.compareAndSet(false, true)) {
            connection.start();
        }
    }

If an error occurs during call on the underlying connection, the value of started is equal to true. This means that the next call to the start method of the pooled connection will not call start on the underlying connection even if in reality the connection is not started...

In my case, I use FailoverTransport but I want that my call to start returns after a certain delay so I interrupt the Thread that is starting the ActiveMQConnection. Doing that, the method returns but the isStarted method on the ActiveMQConnection returns false. The result is that all MessageDispatchChannel created on that connection are not started and don't dispatch message received.

ActiveMQConnection: 
   public void start() throws JMSException {
        checkClosedOrFailed();
        ensureConnectionInfoSent();           => The thread is interrupted here....
        if (started.compareAndSet(false, true)) {
            for (Iterator<ActiveMQSession> i = sessions.iterator(); i.hasNext();) {
                ActiveMQSession session = i.next();
                session.start();
            }
        }
    }


This is the solution that I propose and that seems to work for me:
In PooledConnection, replace:
    public void start() throws JMSException {
        if (started.compareAndSet(false, true)) {
            connection.start();
        }
    }

by

    public void start() throws JMSException {
        started.compareAndSet(false, true);
        if (!connection.isStarted()) {
            connection.start();
        }
    }
",Bug
AMQ-2333,12482758,,"Over the past couple of days some of our queues get rather full because of downstream problems. The messages start numbering in the 1000's. When that happens ActiveMQ slows way down. I believe is slows down because we are trying to produce a message to the overloaded queue and it's taking a long time (minutes instead of seconds). Once the overloaded queue is emptied the problems go away.

Our system pretty much has all the defaults.

Note: this was not a problem before upgrading to 5.2.0

Any ideas on what should be done?",Bug
AMQ-2325,12483589,,"For Topics there is also a JMX property called ""QueueSize"". However I only ever see its value increasing and never decreasing. In the tests I performed it always had the same value as the enqueue count property. 

Perhaps it should always be set to 0 if there are only non-durable subscriptions. For durable subscriptions it should reflect the actual number of msgs on the topic.

Btw, the name ""Queue""Size is a bit confusing as well.",Bug
AMQ-2299,12483575,,"Hi,

I have downloaded activemq-ra.rar and activemq-jms-ds from http://activemq.apache.org/integrating-apache-activemq-with-jboss.html and placed  in C:\work\jboss-5.0.0.GA\server\default\deploy.  After that i have restarted the JBOSS server and i got the following messages in log file.

*** CONTEXTS MISSING DEPENDENCIES: Name -> Dependency{Required State:Actual State}

activemq.queue:name=outboundQueue
 -> jboss.jca:name='activemq-ra.rar',service=RARDeployment{Create:** NOT FOUND Depends on 'jboss.jca:name='activemq-ra.rar',service=RARDeployment' **}

activemq.topic:name=inboundTopic
 -> jboss.jca:name='activemq-ra.rar',service=RARDeployment{Create:** NOT FOUND Depends on 'jboss.jca:name='activemq-ra.rar',service=RARDeployment' **}

jboss.jca:name=activemq/QueueConnectionFactory,service=ConnectionFactoryBinding
 -> jboss.jca:name=activemq/QueueConnectionFactory,service=TxCM{Create:Configured}

jboss.jca:name=activemq/QueueConnectionFactory,service=ManagedConnectionFactory
 -> jboss.jca:name='activemq-ra.rar',service=RARDeployment{Create:** NOT FOUND Depends on 'jboss.jca:name='activemq-ra.rar',service=RARDeployment' **}

jboss.jca:name=activemq/QueueConnectionFactory,service=ManagedConnectionPool
 -> jboss.jca:name=activemq/QueueConnectionFactory,service=ManagedConnectionFactory{Create:Configured}

jboss.jca:name=activemq/QueueConnectionFactory,service=TxCM
 -> jboss.jca:name=activemq/QueueConnectionFactory,service=ManagedConnectionPool{Create:Configured}

jboss.jca:name=activemq/TopicConnectionFactory,service=ConnectionFactoryBinding
 -> jboss.jca:name=activemq/TopicConnectionFactory,service=TxCM{Create:Configured}

jboss.jca:name=activemq/TopicConnectionFactory,service=ManagedConnectionFactory
 -> jboss.jca:name='activemq-ra.rar',service=RARDeployment{Create:** NOT FOUND Depends on 'jboss.jca:name='activemq-ra.rar',service=RARDeployment' **}

jboss.jca:name=activemq/TopicConnectionFactory,service=ManagedConnectionPool
 -> jboss.jca:name=activemq/TopicConnectionFactory,service=ManagedConnectionFactory{Create:Configured}

jboss.jca:name=activemq/TopicConnectionFactory,service=TxCM
 -> jboss.jca:name=activemq/TopicConnectionFactory,service=ManagedConnectionPool{Create:Configured}


*** CONTEXTS IN ERROR: Name -> Error

jboss.jca:name='activemq-ra.rar',service=RARDeployment -> ** NOT FOUND Depends on 'jboss.jca:name='activemq-ra.rar',service=RARDeployment' **

vfsfile:/C:/work/jboss-5.0.0.GA/server/default/deploy/activemq-ra.rar/ -> java.io.IOException: The filename, directory name, or volume label syntax is incorrect



However activemq is up and running in JBOSS 4.0.4.

Please provide the solution.

Thanks
Veda",Bug
AMQ-2235,12482889,,"
In Windows XP, if all network connections are disabled  (Control Panel->Network Connections, right-click disable all entries), and then you try to start activemq.bat, then the broker quits with an exception.  This happens with ActiveMQ 5.2, Java version 1.6.0_10

Under ActiveMQ 5.1, the exception would still occur, but the broker would remain running, and would continue to process messages on the localhost.

Under Vista and ActiveMQ 5.2, no exception occurs, and the broker loads normally.  There might be a difference in Java versions however, so I'm not sure if that plays a part.


Here is the exception:

D:\activemq\apache-activemq\bin>activemq.bat
ACTIVEMQ_HOME: D:\activemq\apache-activemq\bin\..
ACTIVEMQ_BASE: D:\activemq\apache-activemq\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(D:\activemq\apache-activemq\bin\..\data\localhost)
INFO  AMQPersistenceAdapter          - AMQStore starting using directory: D:\activemq\apache-activemq\bin\..\data\localhost
INFO  KahaStore                      - Kaha Store using data directory D:\activemq\apache-activemq\bin\..\data\localhost\kr-store\state
INFO  AMQPersistenceAdapter          - Active data files: []
INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO  KahaStore                      - Kaha Store using data directory D:\activemq\apache-activemq\bin\..\data\localhost\kr-store\data
INFO  TransportServerThreadSupport   - Listening for connections at: tcp://Hume:61616?wireFormat.maxInactivityDuration=0
ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.net.SocketException: error setting options
java.net.SocketException: error setting options
        at java.net.PlainDatagramSocketImpl.join(Native Method)
        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:304)
        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1898)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
        at org.apache.activemq.console.Main.main(Main.java:106)
INFO  BrokerService                  - ActiveMQ Message Broker (localhost, null) is shutting down
ERROR MulticastDiscoveryAgent        - Failed to advertise our service: default.ActiveMQ-4.dead.%localhost%tcp://Hume:61616?wireFormat.maxInactivityDuration=0
java.net.NoRouteToHostException: No route to host: Datagram send failed
        at java.net.PlainDatagramSocketImpl.send(Native Method)
        at java.net.DatagramSocket.send(DatagramSocket.java:612)
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.doAdvertizeSelf(MulticastDiscoveryAgent.java:390)
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.stop(MulticastDiscoveryAgent.java:321)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.TransportConnector.stop(TransportConnector.java:258)
        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
        at org.apache.activemq.broker.BrokerService.stopAllConnectors(BrokerService.java:1418)
        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:513)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:493)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
        at org.apache.activemq.console.Main.main(Main.java:106)
INFO  TransportConnector             - Connector openwire Stopped
INFO  TransportConnector             - Connector stomp Stopped
INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, null) stopped
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exc
eption is java.net.SocketException: error setting options
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception
is java.net.SocketException: error setting options
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
        at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: error setting options
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1337)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.net.SocketException: error setting options
        at java.net.PlainDatagramSocketImpl.join(Native Method)
        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:304)
        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1898)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
        ... 30 more
ERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: error set
ting options
java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: error setting op
tions
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:225)
        at org.apache.activemq.console.Main.main(Main.java:106)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.net.SocketException: error setting options
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1337)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        ... 10 more
Caused by: java.net.SocketException: error setting options
        at java.net.PlainDatagramSocketImpl.join(Native Method)
        at java.net.PlainDatagramSocketImpl.join(PlainDatagramSocketImpl.java:172)
        at java.net.MulticastSocket.joinGroup(MulticastSocket.java:276)
        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:304)
        at org.apache.activemq.broker.TransportConnector.start(TransportConnector.java:245)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1898)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
        ... 30 more
",Bug
AMQ-2223,12483713,,"The [online documentation|http://activemq.apache.org/advisory-message.html] for Advisory Messages states that in ActiveMQ 5.2 the following new Advisory topics can be specified:
* advisoryForSlowConsumers
* advisdoryForFastProducers
* advisoryForDiscardingMessages
* advisoryForDelivery
* advisoryForConsumed
* advisoryWhenFull

When using a validating xml parser, as is used when configuring with spring via Fuse ESB 4.0.0.4, none of these properties can be specified on the policyEntry element, as they are not present in the XSD.  It seems that these should be added to the [existing 5.2 xsd|http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd] and corresponding reference documentation.",Bug
AMQ-2430,12483703,,"When doing a massive uploading of blobs with activemq 5.2 (same thing on svn trunk) on the embedded RESTful fileserver, you get a ""too many open files"" error and the system doesn't work anymore.

Steps to reproduce :
* send a BlobMessage with ""jms.blobTransferPolicy.uploadUrl=http://127.0.0.1:8161/fileserver/""
* use ""lsof |grep fileserver"" command and you will see your uploaded BLOB still open

The fix seems really easy (works ok for me) :
* open ""RestFilter.java""
* locate the ""doPut()"" method
* change :
{code} 
try {
    IO.copy(request.getInputStream(), out);
 } catch (IOException e) {
{code}

with :

{code} 
try {
    IO.copy(request.getInputStream(), out);
    out.close();
 } catch (IOException e) {
{code}


",Bug
AMQ-2037,12482657,,"Link for jencks framework has changed.
Now link is : http://jencks.codehaus.org
",Bug
AMQ-2340,12483031,,"We are planning to use it in production,but we are getting following issues on Linux:

1) The activemq after some time starts rejecting connections giving error ""Transport Error: Could not accept connections,Connection reset""
2)  The messages count is not correct..the messages received is less than messages sent.

Please suggest us the changes we need to do for using it in production.",Bug
AMQ-2319,12483024,,"The following configuration

<transportConnector name=""openwire"" uri=""tcp://127.0.0.1:61616"" />

yields the following output from netstat:

tcp6       0      0 :::61616                :::*                    LISTEN     6528/java

Instead of listening on :: (the ipv6 equivalent of 0.0.0.0), it should only listen on 127.0.0.1",Bug
AMQ-1588,12483050,,"Producing and sending ObjectMessages such as..
\\
{code}
package com.test;

import java.io.Serializable;

public class TestEvent implements Serializable {

	private static final long serialVersionUID = 1L;
	private String test;
	
	public TestEvent() {
	}
	
	public String getTest() {
	 return test;
	}
	
	public void setTest(String test) {
	 this.test = test;
	}
	
}
{code}

and then clicking the ID displayed by browse.jsp creates the following error everytime..

I have tried setting the VM argument -Djava.rmi.server.codebase set in my producer and same thing happens

{code}
HTTP ERROR: 500

javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent

RequestURI=/admin/message.jsp
Caused by:

javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:266)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:125)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)
	at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)
	at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)
	at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
Caused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
	at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
	... 40 more
Caused by: java.io.IOException: com.test.TestEvent
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
	... 46 more

Caused by:

javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.test.TestEvent
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
	at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:125)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)
	at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)
	at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)
	at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
Caused by: java.io.IOException: com.test.TestEvent
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
	... 46 more

Caused by:

java.io.IOException: com.test.TestEvent
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
	at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
	at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
	at com.sun.el.parser.AstValue.getValue(AstValue.java:125)
	at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:195)
	at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1008)
	at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:329)
	at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:147)
	at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:89)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1098)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:295)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:503)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:827)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:511)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:210)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:379)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:361)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)

Powered by Jetty://
{code}",Bug
AMQ-2344,12483067,,"I'm currently testing the network of brokers configuration (ref: http://activemq.apache.org/networks-of-brokers.html)
Actually this works, but concerning the available parameters for discoveryUris, I do not see any effect, when using a xbean configuration like

<transportConnector name=""openwire"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default?reconnectDelay=4000&amp;maxReconnectAttempts=10&amp;useExponentialBackOff=false&amp;initialReconnectDelay=5000""/>

I do not want to produce much multicast traffic, because it is not necessary in my target networks. Is there a way to let the above configured transport work as required?
Or is this a local brain problem? ;-)

Kind Regards


",Bug
AMQ-899,12481803,,">svn co https://svn.apache.org/repos/asf/incubator/activemq/trunk
....
A    trunk/README.txt
 U   trunk
Checked out revision 437779.
fateev@fateev:/workplace/fateev/activemq-head> ls
trunk/
fateev@fateev:/workplace/fateev/activemq-head> cd trunk/activemq-core
fateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core> mvn test
[INFO] Scanning for projects...
[INFO] ----------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Core
[INFO]    task-segment: [test]
[INFO] ----------------------------------------------------------------------------
[INFO] artifact org.apache.maven.plugins:maven-resources-plugin: checking for updates from apache-snapshots
[INFO] snapshot org.apache.maven.plugins:maven-resources-plugin:2.3-SNAPSHOT: checking for updates from apache-snapshots
...
...
...
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/activemq/maven-gram-plugin/4.1-incubator-SNAPSHOT/maven-gram-plugin-4.1-incubator-20060803.174437-6.jar
6K downloaded
[WARNING] While downloading javacc:javacc:3.2
  This artifact has been relocated to net.java.dev.javacc:javacc:3.2.


[INFO] [javacc:javacc {execution: default}]
Java Compiler Compiler Version 3.2 (Parser Generator)
(type ""javacc"" with no arguments for help)
Reading from file /workplace/fateev/activemq-head/trunk/activemq-core/src/main/grammar/SelectorParser.jj . . .
Note: UNICODE_INPUT option is specified. Please make sure you create the parser/lexer usig a Reader with the correct character encoding.
File ""TokenMgrError.java"" does not exist.  Will create one.
File ""ParseException.java"" does not exist.  Will create one.
File ""Token.java"" does not exist.  Will create one.
File ""SimpleCharStream.java"" does not exist.  Will create one.
Parser generated successfully.
Downloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.pom
[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)
Downloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.pom
[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)
Downloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.pom
4K downloaded
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache-snapshots
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from codehaus-snapshots
[INFO] snapshot org.apache.xbean:xbean-spring:2.6-SNAPSHOT: checking for updates from apache.snapshots
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.pom
3K downloaded
Downloading: http://people.apache.org/maven-snapshot-repository/org/apache/xbean/xbean-spring/2.6-SNAPSHOT/xbean-spring-2.6-20060826.135020-8.jar
143K downloaded
Downloading: http://people.apache.org/maven-snapshot-repository/qdox/qdox/1.6/qdox-1.6.jar
[WARNING] Unable to get resource from repository apache-snapshots (http://people.apache.org/maven-snapshot-repository)
Downloading: http://repository.codehaus.org/qdox/qdox/1.6/qdox-1.6.jar
[WARNING] Unable to get resource from repository codehaus (http://repository.codehaus.org)
Downloading: http://dse.amazon.com:8081/proximity/repository/qdox/qdox/1.6/qdox-1.6.jar
89K downloaded
[INFO] [xbean:mapping {execution: default}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
[INFO] ------------------------------------------------------------------------
[INFO] Trace
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:185)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        ... 18 more
--- Nested Exception ---
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/workplace/fateev/activemq-head/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:300)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:316)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:312)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(QdoxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 31 seconds
[INFO] Finished at: Mon Aug 28 12:00:40 PDT 2006
[INFO] Final Memory: 9M/17M
[INFO] ------------------------------------------------------------------------
fateev@fateev:/workplace/fateev/activemq-head/trunk/activemq-core>
",Bug
AMQ-2259,12483132,,"Hi ,
    Am having an issue with network of brokers where in the pending messages are not getting forwarded . Here is the scenario .

  I have two brokers configured in network AMQ1 and AMQ2. I have defined a virtual topic Virtual.A 
STEP 1)  Publisher is publishing 10 messages on AMQ1 and AMQ2 has a consumer to the virtual queue Consumer.X.Virtual.A with a selector that matches half the messages  (5 messages) published , and the web console correctly shows 5 pending messages.
STEP 2) Now I bring up a consumer Consumer.X.virtual.A on AMQ1 (with out restarting the broker) , this time with a selector matching the remaining pending messages . I have left it running for a while and dint see any messages getting forwarded from AMQ2 to AMQ1 . (am not using conduit subscription and my networkTTL is set to 5 with dynamicOnly set to true)

STEP 3) But when i restart AMQ1 , I see all messages forwarded from AMQ2 to AMQ1.
Am I missing some configuration here ?

Have another question on web console as well .

After STEP 1 on AMQ1 I see Messages sent and Messages received set to 10 and on AMQ2 messages sent was 10 and messages received was 5 while pending messages were 5 .
Why would AMQ1 show it as 10 for both receive and sent , Should i be reading it as messages received and messages forwarded.

I greatly appreciate your response .
 ",Bug
AMQ-2117,12482511,,"Navigated to Views and pressed the ""Browse"" link on a queue with plenty of messages. The overview page works, but when I click on a message I get a http 500 error in the browser and the following exception in the log. While it might be difficult to display the message if it is a complex java-object or so, I think perhaps the situation could be handled in another way. 

WDYT?  

2009-02-16 14:11:04,407 DEBUG [log] EXCEPTION 
org.apache.jasper.JasperException: javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:402)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:320)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
Caused by: javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:266)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
        at org.apache.jsp.message_jsp._jspx_meth_form_tooltip_1(org.apache.jsp.message_jsp:488)
        at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:341)
        at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:157)
        at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:99)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        ... 30 more
Caused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
        at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:81)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
        ... 41 more
Caused by: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
        ... 47 more
2009-02-16 14:11:04,408 ERROR [log] Nested in org.apache.jasper.JasperException: javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse:
javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:266)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
        at org.apache.jsp.message_jsp._jspx_meth_form_tooltip_1(org.apache.jsp.message_jsp:488)
        at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:341)
        at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:157)
        at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:99)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:320)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
Caused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
        at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:81)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
        ... 41 more
Caused by: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
        ... 47 more
2009-02-16 14:11:04,409 ERROR [log] /admin/message.jsp
javax.el.ELException: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:266)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:143)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:984)
        at org.apache.jsp.message_jsp._jspx_meth_form_tooltip_1(org.apache.jsp.message_jsp:488)
        at org.apache.jsp.message_jsp._jspx_meth_c_otherwise_0(org.apache.jsp.message_jsp:341)
        at org.apache.jsp.message_jsp._jspx_meth_c_choose_0(org.apache.jsp.message_jsp:157)
        at org.apache.jsp.message_jsp._jspService(org.apache.jsp.message_jsp:99)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:93)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:470)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:364)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:726)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:320)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:505)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:828)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:380)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:395)
        at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:450)
Caused by: javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
        at org.apache.activemq.web.MessageQuery.getBody(MessageQuery.java:81)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:261)
        ... 41 more
Caused by: java.io.IOException: com.company.SomeResponse
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
        ... 47 more
2009-02-16 14:11:04,410 DEBUG [log] GET /admin/message.jsp?id=ID:host02-54266-1234788117175-0:1:3:1:7&JMSDestination=app1.resultqueue HTTP/1.1
Host: 192.168.51.200:8161
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.19) Gecko/20081216 Fedora/2.0.0.19-1.fc8 Firefox/2.0.0.19
Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Referer: http://host02:8161/admin/browse.jsp?JMSDestination=app1.resultqueue
Cookie: JSESSIONID=1fjp8jvyw3mum


2009-02-16 14:11:04,412 DEBUG [log] RESPONSE /admin/message.jsp  500
2009-02-16 14:11:05,154 DEBUG [log] REQUEST /favicon.ico on org.mortbay.jetty.HttpConnection@2e9c76
2009-02-16 14:11:05,154 DEBUG [log] RESPONSE /favicon.ico  200
2009-02-16 14:11:05,154 DEBUG [log] REQUEST /favicon.ico on org.mortbay.jetty.HttpConnection@1239780
2009-02-16 14:11:05,154 DEBUG [log] RESPONSE /favicon.ico  200
2009-02-16 14:11:05,155 DEBUG [log] EOF
2009-02-16 14:11:05,187 DEBUG [log] REQUEST /favicon.ico on org.mortbay.jetty.HttpConnection@18b3fee
2009-02-16 14:11:05,188 DEBUG [log] RESPONSE /favicon.ico  200",Bug
AMQ-2059,12482502,,"i'm using activemq 5.2.
the transportation is very reliable when i use tcp protocol.but it's always unreliable via http protocol.
and i get the exception like this:

java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:168)
	at org.mortbay.io.ByteArrayBuffer.readFrom(ByteArrayBuffer.java:384)
	at org.mortbay.io.bio.StreamEndPoint.fill(StreamEndPoint.java:107)
	at org.mortbay.jetty.bio.SocketConnector$Connection.fill(SocketConnector.java:198)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:287)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:407)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:235)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:526)",Bug
AMQ-2266,12483773,,I'm trying to use the activemq-admin browse command to browse some queues.  Unfortunately I'm using JAAS security and the command line tool doesn't allow me to set a user/pass as far as I can tell.  ,Bug
AMQ-2247,12482984,,"I'm trying to use selectors to simulate priority in queues.  I found that if I use Message.setJMSPriority() with a different number from the default, that number gets ignored and the default value of 4 is put in the message.  Looking at messages in the broker admin web app, the priority is set to 4.

If I instead use MessageProducer.setPriority() to set this, I can successfully change the priority in the header.

",Bug
AMQ-2083,12482974,,"In rare occasions getting a HashMap from an ObjectMessage leads to the following error:

javax.jms.JMSException: Failed to build body from bytes. Reason: java.io.OptionalDataException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:183)
Caused by: java.io.OptionalDataException
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.readObject(Unknown Source)
	at java.util.HashMap.readObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeReadObject(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.readObject(Unknown Source)
	at java.util.HashMap.readObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeReadObject(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.readObject(Unknown Source)
	at java.util.HashMap.readObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor57.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeReadObject(Unknown Source)
	at java.io.ObjectInputStream.readSerialData(Unknown Source)
	at java.io.ObjectInputStream.readOrdinaryObject(Unknown Source)
	at java.io.ObjectInputStream.readObject0(Unknown Source)
	at java.io.ObjectInputStream.readObject(Unknown Source)
	at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:177)
	... 8 more

The only difference in the testing application to all other messages is that the object is a deeply nested map, it is: HashMap<String, HashMap<String, HashMap<String,String>>>

Alltough the OptionalDataException indicates some primitive values being written somewhere, there are absolute no primitive values around there.",Bug
AMQ-2546,12483627,,"We have a store and forward network of brokers like this C1-B1------B2-C2. We don't want to receive our own messages from topic, and have set the pubSubNoLocal feature to true. When we first start the system, the feature is working correctly, and we are not receiving our own messages. But when shutdown the other broker and client, and restart them, the restarted client starts to receive it's own messages.",Bug
AMQ-2544,12483572,,"We have a configuration like this: C1-B1-------B2-C2 and persistent queues enabled. We have also tried enabling the exclusive consumer feature. First client C1 starts to send messages to queue, and C2 reads the messages from queue. Then I remove the network plug on broker B1 severing the connection between the brokers. When I reconnect the cable all messages that were produced while the connection was lost get delivered, but their ordering is not FIFO. Some messages get delivered in wrong sequence, perhaps they are being lost and then resend?",Bug
AMQ-2078,12482868,,"I'm seeing intermittent test failures in the tck in a test similar to JmsTransactionTestSupport.testReceiveRollback, except done with xa UserTransactions and through the ra.  Running the test individually always passes but running it in a group usually falis.

I've extended the JmsTransactionTestSupport to work with xa tx using the ra but this test always passes for me.",Bug
AMQ-2814,12482866,,"In an environment where multiple ActiveMQ broker servers are running on the same host, the ""activemq-admin stop"" command will shutdown other instances if the requested instance is already down.

This is very dangerous behavior in the case where a user inadvertently attempts to shutdown a broker instance which is already down - instead of getting an error message, or the command being a no-op, a different instance than requested will be shutdown instead.

To reproduce:

* Install ActiveMQ into SOMEDIR/broker_a and configure port and name.
* Install ActiveMQ into SOMEDIR/broker_b and configure unique port and name.
* Start broker_a - broker_a/bin/activemq (or alternatively activemq-admin start)
* Start broker_b - broker_b/bin/activemq (or alternatively activemq-admin start)
* Stop broker_a - broker_a/bin/activemq-admin stop
* Try to stop broker_a again - broker_a/bin/activemq-admin stop -- THIS WILL RESULT IN broker_b SHUTTING DOWN

If there are three or more instances, the result is the same - ""activemq-admin stop"" will shutdown instances other than the one requested.",Bug
AMQ-2402,12483704,,"org.apache.activemq.web.config.SystemPropertiesConfiguration has invalid getJmxUser() and getJmxPassword() methods -- user returns password, and vice-versa. This means you need to swap the webconsole.jmx.user and webconsole.jmx.password properties when using the web console configured via system-properties.
 
Current methods:
//-----------------------------------------------------
public String getJmxPassword() {
                return System.getProperty(PROPERTY_JMX_USER);
}

public String getJmxUser() {
                return System.getProperty(PROPERTY_JMX_PASSWORD);
}
//-----------------------------------------------------

These should be swapped.",Bug
AMQ-2558,12483695,,"Downloaded Driver from http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc_10201.html

Oracle Database 10g  Release 2 (10.2.0.4) JDBC Drivers


Startup message of Apache MQ:

INFO | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@62af46)
INFO | Database adapter driver override recognized for : [oracle_jdbc_driver] - adapter: class org.apache.activemq.store.jdbc.adapter.OracleJDBCAdapter
WARN | Database lock driver override not found for : [oracle_jdbc_driver].  Will use default implementation.

Fix might be similar to fix for AMQ-2492 ??",Bug
AMQ-2633,12483692,,"
According to http://activemq.apache.org/producer-flow-control.html resource usage can be limited 
in ActiveMQ by using the follwing configuration options:
-----
<systemUsage>
       <systemUsage sendFailIfNoSpaceAfterTimeout=""3000"">
         <memoryUsage>
           <memoryUsage limit=""700 mb""/>
         </memoryUsage>
         <storeUsage>
           <storeUsage limit=""1 gb"" name=""foo""/>
         </storeUsage>
         <tempUsage>
           <tempUsage limit=""1 gb""/>
         </tempUsage>
       </systemUsage>
</systemUsage>
-----

Can you add documentation about:
- what is limited in detail
- what is ""name"" needed for
- what the producer/consumer sees it the limits are reached
",Bug
AMQ-2971,12483471,,"A call to org.apache.activemq.broker.jmx.DestinationView.resetStatistics() is implemented as a call to org.apache.activemq.broker.region.DestinationStatistics.reset(). This call sets the DestinationStatistics.messages counter to 0 even if there are messages currently in the queue.

This is functionally the same issue that was resolved for the ""producers"" and ""consumers"" counters in AMQ-1946.

The fix should be as easy as setting the doReset to false for the messages counter.
{code}
messages.setDoReset(false); 
{code}",Bug
AMQ-2858,12483481,,"In case of exception as shown below, the ConnectionInfo logged as warning which logs Password in plain Text. Should have encrypted or log as XXXX or YYYY ... 

If ConnectionInfo override the BaseCommand's toString(Map<String, Object>overrideFields) method and set Password as XXXXX... this would be better handled. 

WARN  org.apache.activemq.broker.TransportConnection.Service [ActiveMQ Transport Stopper: /134.42.197.187:2512] - Failed to remove connection ConnectionInfo {commandId = 1, responseRequired = true, connectionId = 4a6df719-b8ed-4431-a97f-52b93078f021, clientId = 2061e6c0-f8e0-4882-860c-89c3fd7e36db, userName = YYYYX *password = X2342$*, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true}
java.lang.SecurityException: User is not authenticated.
	at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:52)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:425)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:439)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:369)
	at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:364)
	at org.apache.activemq.advisory.AdvisoryBroker.removeConnection(AdvisoryBroker.java:223)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:110)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:117)
	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:709)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:976)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:71)
	at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:907)
",Bug
AMQ-2624,12483431,,"When the JMS Bridges get a start() command and the foreign endpoint is down, the bridge prints a stacktrace and goes on. The bridge never connects.

2010-02-23 18:17:27,437 ERROR JmsQueueConnector    init              - Failed to initialize the JMSConnector
oracle.jms.AQjmsException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jms.AQjmsDBConnMgr.checkForSecurityException(AQjmsDBConnMgr.java:934)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:609)
	at oracle.jms.AQjmsDBConnMgr.<init>(AQjmsDBConnMgr.java:243)
	at oracle.jms.AQjmsConnection.<init>(AQjmsConnection.java:185)
	at oracle.jms.AQjmsQueueConnectionFactory.createQueueConnection(AQjmsQueueConnectionFactory.java:224)
	at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:225)
	at org.apache.activemq.network.jms.JmsQueueConnector.init(JmsQueueConnector.java:55)
	at org.apache.activemq.network.jms.JmsConnector.start(JmsConnector.java:117)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1941)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:471)
	at org.test.EmbeddedBroker.main(EmbeddedBroker.java:48)
Caused by: java.sql.SQLRecoverableException: I/O Exception: The Network Adapter could not establish the connection
	at oracle.jdbc.driver.SQLStateMapping.newSQLException(SQLStateMapping.java:101)
	at oracle.jdbc.driver.DatabaseError.newSQLException(DatabaseError.java:112)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:173)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:229)
	at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:458)
	at oracle.jdbc.driver.T4CConnection.logon(T4CConnection.java:411)
	at oracle.jdbc.driver.PhysicalConnection.<init>(PhysicalConnection.java:490)
	at oracle.jdbc.driver.T4CConnection.<init>(T4CConnection.java:202)
	at oracle.jdbc.driver.T4CDriverExtension.getConnection(T4CDriverExtension.java:33)
	at oracle.jdbc.driver.OracleDriver.connect(OracleDriver.java:465)
	at java.sql.DriverManager.getConnection(DriverManager.java:582)
	at java.sql.DriverManager.getConnection(DriverManager.java:207)
	at oracle.jms.AQjmsDBConnMgr.getConnection(AQjmsDBConnMgr.java:575)
	... 9 more
2010-02-23 18:17:27,453 INFO  JmsConnector         start             - JMS Connector Connector:0 Started

in JMSQueueConnector.java:

   @Override
	public boolean init() {
        boolean result = super.init();
        if (result) {
            try {
                initializeForeignQueueConnection();
                initializeLocalQueueConnection();
                initializeInboundJmsMessageConvertor();
                initializeOutboundJmsMessageConvertor();
                initializeInboundQueueBridges();
                initializeOutboundQueueBridges();
            } catch (Exception e) {
                LOG.error(""Failed to initialize the JMSConnector"", e);
            }
        }
        return result;
    }

I need a solution for this and I would not mind to do some work on it.

Should the DestinationBridge get a maintainance thread to keep care of reconnecting later? Should we have a callback to inform the client about a failing bridge (case of embedded broker)?

Please give me some suggestions how a fix could look like and I fix it.

Thanks 

juergen

",Bug
AMQ-2392,12483020,12487340,"I am attempting to use the POJO sending and producing patterns as described. Here is my setup:

In one class (a CXF-based RESTful webservice), I have the following set
up:

{noformat}
    // OutboundFooRequestHandler is an interface (see below)
    @Produce(uri=""activemq:queue:outbound_foo_req"")
    private OutboundFooRequestHandler   outboundFooRequestHandler;

    @POST
    @Path(""/sendfoo"")
    public Response sendFoo(OutboundFooRequest sendFooRequest)
    {        
        // (a bunch of web-specific code deleted)

        // send this sendFooReqest object on the queue    
        outboundFooRequestHandler.handle(sendFooRequest);
       
        // Return HTTP response 202 Accepted
        return Response.status(202).build();
    }

{noformat}


The interface that is annotated with {{@Produce}} is shown below:

{noformat}
@InOnly
public interface OutboundFooRequestHandler
{
    public void handle(OutboundFooRequest outboundFooRequest);    
}
{noformat}

Here is the implementation of the interface:

{noformat}
    public class OutboundFooRequestHandlerImpl implements
        OutboundFooRequestHandler, InitializingBean, DisposableBean
    {

    private static final Logger logger =
        LoggerFactory.getLogger(OutboundFooRequestHandlerImpl.class);

    @Override
    @Consume(uri=""activemq:queue:outbound_foo_req"")
    public void handle(@Body OutboundFooRequest outboundFooRequest)
    {
        logger.debug(""got it"");
       
        // TODO: actually *do* something
    }

{noformat}

The producer's {{bundle-context.xml}} looks like this:

{noformat}
    <camelContext
          xmlns=""http://activemq.apache.org/camel/schema/spring"" />
   
    <bean name=""activemq""
          class=""org.apache.camel.component.jms.JmsComponent"">
        <property name=""connectionFactory"">
            <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
                <property name=""brokerURL"" value=""vm://default"" />
            </bean>
        </property>
    </bean>
{noformat}

And the consumer's {{bundle-context.xml}} looks the same, except I'm instantiating my Impl classes.

When I attempt to send a message through the system, the producer produces a {{BeanInvocation}} object wrapping the {{SendFooRequest}} object.  However, the consumer thread barfs with this stacktrace:

{noformat}
4:20:24,843 | WARN  | nerContainer-195 | DefaultMessageListenerContainer  | AbstractMessageListenerContainer  646 | 
Execution of JMS message listener failed
org.apache.camel.RuntimeCamelException: org.apache.camel.component.jms.RuntimeJmsException: 
Failed to extract body due to: javax.jms.JMSException: Failed to build body from content. Serializable class not 
available to broker. Reason: java.lang.ClassNotFoundException: org.apache.camel.component.bean.BeanInvocation. 
Message: ActiveMQObjectMessage {commandId = 5, responseRequired = true, messageId = ID:xyzzy.ateb.com-55483-1252952224263-2:5:1:1:1, 
originalDestination = null, originalTransactionId = null, producerId = ID:xyzzy.ateb.com-55483-1252952224263-2:5:1:1, 
destination = queue://outbound_sms_req, transactionId = null, expiration = 0, timestamp = 1252952424801, arrival = 0, 
brokerInTime = 1252952424802, brokerOutTime = 1252952424822, correlationId = null, replyTo = null, persistent = true, 
type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, 
content = org.apache.activemq.util.ByteSequence@141bf9f, marshalledProperties = null, dataStructure = null, 
redeliveryCounter = 0, size = 1718, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false}
        at org.apache.camel.util.ObjectHelper.wrapRuntimeCamelException(ObjectHelper.java:850)
        at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:95)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:543)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:482)
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:451)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:323)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:261)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:881)
        at java.lang.Thread.run(Thread.java:636)
Caused by: org.apache.camel.component.jms.RuntimeJmsException: Failed to extract body due to: javax.jms.JMSException: 
Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: 
org.apache.camel.component.bean.BeanInvocation. Message: ActiveMQObjectMessage {commandId = 5, 
responseRequired = true, messageId = ID:xyzzy.ateb.com-55483-1252952224263-2:5:1:1:1, originalDestination = null, 
originalTransactionId = null, producerId = ID:xyzzy.ateb.com-55483-1252952224263-2:5:1:1, destination = queue://outbound_sms_req,
 transactionId = null, expiration = 0, timestamp = 1252952424801, arrival = 0, brokerInTime = 1252952424802, brokerOutTime = 1252952424822,
 correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, 
compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@141bf9f, marshalledProperties = null, 
dataStructure = null, redeliveryCounter = 0, size = 1718, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false}
        at org.apache.camel.component.jms.JmsBinding.extractBodyFromJms(JmsBinding.java:105)
        at org.apache.camel.component.jms.JmsMessage.createBody(JmsMessage.java:168)
        at org.apache.camel.impl.MessageSupport.getBody(MessageSupport.java:45)
        at org.apache.camel.impl.MessageSupport.getBody(MessageSupport.java:52)
        at org.apache.camel.component.bean.BeanProcessor.process(BeanProcessor.java:90)
        at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:72)
        ... 8 more
Caused by: javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: org.apache.camel.component.bean.BeanInvocation
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35)
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:179)
        at org.apache.camel.component.jms.JmsBinding.extractBodyFromJms(JmsBinding.java:91)
        ... 13 more
Caused by: java.lang.ClassNotFoundException: org.apache.camel.component.bean.BeanInvocation
        at org.apache.felix.framework.searchpolicy.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:558)
        at org.apache.felix.framework.searchpolicy.ModuleImpl.access$100(ModuleImpl.java:59)
        at org.apache.felix.framework.searchpolicy.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1427)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:268)
        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:336)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:264)
        at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.load(ClassLoadingAwareObjectInputStream.java:63)
        at org.apache.activemq.util.ClassLoadingAwareObjectInputStream.resolveClass(ClassLoadingAwareObjectInputStream.java:37)
        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1592)
        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1513)
        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1749)
        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1346)
        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:368)
        at org.apache.activemq.command.ActiveMQObjectMessage.getObject(ActiveMQObjectMessage.java:177)
        ... 14 more
{noformat}

A couple of relevant conversations on IRC. First, from {{#camel}}:
{quote}
<smerp> I don't suppose anyone would know what I need to do to the ActiveMQ broker to pass BeanInvocation messages?
<-- mr_smith has quit (Ping timeout)
<smerp> Using @Consume, I'm getting Failed to extract
 body due to: javax.jms.JMSException: Failed to build body from content.
 Serializable class not available to broker. Reason:
 java.lang.ClassNotFoundException:
 org.apache.camel.component.bean.BeanInvocation
<cibsen> BeanInvocation is a internal camel class that is like meta data about some bean to invoke
 are you sure you want to route that?
 chirino ccustine cibsen
<smerp> cibsen: Well, I was just following the examples for @Produce and @Consume in the online docs
<smerp> cibsen: more background was posted on the camel-users mailing list. Here's a URL to the current thread: http://www.nabble.com/Using-%40Produce---%40Consume----What-am-I-missing--tt25437492.html
<cibsen> well you use OSGi then you got all the pain it brings along :(
smerp plays sadtrombone.wav
<smerp> :|
<cibsen> eg activemq.jar wants to deserialize the object it received over JMS but OSGi forbids it to see the org.apache.camel classes
 as its not importing them

{quote}

...and then a later one on {{#servicemix}}:
{quote}
<smerp> Can any SMX folks tell me what to do to get ActiveMQ embedded in SMX to ""see"" the camel classes (BeanInvocation, specifically)
 OSGi, as awesome as it is, is a pain sometimes.
 Context is here -> http://www.nabble.com/Using-%40Produce---%40Consume----What-am-I-missing--tt25437492.html (see the last post)
<ccustine> smerp: I fear this would require a DynamicImport-Package in the ActiveMQ bundle
<smerp> ccustine: :(
 ccustine: is this a bug? or a feature? or perhaps a fug?
<ccustine> smerp: the correct option is probably to modify AMQ ClassLoadingAwareObjectInputStream to be more OSGi aware
<smerp> crap.
<ccustine> smerp: probably fug  :-/
<smerp> ccustine: any decent workarounds for now?
 ccustine: I'll file a JIRA for it
 Probably needs to be on ActiveMQ, right?
<ccustine> DynamicImport on AMQ is the fastest, but may have unanticipated problems
 well... good question
 probably, but officially there isn't much OSGi specific in AMQ
 this is getting kinda specific, but you can start there
 I think this is something we need to figure out
 so basically it sounds like any objectmessage that is serialized from a user type will have this occur
<smerp> right... this is a tricky problem, as the problem is (a) caused by something that is recommended in Camel (BeanInvocations on queues) and (b) is broken only when using ActiveMQ in SMX 4 w/OSGi
<ccustine> right
<smerp> I think so -- it happens the object type is from Camel, but yes
<ccustine> seems like a general use case that is broken in OSGi, so I would open the bug under AMQ and then we will work with them to figure out a solution
 chirino ccustine
<smerp> ccustine: Alright, sounds good
smerp goes to JIRA
<ccustine> smerp: I may have a nasty workaround by modifying the activemq.xml that we deploy in SMX....
<smerp> ccustine: that would be great for the short term -- it would get me moving again
 (if it works)
<ccustine> open the bug and I will look at this hack for a bit
 yeah
{quote}",Bug
AMQ-2518,12483078,," I find a strange critical bug using QueueBrowser in an application and same issue using HermesJMS.

2 brokers in a network broker configured with static uri

Starting with clean oracle DB ACTIVEMQ_MSGS for broker 1 and broker 2

1) I send 10 messages in queue A on broker 1
2) checking the broker 1 DB, I find 10 rows and 0 rows on broker 2 DB -> OK
3) I try to browse a first time the queue A on broker2 that return an empty list -> OK
4) I try to browse 5 times the queue A on broker2 that finally return my 10 messages -> KO
5) cheking the broker 1 DB, still 10 rows and 41 rows on broker 2 DB -> KO
6) I consume messages from broker 2 that return 10 messages
7) checking the broker 1 DB return 0 rows and still 41 rows on DB broker 2 -> KO
8) I restart the broker 2
9) I try to consume messages from broker 2 and I receive again my 10 messages -> critical !!!!
10 ) I restart again the broker 2 and I can consume again 10 messages, etc... until broker2 DB is empty.

I try to add dynamicOnly=""true"" and/or conduitSubscriptions=""false"" but I have always the same problem.",Bug
AMQ-2615,12483941,,"I've searched both forums and have found nothing specific to the problem I'm having.  I'm using activemq 5.3.0 with 2 servers running.  I've enabled all of the jmx components in the activemq.xml file

        <managementContext>
            <managementContext connectorPath=""service:jmx:rmi://${backside.server.name}:1099/jmxrmi"" />
        </managementContext>

and in both the bin/activemq and bin/activemq-admin

SUNJMX=""-Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false""

We have 2 activemq servers up and running.  The server that starts first will stop properly when activemq-admin stop is issued.  The server that was started second and is attempting to acquire the exclusive lock will not stop when the activemq-admin stop is issued.

before stop:

 /usr/java/jre1.6.0_17/bin/java -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Dcom.sun.management.snmp.port=1161 -Dcom.sun.management.snmp.interface=acsamq00.int.brivo.net -Dcom.sun.management.snmp.acl.file=/home/jboss/brivo/snmp.acl -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dactivemq.classpath=/usr/local/messaging/messaging/conf; -Dactivemq.home=/usr/local/messaging/messaging -Dactivemq.base=/usr/local/messaging/messaging -jar /usr/local/messaging/messaging/bin/run.jar start

actvemq-admin stop output:

Java Runtime: Sun Microsystems Inc. 1.6.0_17 /usr/java/jre1.6.0_17
  Heap sizes: current=7680k  free=7281k  max=506816k
    JVM args: -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Dactivemq.classpath=/usr/local/messaging/messaging/conf; -Dactivemq.home=/usr/local/messaging/messaging -Dactivemq.base=/usr/local/messaging/messaging
ACTIVEMQ_HOME: /usr/local/messaging/messaging
ACTIVEMQ_BASE: /usr/local/messaging/messaging
Connecting to JMX URL: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
INFO: There are no brokers to stop.

after stop

/usr/java/jre1.6.0_17/bin/java -Xmx512M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Dcom.sun.management.snmp.port=1161 -Dcom.sun.management.snmp.interface=acsamq00.int.brivo.net -Dcom.sun.management.snmp.acl.file=/home/jboss/brivo/snmp.acl -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dactivemq.classpath=/usr/local/messaging/messaging/conf; -Dactivemq.home=/usr/local/messaging/messaging -Dactivemq.base=/usr/local/messaging/messaging -jar /usr/local/messaging/messaging/bin/run.jar start ",Bug
AMQ-2520,12483566,,"Two active MQ brokers are installed on RH EL 5 servers (one per server). 
They're configured as a JDBC master / slave failover (as per examples). Failover is tested and working and messages delivered.
Oracle is used for synchronisation (ACTIVEMQ_ tables), persistence etc.
We run a durable subscriber, and the client connects via a failover operation.

The SELECT * FROM ACTIVEMQ_LOCK FOR UPDATE is causing spin lock on the Oracle database.
Basically the indefinite waiting from the passive mq instance is causing high resource usage on Oracle.

After a short period Oracle dashboard shows a high number of active sessions from Active MQ due to the continuous execution of
    UPDATE ACTIVEMQ_LOCK SET TIME = ? WHERE ID = 1
in the keepAlive method in 
    https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/store/jdbc/DatabaseLocker.java

As a workaround we've had to push out the lockAcquireSleepInterval to 5 minutes in the configuration of ActiveMQ, but this didn't work. 

<jdbcPersistenceAdapter dataSource=""#oracle-ds"" useDatabaseLock=""true"" lockAcquireSleepInterval=""300000"" createTablesOnStartup=""true""/>

We're currently changing the broker to poll rather than block so in Statement.java we've added a WAIT 0 that throws an exception if the lock is not acquired.

    public String getLockCreateStatement() {
        if (lockCreateStatement == null) {
            lockCreateStatement = ""SELECT * FROM "" + getFullLockTableName();
            if (useLockCreateWhereClause) {
                lockCreateStatement += "" WHERE ID = 1"";
            }
            lockCreateStatement += "" FOR UPDATE WAIT 0"";
        }
        return lockCreateStatement;
    }


Any suggestions to this issue, this seems to be a quite fundamental issue?
",Bug
AMQ-2692,12483948,,http://old.nabble.com/Derby-is-not-stopped-when-undeploying-app-from-WLS-td28181591.html#a28185551,Bug
AMQ-2521,12483777,,"I've started a secured broker using the sample configuration as follows:

./activemq xbean:file:../conf/activemq-security.xml

After the broker was started, I used the example ProducerTool to put 2000 messages on the TEST.FOO queue.  For this to work, I modified the ProducerTool to use username/password as follows:

    private String user = ""system"";
    private String password = ""manager"";

I then connected to the broker using jconsole, and created a new queue using the Broker's addQueue MBean operation.  As a test, I also used the TEST.FOO queue's removeMessage MBean operation to remove a message from the queue.

The problem is that certain MBean operations fail with ""Problem invoking moveMessageTo : java.lang.SecurityException: User is not authenticated.""  I have seen this with a queue's sendTextMessage and moveMessageTo operations.

The full exception as logged by the broker for the failed sendTextMessage operation is:

 WARN | Failed to add Connection
java.lang.SecurityException: User name or password is invalid.
	at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:52)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:666)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)


This seems similar to AMQ-2516.  I've tried this using the 5.3.1 and 5.4 SNAPSHOTs and see the same thing.
",Bug
AMQ-2794,12482930,,"When security is enable on ActiveMq 5.3.1, the following command 

activemq-admin browse --amqurl tcp://localhost:61616 TEST.FOO 

generates the error :

{code}
[root@mombrks10 bin]# ./activemq-admin browse --amqurl tcp://localhost:64011  Q.INAMEDIA.GESCOM.PANIER.P
Java Runtime: Sun Microsystems Inc. 1.6.0_20 /usr/java/jre1.6.0_20
  Heap sizes: current=15680k  free=15284k  max=251456k
    JVM args: -Dactivemq.classpath=/ap03/brokermutd1/appl/conf; -Dactivemq.home=/ap03/brokermutd1/appl -Dactivemq.base=/ap03/brokermutd1/appl
ACTIVEMQ_HOME: /ap03/brokermutd1/appl
ACTIVEMQ_BASE: /ap03/brokermutd1/appl
ERROR: java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
java.lang.RuntimeException: Failed to execute browse task. Reason: javax.jms.JMSException: User name or password is invalid.
        at org.apache.activemq.console.command.AmqBrowseCommand.runTask(AmqBrowseCommand.java:130)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
        at java.lang.reflect.Method.invoke(Unknown Source)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)

{code}

If we use the command activemq-admin query --jmxuser=monitorRole --jmxpassword=abc123, it works",Bug
AMQ-2718,12483613,,"Copyright banner on page footer of ActiveMQ Console is outdated - for example, page http://localhost:8161/admin/index.jsp has

Copyright 2005-2007 The Apache Software Foundation

The same problem applies to all the other Admin pages.

Also, the Home page fails to show the ActiveMQ version, which would be a useful addition.",Bug
AMQ-2690,12483782,,"I configured the following persintence adapter:

{code}
<persistenceAdapter>
   <kahaDB directory=""/srv/activemq/work/data"" 
                    journalMaxFileLength=""32mb"" indexWriteBatchSize=""10000"" 
                    indexCacheSize=""1000"" maxCheckpointMessageAddSize=""100""/>
</persistenceAdapter>
{code}

According to http://activemq.apache.org/kahadb.html the parameter maxCheckpointMessageAddSize should be usable.

If i startup the message broker i get the follwing exceptions:
{code}
# /etc/init.d/activemq fgstart
INFO: loading '/etc/default/activemq'
INFO: useing java '/usr/bin/java'
INFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)
INFO: changing to user 'activemq' to invoke java
INFO: Pushing the following environment Variables to JVM
INFO:  IBM_HEAPDUMPDIR='/var/log/activemq/' IBM_COREDIR='/var/log/activemq/' IBM_JAVACOREDIR='/var/log/activemq/'
Java Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre
  Heap sizes: current=131072k  free=126224k  max=8286208k
    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx8092M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=log4j.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/current -Dactivemq.data=/srv/activemq/work -Dactivemq.base=/srv/activemq/install/current -Djava.class.path=/srv/activemq/install/current/bin/run.jar -Dsun.java.command=/srv/activemq/install/current/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=22786 _port_library _org.apache.harmony.vmi.portlib
ACTIVEMQ_HOME: /srv/activemq/install/current
ACTIVEMQ_BASE: /srv/activemq/install/current
Loading message broker from: xbean:activemq.xml
ERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
        at java.lang.reflect.Method.invoke(Method.java:599)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter] while setting bean property 'persistenceAdapter'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#1' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'maxCheckpointMessageAddSize' of bean class [org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter]: Bean property 'maxCheckpointMessageAddSize' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
        at java.security.AccessController.doPrivileged(AccessController.java:224)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
{code}
",Bug
AMQ-2903,12483663,,"The default embedding rar deployment into JBoss AS version 5.1 doesn't start, throwing the following exception:

{code}
Caused by: java.lang.NoClassDefFoundError: org/apache/tools/ant/launch/AntMain
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
        at org.jboss.classloader.spi.base.BaseClassLoader.access$200(BaseClassLoader.java:63)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:572)
        at org.jboss.classloader.spi.base.BaseClassLoader$2.run(BaseClassLoader.java:532)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:530)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassLocally(BaseClassLoader.java:507)
        at org.jboss.classloader.spi.base.BaseDelegateLoader.loadClass(BaseDelegateLoader.java:134)
        at org.jboss.classloader.spi.filter.FilteredDelegateLoader.loadClass(FilteredDelegateLoader.java:131)
        at org.jboss.classloader.spi.base.ClassLoadingTask$ThreadTask.run(ClassLoadingTask.java:452)
        at org.jboss.classloader.spi.base.ClassLoaderManager.nextTask(ClassLoaderManager.java:251)
        at org.jboss.classloader.spi.base.ClassLoaderManager.process(ClassLoaderManager.java:150)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:265)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processJBossClientMetaData(OptAnnotationMetaDataDeployer.java:115)
        at org.jboss.deployment.OptAnnotationMetaDataDeployer.processMetaData(OptAnnotationMetaDataDeployer.java:82)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:177)
        at org.jboss.deployment.AnnotationMetaDataDeployer.deploy(AnnotationMetaDataDeployer.java:93)
        at org.jboss.deployers.plugins.deployers.DeployerWrapper.deploy(DeployerWrapper.java:171)
        ... 30 more
Caused by: java.lang.ClassNotFoundException: org.apache.tools.ant.launch.AntMain
        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:247)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:292)
        at org.jboss.classloader.spi.base.BaseClassLoaderDomain.loadClass(BaseClassLoaderDomain.java:1119)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClassFromDomain(BaseClassLoader.java:798)
        at org.jboss.classloader.spi.base.BaseClassLoader.loadClass(BaseClassLoader.java:441)
{code}

The issue can be avoided adding: ant-launcher.jar and ant.jar into rar deployer (I've tested version 1.7.1). ",Bug
AMQ-2853,12483891,,"When subscribing to a topic using the '>' selector, the inflight counter for the affected (sub)topics increases with every message sent.
However, the listeners receive the message correctly.

You can easily reproduce this by starting two producers on A.B and A.C.

If you subscribe using a MessageListener to 'A.>' you will see the increasing Inflight counter.


This does not happen when subscribing directly to the topic.  I.e. using two MessageListeners.",Bug
AMQ-3008,12483826,,"I'm not sure of cause of any of these exceptions.  The IllegalStateException seems be be due to the direct interaction between the OpenMQ and ActiveMQ jms code.   I haven't the faintest why the reconnect code can't connect again in the normal circumstance.  The agents that talk directly to OpenMQ do no have issues during these times and nothing is logged in the OpenMQ log.


2010-10-29 10:54:44,170 | ERROR | failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQMapMessage {commandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-12
88370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, transactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 
0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.ut
il.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMa
pMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed.
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.checkState(MessageProducerImpl.java:175)
        at com.sun.messaging.jmq.jmsclient.MessageProducerImpl.send(MessageProducerImpl.java:719)
        at com.sun.messaging.jmq.jmsclient.QueueSenderImpl.send(QueueSenderImpl.java:145)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
2010-10-29 10:54:45,179 | ERROR | failed to forward message on attempt: 2 reason: com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused message: ActiveMQMapMessage {co
mmandId = 3, responseRequired = false, messageId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:mq1.cdlocal-27338-1288370972745-6:24434:-1:1, destination = queue://CD.live.search.needsretrieve, t
ransactionId = null, expiration = 0, timestamp = 1288374884167, arrival = 0, brokerInTime = 1288374884167, brokerOutTime = 1288374884167, correlationId = null, replyTo = null, persistent = true, type = null, priority = 0, groupID = null, groupSequence = 0, targetConsumerId =
 null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@224f68dc, marshalledProperties = org.apache.activemq.util.ByteSequence@b6d551d, dataStructure = null, redeliveryCounter = 0, size = 1797, properties = {transformation=jms-map-json}, rea
dOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQMapMessage{ theTable = {} } | org.apache.activemq.network.jms.DestinationBridge | ActiveMQ Session: ID:mq1.cdlocal-27338-1288370972745-4:0:2
com.sun.messaging.jms.JMSException: [C4003]: Error occurred on connection creation [search2.cdlocal:6076]. - cause: java.net.ConnectException: Connection refused
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.throwConnectionException(ExceptionHandler.java:274)
        at com.sun.messaging.jmq.jmsclient.ExceptionHandler.handleConnectException(ExceptionHandler.java:220)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:241)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.init(PortMapperClient.java:150)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.<init>(PortMapperClient.java:92)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPConnectionHandler.<init>(TCPConnectionHandler.java:164)
        at com.sun.messaging.jmq.jmsclient.protocol.tcp.TCPStreamHandler.openConnection(TCPStreamHandler.java:135)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:778)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnectionNew(ConnectionInitiator.java:254)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:208)
        at com.sun.messaging.jmq.jmsclient.ConnectionInitiator.createConnection(ConnectionInitiator.java:158)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.init(ProtocolHandler.java:816)
        at com.sun.messaging.jmq.jmsclient.ProtocolHandler.<init>(ProtocolHandler.java:1529)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.openConnection(ConnectionImpl.java:2327)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.init(ConnectionImpl.java:1024)
        at com.sun.messaging.jmq.jmsclient.ConnectionImpl.<init>(ConnectionImpl.java:418)
        at com.sun.messaging.jmq.jmsclient.UnifiedConnectionImpl.<init>(UnifiedConnectionImpl.java:60)
        at com.sun.messaging.jmq.jmsclient.QueueConnectionImpl.<init>(QueueConnectionImpl.java:59)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:98)
        at com.sun.messaging.ConnectionFactory.createQueueConnection(ConnectionFactory.java:83)
        at com.centraldesktop.mq.openmq.QueueConnectionFactory.createQueueConnection(QueueConnectionFactory.java:33)
        at org.apache.activemq.network.jms.JmsQueueConnector.initializeForeignQueueConnection(JmsQueueConnector.java:223)
        at org.apache.activemq.network.jms.JmsQueueConnector.restartProducerConnection(JmsQueueConnector.java:184)
        at org.apache.activemq.network.jms.DestinationBridge.restartProducer(DestinationBridge.java:177)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:115)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1229)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:310)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:176)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:163)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:381)
        at java.net.Socket.connect(Socket.java:537)
        at java.net.Socket.connect(Socket.java:487)
        at java.net.Socket.<init>(Socket.java:384)
        at java.net.Socket.<init>(Socket.java:198)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.makeSocketWithTimeout(PortMapperClient.java:268)
        at com.sun.messaging.jmq.jmsclient.PortMapperClient.readBrokerPorts(PortMapperClient.java:220)
        ... 27 more


this exception repeats 10 times IMMEDIATELY and no further attempts are made at reconnecting.   A restart of ActiveMQ reestablishes the bridge.

Code and configuration for the AMQ->IMQ bridge is available here: http://github.com/centraldesktop/openmq-spring-bean

This has to be somewhat related to AMQ-2455 which I was told may resolve this issue (it didn't).
",Bug
AMQ-2768,12483153,,"Trying to enable HTTPS transportConnector in activemq.xml file, it is impossible to make it communicate in SSL.

I added the line:
<transportConnector name=""https"" uri=""https://localhost:8443"" enableStatusMonitor=""true""/> 

in the activemq.xml file,

and i can see at startup that a plain text socket seem to have been created, instead of a ssl one:

14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> Started SocketConnector@localhost:8443
14:36:23,119  INFO org.apache.activemq.broker.TransportConnector 250 <main> Connector https Started
14:36:23,119  INFO org.mortbay.log.Slf4jLog 67 <main> jetty-6.1.22

When i connect with a https client (based on Spring JmsTemplate class), i cannot connect. I have to mention also that i can successfully connect using ssl connection (so the certificates are OK) and also in HTTP.

Thanks a lot for your work!",Bug
AMQ-2661,12483258,,"Should I be able to subscribe to a wildcard topic via stomp?

I don't seem to be able to, using any of

 /topic/blah/*
 /topic/blah*
 /topic/blah/.>
 /topic/blah.>
 /topic/blah.*

I think I might have tried more, but I got the feeling that it just didn't work.  Am I doing it wrong? or is this available via JMS, but not via stomp?
http://activemq.apache.org/wildcards.html
",Bug
AMQ-2957,12483851,,"When I try and go to my admin page http://[myIpHere]:8161/, I get an error of

HTTP ERROR: 503

Problem accessing /. Reason:

    Service Unavailable

I have the log level at DEBUG and there are no Jetty start up errors and the log entries for the request output are below.

2010-10-01 14:20:11,599 | DEBUG | REQUEST /favicon.ico on org.eclipse.jetty.server.nio.SelectChannelConnector$2@ca8e2b8 | org.eclipse.jetty.util.log | qtp299878560-27 - /favicon.ico
2010-10-01 14:20:11,599 | DEBUG | REQUEST / on org.eclipse.jetty.server.nio.SelectChannelConnector$2@23bca486 | org.eclipse.jetty.util.log | qtp299878560-28 - /
2010-10-01 14:20:11,600 | DEBUG | /favicon.ico | org.eclipse.jetty.util.log | qtp299878560-27 - /favicon.ico
2010-10-01 14:20:11,600 | DEBUG | / | org.eclipse.jetty.util.log | qtp299878560-28 - /
2010-10-01 14:20:11,621 | DEBUG | REQUEST /favicon.ico on org.eclipse.jetty.server.nio.SelectChannelConnector$2@38ec029 | org.eclipse.jetty.util.log | qtp299878560-29 - /favicon.ico
2010-10-01 14:20:11,621 | DEBUG | /favicon.ico | org.eclipse.jetty.util.log | qtp299878560-29 - /favicon.ico ",Bug
AMQ-2902,12483456,,"After upgrading to 5.4.0 we see many exceptions of the following kind being logged with level INFO:
{quote}
2010-09-07 13:23:25,824 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
	at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
	at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
	at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
	at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
	at java.lang.Thread.run(Thread.java:619)
{quote}
I suppose that the cause for the message is actually harmless - hence the INFO level - but the messages are confusing and annoying nonetheless.",Bug
AMQ-2976,12483943,,"If I run ActiveMQ on my local Linux box using the Sun JDK, I note that when I stop the broker with 'activemq stop' then it stops OK - it uses the stored PID from the pidfile to connect to the broker (presumably using JMX!) and do a graceful shutdown.

{code}
Connecting to pid: 13175
Stopping broker: amq01
{code}

However, I have a colleague using ActiveMQ with the IBM JDK, When he does 'activemq stop', it doesn't attempt to use the PID. Instead, it uses the default JMX RMI connector string. 

{code}
Connecting to JMX URL:
service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
{code} 

Problem is that this broker is listening for JMX on a different port number! So, the attempt to stop the broker fails with a java.rmi.ConnectionException. 

Just wondering if anyone has seen anything like this? ",Bug
AMQ-3039,12483883,,"We used to be able to import broker config using entities as follows:

{code}
<!DOCTYPE activemq [
<!ENTITY network-connectors SYSTEM ""/etc/activemq/network-connectors.xml""> 
]>
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd""> 
  
  <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""${activemq.brokername}"" useJmx=""true"" populateJMSXUserID=""true"" dataDirectory=""${activemq.base}/data""> 
 
    <managementContext> 
        <managementContext createConnector=""false""/> 
    </managementContext> 

    &network-connectors;

...
{code}

Now, since the Spring 3 upgrade, you get something like this error:

{code}
Caused by: org.xml.sax.SAXParseException: Element type ""beans"" must be declared.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1929)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1363)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$ContentDriver.scanRootElementHook(XMLDocumentScannerImpl.java:1318)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
        ... 42 more
{code}

This is caused by validation being turned on by default in Spring 3 (it was off in Spring 2.x). Have test case coming soon.",Bug
AMQ-2958,12483612,,"I'm using java version 1.6.0_02-b05-x86_64, and on start up I see these errors

Initializing Spring root WebApplicationContext | /camel | main
2010-10-01 15:10:44,851 | ERROR | Context initialization failed | org.springframework.web.context.ContextLoader | main
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from URL location
[file:/home/cstadmin/activemq/conf/camel.xml]
Offending resource: ServletContext resource [/WEB-INF/applicationContext.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionSt
oreException: Unexpected exception parsing XML document from URL [file:/home/cstadmin/activemq/conf/camel.xml]; nested exception is java.lang.Linkage
Error: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/lib/jaxb-impl-2.1.6.jar!/com/s
un/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar in the bootstrap classloader.
 (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
        at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
        at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader
.java:192)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:147
)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
2)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
 at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:124)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:93)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:13
0)
        at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:340)
        at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.server.Server.doStart(Server.java:228)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.jav
a:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:147
7)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from URL [file:/home/cstadmin/ac
tivemq/conf/camel.xml]; nested exception is java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from ja
r:file:/home/cstadmin/activemq/lib/jaxb-impl-2.1.6.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory
mechanism to place jaxb-api.jar in the bootstrap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:412)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader
.java:186)
        ... 69 more
Caused by: java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/li
b/jaxb-impl-2.1.6.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar i
n the bootstrap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at com.sun.xml.bind.v2.model.impl.ModelBuilder.<clinit>(ModelBuilder.java:173)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:422)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:286)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:139)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:117)
at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:188)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:132)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:286)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:372)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:337)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.createJaxbContext(CamelNamespaceHandler.java:186)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.getJaxbContext(CamelNamespaceHandler.java:173)
        at org.apache.camel.spring.handler.CamelNamespaceHandler$CamelContextBeanDefinitionParser.doParse(CamelNamespaceHandler.java:252)
        at org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser.parseInternal(AbstractSingleBeanDefinitionParser.java:85)
        at org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(AbstractBeanDefinitionParser.java:59)
        at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:73)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1335)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1325)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
5)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        ... 74 more
2010-10-01 15:10:44,854 | ERROR | Failed startup of context WebAppContext@5ee771f3@5ee771f3/camel,file:/home/cstadmin/apache-activemq-5.4.1/webapps/c
amel/ | org.eclipse.jetty.util.log | main
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed to import bean definitions from URL location
[file:/home/cstadmin/activemq/conf/camel.xml]
Offending resource: ServletContext resource [/WEB-INF/applicationContext.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionSt
oreException: Unexpected exception parsing XML document from URL [file:/home/cstadmin/activemq/conf/camel.xml]; nested exception is java.lang.Linkage
Error: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/lib/jaxb-impl-2.1.6.jar!/com/s
un/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar in the bootstrap classloader.
 (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:68)
        at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
        at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:76)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader
.java:192)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:147
)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
2)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:124)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:93)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:13
0)
        at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
        at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:340)
        at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.server.Server.doStart(Server.java:228)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.jav
a:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:147
7)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from URL [file:/home/cstadmin/ac
tivemq/conf/camel.xml]; nested exception is java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from ja
r:file:/home/cstadmin/activemq/lib/jaxb-impl-2.1.6.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory
mechanism to place jaxb-api.jar in the bootstrap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:412)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader
.java:186)
        ... 69 more
Caused by: java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/li
b/jaxb-impl-2.1.6.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar i
n the bootstrap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at com.sun.xml.bind.v2.model.impl.ModelBuilder.<clinit>(ModelBuilder.java:173)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:422)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:286)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:139)
at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:117)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:188)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:132)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:286)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:372)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:337)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.createJaxbContext(CamelNamespaceHandler.java:186)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.getJaxbContext(CamelNamespaceHandler.java:173)
        at org.apache.camel.spring.handler.CamelNamespaceHandler$CamelContextBeanDefinitionParser.doParse(CamelNamespaceHandler.java:252)
        at org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser.parseInternal(AbstractSingleBeanDefinitionParser.java:85)
        at org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(AbstractBeanDefinitionParser.java:59)
        at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:73)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1335)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1325)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
5)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        ... 74 more
2010-10-01 15:10:44,855 | ERROR | Nested in org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Failed t
o import bean definitions from URL location [file:/home/cstadmin/activemq/conf/camel.xml]
Offending resource: ServletContext resource [/WEB-INF/applicationContext.xml]; nested exception is org.springframework.beans.factory.BeanDefinitionSt
oreException: Unexpected exception parsing XML document from URL [file:/home/cstadmin/activemq/conf/camel.xml]; nested exception is java.lang.Linkage
Error: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/lib/jaxb-impl-2.1.6.jar!/com/s
un/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar in the bootstrap classloader.
 (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/): | org.eclipse.jetty.util.log | main
java.lang.LinkageError: JAXB 2.0 API is being loaded from the bootstrap classloader, but this RI (from jar:file:/home/cstadmin/activemq/lib/jaxb-impl
-2.1.6.jar!/com/sun/xml/bind/v2/model/impl/ModelBuilder.class) needs 2.1 API. Use the endorsed directory mechanism to place jaxb-api.jar in the boots
trap classloader. (See http://java.sun.com/j2se/1.5.0/docs/guide/standards/)
        at com.sun.xml.bind.v2.model.impl.ModelBuilder.<clinit>(ModelBuilder.java:173)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:422)
        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:286)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:139)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:117)
        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:188)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:132)
        at javax.xml.bind.ContextFinder.find(ContextFinder.java:286)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:372)
        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:337)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.createJaxbContext(CamelNamespaceHandler.java:186)
        at org.apache.camel.spring.handler.CamelNamespaceHandler.getJaxbContext(CamelNamespaceHandler.java:173)
        at org.apache.camel.spring.handler.CamelNamespaceHandler$CamelContextBeanDefinitionParser.doParse(CamelNamespaceHandler.java:252)
        at org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser.parseInternal(AbstractSingleBeanDefinitionParser.java:85)
        at org.springframework.beans.factory.xml.AbstractBeanDefinitionParser.parse(AbstractBeanDefinitionParser.java:59)
        at org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:73)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1335)
        at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1325)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
5)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader
.java:186)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseDefaultElement(DefaultBeanDefinitionDocumentReader.java:147
)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:13
2)
        at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java
:93)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:493)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:334)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:302)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
        at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:124)
        at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:93)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:13
0)
        at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:467)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:397)
at org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
        at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
        at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
        at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:645)
        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:189)
        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:978)
        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:586)
        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:349)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:340)
        at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:231)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.server.Server.doStart(Server.java:228)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.jav
a:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:147
7)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)",Bug
AMQ-2894,12483475,,"Using '&' in properties concatenation in broker configuration urls, brings to the following error:

12:25:49,890 WARN  [ActiveMQResourceAdapter] Could not start up embeded ActiveMQ Broker 'xbean:file://C:/broker-config.xml': Line 85 in XML
document from URL [file://C:/broker-config.xml] is invalid; nested exception is org.xml.sax.SAXParseException: The reference to entity ""transport.initialDelayTime"" must end with the ';' delimiter.

{code}...
    <transportConnectors>
      <transportConnector brokerName=""localhost"" uri=""nio://0.0.0.0:61616"" />
      <transportConnector brokerName=""localhost"" name=""http"" uri=""http://0.0.0.0:61617?transport.readCheckTime=4000&transport.initialDelayTime=4000"" />
    </transportConnectors>
...{code}

But using:

{code}
<transportConnector brokerName=""localhost"" name=""http"" uri=""http://0.0.0.0:61617?transport.readCheckTime=4000&amp;transport.initialDelayTime=4000"" />{code}

the broker starts correctly.

XML schema should be reviewed.",Bug
AMQ-3025,12483858,,"ActiveMQ child instances create their PID file in the parent's data directory and refer to the parent's configuration files when started. 

Please see below for the diff of the bin/activemq script:

87a88,91
> if [ -z ""$ACTIVEMQ_BASE"" ] ; then
>   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
> fi
> 
89c93
< ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_HOME/conf""
---
> ACTIVEMQ_CONFIG_DIR=""$ACTIVEMQ_BASE/conf""
93c97
<   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_HOME/data""
---
>   ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_BASE/data""
283,286d286
< 
< if [ -z ""$ACTIVEMQ_BASE"" ] ; then
<   ACTIVEMQ_BASE=""$ACTIVEMQ_HOME""
< fi
",Bug
AMQ-3239,12502176,,"Reproducing senario:
1- Start activemq server
2- With admin console send a message to testqueue (message is enqueued)
3- Deploy activemq-ra.rar connector
4- deploy an ear containing (an mdb to consume the message)  and a simple application
5- start jboss

Always Jboss startup block after INFO  [ra.ActiveMQEndpointWorker] Successfully established connection to broker [tcp://localhost:61616] and can't continue deployment of the ear which contain the mdb consumer

Is there a specific config to do, to let activemq-ra.rar deployed without trying to send the pending message untill the server starup and that the mdb beying ready to consume it. ",Bug
AMQ-3112,12494603,,"sending a ""--help"" command to ActiveMQ.Agent causes it to lock up and reply with help to all subsequent messages

I'm using stomp so here is a stomp example, but i think its a general issue

send [CONNECT
passcode:xx
login:xx

]
receive [CONNECTED
session:ID:STATS2-44815-1294140076908-5:8536

]
T+0 Sending msg, size 6: --help , filesize 0
send [BEGIN
transaction:ID:STATS2-44815-1294140076908-5:8536-1

]
send [SEND
destination:/topic/ActiveMQ.Agent
reply-to:/temp-queue/reply
bytes_message:
receipt:ID:STATS2-44815-1294140076908-5:8536-2
persistent:true
expires:1294156151000

--help]
receive [RECEIPT
receipt-id:ID:STATS2-44815-1294140076908-5:8536-2

]
send [COMMIT
transaction:ID:STATS2-44815-1294140076908-5:8536-1

]
send [SUBSCRIBE
activemq.prefetchSize:1
ack:client
destination:/temp-queue/reply
activemq.exclusive:true

]
T+0 msg sentT+0 waiting 10 sec for 1 replies
T+0 waiting 10 sec for 1/1 replies
receive [MESSAGE
priority:4
timestamp:1294152551188
destination:/remote-temp-queue/ID:STATS2-44815-1294140076908-5:8536:1
expires:0
message-id:ID:STATS2-44815-1294140076908-2:1:1:1:56

Usage: [task] [task-options] [task data]

Tasks (default task is start):
    start           - Creates and starts a broker using a configuration file, or a broker URI.
    create          - Creates a runnable broker instance in the specified path
    stop            - Stops a running broker specified by the broker name.
    list            - Lists all available brokers in the specified JMX context.
    query           - Display selected broker component's attributes and statistics.
    browse          - Display selected messages in a specified destination.
    journal-audit   - Allows you to view records stored in the persistent journal.
    purge           - Delete selected destination's messages that matches the message selector
    encrypt         - Encrypts given text
    decrypt         - Decrypts given text

Task Options (Options specific to each task):
    --extdir <dir>  - Add the jar files in the directory to the classpath.
    --version       - Display the version information.
    -h,-?,--help    - Display this help information. To display task specific help, use [task] -h,-?,--help

Task Data:
    - Information needed by each specific task.


]


after this no matter what command you send, you will always get the help message returned

",Bug
AMQ-3445,12518473,,"When using jdbcPersistenceAdapter, if you restart the broker queues do not show up until they are manually created or a consumer re-connects. This is especially a problem for Virtual Topic consumers - for Virtual Topic consumers once the queue is created (and thereby subscribing to the virtual topic), they should get all messages published to the topic until consumer explicitly remove subscription by deleting the queue. With KahaDB this works correctly but not with jdbcPersistenceAdapter. Tried both 5.4.2 and 5.5 and both have the same issue.


To reproduce:
1. Setup broker using jdbcPersistenceAdapter 
2. Go to web console and create a queue: Consumer.MyApp.VirtualTopic.FOO
3. Go to topics page and create a topic: VirtualTopic.FOO
4. Send a message with Persistent Delivery to the topic
5. Verify queue has the message
6. Restart the broker
7. BUG: queue does not show up
8. Go to topics page and repeat steps 3 & 4
9. repeat step 2
10. BUG: only the first message shows up in the queue.

Do the same test on KahaDB and queue shows up in step 7 (and because of that) you get both messages in step 10.
 ",Bug
AMQ-3213,12500904,,"I have a network of three brokers: two embedded (publisher and subscriber) and one stand alone remote. Embedded brokers connect to the remote with duplex static failover connections. Everything works fine if remote broker is not restarted. After the remote broker is restarted embedded brokers fail to reestablish duplex bridges. Subscriber doesn't receive any messages and in logs I have:

*Subscriber worker:*

{code}
Received 14-th message.
Received 15-th message.
Received 16-th message.
2011:03:09 18:19:08,276 [WARN ] org.apache.activemq.transport.failover.FailoverTransport - Transport (localhost/127.0.0.1:61616) failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.net.SocketException: Connection reset
2011:03:09 18:19:08,276 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote interrupted.
2011:03:09 18:19:22,426 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Network connection between vm://local1#0 and tcp://localhost:61616(remote) has been established.
2011:03:09 18:19:22,429 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote resumed
2011:03:09 18:19:22,429 [INFO ] org.apache.activemq.transport.failover.FailoverTransport - Successfully reconnected to tcp://localhost:61616
2011:03:09 18:19:22,455 [WARN ] org.apache.activemq.broker.TransportConnection - Unexpected extra broker info command received: BrokerInfo {commandId = 1929, responseRequired = false, brokerId = ID:Air-17262-1299683959982-0:1, brokerURL = tcp://validation.sls.microsoft.com:61616, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = remote, connectionId = 0, brokerUploadUrl = null, networkProperties = null}
{code}


*Publisher worker:*

{code}
Sending 28-th message
Sending 29-th message
Sending 30-th message
2011:03:09 18:19:22,430 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Network connection between vm://local#0 and tcp://localhost:61616(remote) has been established.
2011:03:09 18:19:22,435 [INFO ] org.apache.activemq.network.DemandForwardingBridgeSupport - Outbound transport to remote resumed
2011:03:09 18:19:22,435 [INFO ] org.apache.activemq.transport.failover.FailoverTransport - Successfully reconnected to tcp://localhost:61616
2011:03:09 18:19:22,469 [WARN ] org.apache.activemq.broker.TransportConnection - Unexpected extra broker info command received: BrokerInfo {commandId = 1911, responseRequired = false, brokerId = ID:Air-17262-1299683959982-0:1, brokerURL = tcp://validation.sls.microsoft.com:61616, slaveBroker = false, masterBroker = false, faultTolerantConfiguration = false, networkConnection = false, duplexConnection = false, peerBrokerInfos = [], brokerName = remote, connectionId = 0, brokerUploadUrl = null, networkProperties = null}
Sending 31-th message
Sending 32-th message
Sending 33-th message
{code}

*Sample code to reproduce this issue:*

{code}
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.broker.BrokerService;
import org.apache.activemq.broker.TransportConnector;
import org.apache.activemq.network.NetworkConnector;

import javax.jms.*;
import java.net.URI;


public class JmsTester implements MessageListener {

    private static final int size = 256;
    private static byte[] payload;

    static {
        char[] DATA = ""abcdefghijklmnopqrstuvwxyz"".toCharArray();
        payload = new byte[size];
        for (int i = 0; i < size; i++) {
            payload[i] = (byte)DATA[i % DATA.length];
        }
    }

    public static void main(String[] args) throws Exception {
        if(System.getProperty(""jms.mode"").equals(""publisher""))
            publisher();
        else if(System.getProperty(""jms.mode"").equals(""broker""))    
            broker();
        else
            subscriber();
    }

    private static void publisher() throws Exception {
        System.out.println(""Starting publisher ..."");
        BrokerService broker = new BrokerService();
        broker.setBrokerName(""local"");
        broker.setUseJmx(true);
        broker.setPersistent(true);
        NetworkConnector nc = broker.addNetworkConnector(""static:(failover:(tcp://localhost:61616))"");
        nc.setDuplex(true);
        nc.setNetworkTTL(4);
        broker.start();

        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://local"");
        Connection connection = factory.createConnection();
        Session session = connection.createSession(false, Session.DUPS_OK_ACKNOWLEDGE);
        Topic topic = session.createTopic(""topictest.messages"");

        MessageProducer publisher = session.createProducer(topic);
        publisher.setDeliveryMode(DeliveryMode.PERSISTENT);

        for (int i=0; i<1000; i++) {
            Thread.sleep(1000);
            System.out.println(""Sending "" + i + ""-th message"");
            BytesMessage msg = session.createBytesMessage();
            msg.setIntProperty(""count"", i);
            msg.writeBytes(payload);
            publisher.send(msg);
        }

        broker.stop();
    }

    private static void broker() throws Exception {
        System.out.println(""Starting broker ..."");
        BrokerService broker = new BrokerService();
        broker.setPersistent(true);
        broker.setBrokerName(""remote"");
        broker.setUseJmx(true);
        TransportConnector connector = new TransportConnector();
        connector.setUri(new URI(""tcp://localhost:61616""));
        
        broker.addConnector(connector);
        broker.start();
        while(true) { }
    }

    private static void subscriber() throws Exception {
        System.out.println(""Starting subscriber ..."");

        BrokerService broker = new BrokerService();
        broker.setBrokerName(""local1"");
        broker.setUseJmx(true);
        broker.setPersistent(true);
        NetworkConnector nc = broker.addNetworkConnector(""static:(failover:(tcp://localhost:61616))"");
        nc.setDuplex(true);
        nc.setNetworkTTL(4);
        broker.start();

        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""vm://local1"");
        Connection connection = factory.createConnection();
        connection.setClientID(""subscriber2"");
        Session session = connection.createSession(false, Session.DUPS_OK_ACKNOWLEDGE);

        Topic topic = session.createTopic(""topictest.messages"");

        MessageConsumer consumer = session.createDurableSubscriber(topic, ""subscriber2"");
        JmsTester tester = new JmsTester();
        consumer.setMessageListener(tester);
        connection.start();
        while(true) {
            Thread.sleep(1000);
        }
    }

    @Override
    public void onMessage(Message message) {
        try {
            int count = message.getIntProperty(""count"");
            System.out.println(""Received "" + count + ""-th message."");
        } catch (JMSException e) {
            e.printStackTrace();
        }
    }
}
{code}",Bug
AMQ-4141,12613918,,"We have a single Stomp consumer being invoked via a schedule with ten-second intervals to consume at most 200 messages with a one second network timeout.

The consumer subscribes to /queue/account_events on the localhost broker (""hub""). This broker is connected to from three external brokers which have producers on them (""production servers"").

What we see is a large built-up of messages on the remote brokers for this queue, with a small number of messages pending on the hub. The messages are not persistent and tend to be smallish (<1KB).

The consumer is literally sat waiting for the next available message. Under ""normal"" conditions it spins up and consumes 200 messages at a pace of a few msgs per second. Right at this moment it goes dozens of seconds without a message then processes two-three inside 2 seconds.

The hub's web console is showing 91 pending, 1 consumer. If I click to browse this queue, there are no messages. The counter for 91 has been ""stuck"" for some time now.

The hub has been set at debug level but there is only very recent logs recorded. A sample of them grepping for ""account_events"" shows activity such as:

2012-10-29 15:25:50,016 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:25:50,016 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:25:50,016 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:25:50,020 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:25:52,134 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:25:52,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:25:52,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-112
2012-10-29 15:25:52,134 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:20,016 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:20,016 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:20,016 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:26:20,017 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:22,134 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:22,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:22,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:26:22,134 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:35,687 | DEBUG | Unregistering MBean org.apache.activemq:BrokerName=hub,Type=Subscription,persistentMode=Non-Durable,destinationType=Queue,destinationName=account_events,clientId=account_events_receiver,consumerId=ID_billing-35190-1351511867558-2_1285_-1_1 | org.apache.activemq.broker.jmx.ManagementContext | ActiveMQ Transport: tcp:///127.0.0.1:50560@61612
2012-10-29 15:26:35,687 | DEBUG | hub removing consumer: ID:billing-35190-1351511867558-2:1285:-1:1 for destination: queue://account_events | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:50560@61612
2012-10-29 15:26:35,688 | DEBUG | queue://account_events remove sub: QueueSubscription: consumer=ID:billing-35190-1351511867558-2:1285:-1:1, destinations=1, dispatched=0, delivered=0, pending=0, lastDeliveredSeqId: 0, dequeues: 26950, dispatched: 26950, inflight: 0 | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///127.0.0.1:50560@61612
2012-10-29 15:26:35,688 | DEBUG | Unregistering MBean org.apache.activemq:BrokerName=hub,Type=Producer,destinationType=Dynamic,clientId=account_events_receiver,producerId=ID_billing-35190-1351511867558-2_1285_-1_1 | org.apache.activemq.broker.jmx.ManagementContext | ActiveMQ Transport: tcp:///127.0.0.1:50560@61612
2012-10-29 15:26:35,688 | DEBUG | Unregistering MBean org.apache.activemq:BrokerName=hub,Type=Connection,ConnectorName=stomp,Connection=account_events_receiver | org.apache.activemq.broker.jmx.ManagementContext | ActiveMQ Transport: tcp:///127.0.0.1:50560@61612
2012-10-29 15:26:35,688 | DEBUG | bridging (hub -> drax) ID:billing-35190-1351511867558-1:1:0:0:80197, consumer: ID:billing-35190-1351511867558-9:1:1:1, destination topic://ActiveMQ.Advisory.Consumer.Queue.account_events, brokerPath: [ID:billing-35190-1351511867558-0:1], message: ActiveMQMessage {commandId = 0, responseRequired = false, messageId = ID:billing-35190-1351511867558-1:1:0:0:80197, originalDestination = null, originalTransactionId = null, producerId = ID:billing-35190-1351511867558-9:2:1:1, destination = topic://ActiveMQ.Advisory.Consumer.Queue.account_events, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1351524395688, brokerOutTime = 1351524395688, correlationId = null, replyTo = null, persistent = false, type = Advisory, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = RemoveInfo {commandId = 0, responseRequired = false, objectId = ID:billing-35190-1351511867558-2:1285:-1:1, lastDeliveredSequenceId = 0}, redeliveryCounter = 0, size = 1024, properties = {consumerCount=0, originBrokerURL=tcp://0.0.0.0:61616, originBrokerId=ID:billing-35190-1351511867558-0:1, originBrokerName=hub}, readOnlyProperties = false, readOnlyBody = false, droppable = false} | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:26:35,689 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-112
2012-10-29 15:26:36,847 | DEBUG | Setting up new connection id: ID:billing-35190-1351511867558-2:1304, address: tcp://127.0.0.1:50601, info: ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:billing-35190-1351511867558-2:1304, clientId = account_events_receiver, clientIp = null, userName = , password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = false, failoverReconnect = false} | org.apache.activemq.broker.TransportConnection | ActiveMQ Transport: tcp:///127.0.0.1:50601@61612
2012-10-29 15:26:36,887 | DEBUG | hub adding consumer: ID:billing-35190-1351511867558-2:1304:-1:1 for destination: queue://account_events | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: tcp:///127.0.0.1:50601@61612
2012-10-29 15:26:36,888 | DEBUG | queue://account_events add sub: QueueSubscription: consumer=ID:billing-35190-1351511867558-2:1304:-1:1, destinations=0, dispatched=0, delivered=0, pending=0, dequeues: 26950, dispatched: 26950, inflight: 0 | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///127.0.0.1:50601@61612
2012-10-29 15:26:36,888 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-112
2012-10-29 15:26:36,889 | DEBUG | bridging (hub -> drax) ID:billing-35190-1351511867558-1:1:0:0:80200, consumer: ID:billing-35190-1351511867558-9:1:1:1, destination topic://ActiveMQ.Advisory.Consumer.Queue.account_events, brokerPath: [ID:billing-35190-1351511867558-0:1], message: ActiveMQMessage {commandId = 0, responseRequired = false, messageId = ID:billing-35190-1351511867558-1:1:0:0:80200, originalDestination = null, originalTransactionId = null, producerId = ID:billing-35190-1351511867558-9:2:1:1, destination = topic://ActiveMQ.Advisory.Consumer.Queue.account_events, transactionId = null, expiration = 0, timestamp = 0, arrival = 0, brokerInTime = 1351524396889, brokerOutTime = 1351524396889, correlationId = null, replyTo = null, persistent = false, type = Advisory, priority = 0, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = ConsumerInfo {commandId = 3, responseRequired = false, consumerId = ID:billing-35190-1351511867558-2:1304:-1:1, destination = queue://account_events, prefetchSize = 200, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = true, selector = null, subscriptionName = null, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null}, redeliveryCounter = 0, size = 1024, properties = {consumerCount=1, originBrokerURL=tcp://0.0.0.0:61616, originBrokerId=ID:billing-35190-1351511867558-0:1, originBrokerName=hub}, readOnlyProperties = false, readOnlyBody = false, droppable = false} | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[hub] Task-112
2012-10-29 15:26:50,017 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:50,017 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:50,017 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:26:50,017 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:52,134 | DEBUG | queue://account_events expiring messages .. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:52,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler
2012-10-29 15:26:52,134 | DEBUG | account_events toPageIn: 91, Inflight: 0, pagedInMessages.size 0, enqueueCount: 27041, dequeueCount: 26950 | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[hub] Task-110
2012-10-29 15:26:52,134 | DEBUG | queue://account_events expiring messages done. | org.apache.activemq.broker.region.Queue | ActiveMQ Broker[hub] Scheduler

Around the time (cannot be certain, was not looking) of ""breakage"" a 10MB message was produced on this hub for consumption by each of the ""production servers"" via a topic. The heap memory rose from 100-200MB (normal) to 300-450MB at this point before levelling off around 200MB. The number of threads actually halved before rising to normal. It is unknown if this is a factor.

Each ""production server"" correctly shows one consumer when it is connected from the hub.

Continuing observations - restarting AMQ on the hub - a flood (7,000+) of messages have now arrived according to the web console and the consumer is racing through them. The production servers have cleared through their backlog having handed over to the hub.

Some help isolating this with narrower debugging would be appreciated!
",Bug
AMQ-4287,12630127,,"I had to reopen the previous issue as the problem is still existing.
I am using activemq-5.5 with activemq-rar-5.7.0.rar and I am getting

{quote}
Caused by: javax.jms.JMSException: The resource is already being used in transaction context.
        at org.apache.activemq.ra.ManagedTransactionContext.setUseSharedTxContext(ManagedTransactionContext.java:47)
        at org.apache.activemq.ra.ManagedSessionProxy.setUseSharedTxContext(ManagedSessionProxy.java:67)
        at org.apache.activemq.ra.ManagedConnectionProxy.createSessionProxy(ManagedConnectionProxy.java:122)
        at org.apache.activemq.ra.ManagedConnectionProxy.createSession(ManagedConnectionProxy.java:105)
{quote}
under high load. This is certainly critical issue as it prevents from using rar adapter for any serious applications.",Bug
AMQ-3261,12503269,,"See http://activemq.2283324.n4.nabble.com/Setup-writes-wrong-default-JMX-port-td3425002.html for the question and request for JIRA issue.

Change the line:
ACTIVEMQ_SUNJMX_START=""-Dcom.sun.management.jmxremote.port=11099 ""
to
ACTIVEMQ_SUNJMX_START=""-Dcom.sun.management.jmxremote.port=1099 ""
Then remove the ""--jmxurl
service:jmx:rmi:///jndi/rmi://127.0.0.1:11099/jmxrmi "" from the ACTIVEMQ_SUNJMX_CONTROL to make restarts and queries work without erroring.
",Bug
AMQ-3296,12505152,,"The conflict versions of slf4j will cause problem if you have your own slf4j libs included in the project.

In my case, slf4j-api-1.6.1.jar and slf4j-log4j12-1.6.1.jar are on classpath.

SLF4J: The requested version 1.6 by your slf4j binding is not compatible with [1.5.5, 1.5.6, 1.5.7, 1.5.8, 1.5.9, 1.5.10, 1.5.11]
SLF4J: See http://www.slf4j.org/codes.html#version_mismatch for further details.",Bug
AMQ-3275,12503609,,"{code}factory = new ActiveMQConnectionFactory(""udp://localhost:61618"");
connection = factory.createConnection();
connection.start();{code}

Connection.start() seems to trigger an infinite loop in ReliableTransport.request(Object).",Bug
AMQ-3163,12496846,,"Had to make this change to bin/activemq to avoid an error...need spaces inside the []s:

[dan:/usr/local/apache-activemq-5.5-SNAPSHOT/bin]$ diff activemq activemq.new
252c252
<            if [-z ""$JAVA_HOME""] && [ ""$JAVACMD"" = ""auto"" ];then
---
>            if [ -z ""$JAVA_HOME"" ] && [ ""$JAVACMD"" = ""auto"" ];then ",Bug
AMQ-3717,12542593,,"Please correct documentation to reflect that this product requires Java 6 to build and to run.  As of 5.5.0, Java 5 is no longer supported (see http://activemq.apache.org/activemq-550-release.html). However the main page (http://activemq.apache.org/), the getting started page (http://activemq.apache.org/getting-started.html), the resource adapters page (http://activemq.apache.org/resource-adapter.html), and probably others all explicitly state that Java 1.4 and 1.5 are supported.",Bug
AMQ-3590,12531166,,"As seen here:

        String type = (String)asString(parameters.remove(""JMSType""));
        if (correlationID != null) {
            message.setJMSType(type);
        }

http://svn.apache.org/viewvc/activemq/trunk/activemq-web/src/main/java/org/apache/activemq/web/MessageServletSupport.java?revision=1177445&view=markup#l130

there is a copy-paste typo in the MessageServletSupport class. The null-check conditional should check the ""type"" variable instead of ""correlationId"".",Bug
AMQ-3553,12527993,,"Installing ActiveMQ WebConsole on Karaf (using features:install activemq-web-console) works fine, but:

- we can only administrate/monitore the web-console broker (using the WEB-INF/activemq.xml embedded file)
- creating a new broker using activemq:create looks to break the web console

I will submit a patch to enhance the web console behavior :)",Bug
AMQ-3552,12527991,,"After a fresh ActiveMQ installation on Karaf, the activemq:list command doesn't use the correct JMX URL by default:

Connecting to JMX URL: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
ERROR: java.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi
java.lang.RuntimeException: Failed to execute list task. Reason: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.NameNotFoundException: jmxrmi
        at org.apache.activemq.console.command.ListCommand.runTask(ListCommand.java:53)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:316)
        at org.apache.activemq.karaf.commands.ActiveMQCommandSupport.doExecute(ActiveMQCommandSupport.java:46)
        at org.apache.karaf.shell.console.OsgiCommandSupport.execute(OsgiCommandSupport.java:38)
        at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:35)
        at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)
        at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:474)
        at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:400)
        at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)
        at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)
        at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:89)
        at org.apache.karaf.shell.console.jline.Console.run(Console.java:218)
        at java.lang.Thread.run(Thread.java:662)


Whereas it should use service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root

More over, ActiveMQ should use the Karaf serviceURL property.

I'm gonna submit a patch.",Bug
AMQ-3535,12526651,,"When the ActiveMQMessageConsumer auto acks a duplicate, it always sends a standard ack.  This occurs even when the session was opened in individual acknowledge mode.  This results in the acknowledgments usually generating the ""unmatched ack"" message, causing the ack to be dropped.  Since this is a duplicate, generally things are okay, but the spurious error message is troubling and the inflight and dequeue counts will be wrong from then on.

I have also noticed that there are several places in ActiveMQMessageConsumer that allow potential creation of acks that do not coincide with the session settings.  Perhaps ActiveMQSession.sendAck should throw IllegalArgumentException if the ack type does not match the session?
",Bug
AMQ-3561,12528371,,"On Karaf, if I install the ActiveMQ web console:

karaf@root> features:install activemq-web-console

the web-console broker is created, but use a ${activemq.base} folder.

It should set a config using ${karaf.base}.",Bug
AMQ-3479,12520855,,"The documentation [explicitly recommends|http://activemq.apache.org/should-i-use-xa.html] using XA transactions for multiple resources:
{quote}
If you are using more than one resource; e.g. reading a JMS message and writing to a database, you really should use XA - its purpose is to provide atomic transactions for multiple transactional resources.
{quote}
However it fails to mention that XA support in ActiveMQ [does not support|AMQ-3022] suspending/resuming transactions, e.g. with Springs Propagation.REQUIRES_NEW.
",Bug
AMQ-3403,12514456,,"The documentation page for the maven activemq performance test is outdated. It states for instance that there is currently no released version while maven central repo contains version 5.5.0 and 5.6-SNAPSHOT (ok, that second one is no release, but still...)
Another thing is that the pom found in ""activemq-perftest directory from the sandbox repo"" does not deliver on the promises stated in the documentation :) The parent in the mentioned pom is 5.2-SNAPSHOT.
",Bug
AMQ-3447,12518599,,"In MessageListenerServlet.java

          if (message == null && client.getListener().getUndeliveredMessages().size() == 0) {
                Continuation continuation = ContinuationSupport.getContinuation(request);
                
                if (continuation.isExpired()) {
                    response.setStatus(HttpServletResponse.SC_OK);
                    StringWriter swriter = new StringWriter();
                    PrintWriter writer = new PrintWriter(swriter);
                    writer.println(""<ajax-response>"");
                    writer.print(""</ajax-response>"");

                    writer.flush();
                    String m = swriter.toString();
                    response.getWriter().println(m); 
                    
                    return;
                }

                continuation.setTimeout(timeout);
                continuation.suspend();
                LOG.debug( ""Suspending continuation "" + continuation );
                
                // Fetch the listeners
                AjaxListener listener = client.getListener();
                listener.access();

                // register this continuation with our listener.
                listener.setContinuation(continuation);
                
                return;
            }

Based on above code, the continuation is expected to be expired after given timeout when there is no message available for the ajax client and the ajax client will then receive an ""empty"" message. However based on the servlet 3 Continuation implementation in jetty (Servlet3Continuation.java) the only place where the continuation is set to expire is within the below method (there is a bug in this method as well). 

public void addContinuationListener(final ContinuationListener listener)
    {
        AsyncListener wrapped = new AsyncListener()
        {
            public void onComplete(final AsyncEvent event) throws IOException
            {
                listener.onComplete(Servlet3Continuation.this);
            }

            public void onError(AsyncEvent event) throws IOException
            {
                listener.onComplete(Servlet3Continuation.this);
            }

            public void onStartAsync(AsyncEvent event) throws IOException
            {
                event.getAsyncContext().addListener(this);
            }

            public void onTimeout(AsyncEvent event) throws IOException
            {
                _expired=true;
                listener.onTimeout(Servlet3Continuation.this);
            }
        };
        
        if (_context==null)
            _context.addListener(wrapped);
        else
            _listeners.add(wrapped);
    }

Without adding a listener the continuation will never be set to expire, therefore the ""empty"" response is never sent back to the client, the connection from the client is resumed and suspended over and over again until the connection is aborted by client or there is a message available.",Bug
AMQ-4370,12636844,,"We have a problem related a Leak and the a possible Deadlock, we know that we are using versions outdated. We are in production with this version and we need know the correct version to upgrade where the bug is fixed. Or a new bug found?

We found this bugs: Leak: AMQ-3214 - Deadlock: AMQ-4274

LEAK:

Exception in thread ""ActiveMQ Transport: tcp:///10.80.30.150:60721"" java.lang.OutOfMemoryError: getNewTla
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:211)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bec3"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11124"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bbd6"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11122"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""ActiveMQ Session Task-11123"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.CopyOnWriteArrayList.iterator(CopyOnWriteArrayList.java:925)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:190)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1b3e5"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)
Exception in thread ""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@1ff1bb00"" java.lang.OutOfMemoryError: getNewTla
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:584)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
        at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
        at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
        at java.util.concurrent.ThreadPoolExecutor.workerCanExit(ThreadPoolExecutor.java:971)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:950)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:662)




DEADLOCK:


Chain 1:
""Camel (MainframeAdapterContext) thread #3 - JmsConsumer[bam_input_temp]"" id=25 idx=0xa4 tid=6373 waiting for java/lang/Object@0x820d0a98 held by:
""Camel (MainframeAdapterContext) thread #25 - JmsConsumer[bam_input_temp]"" id=47 idx=0xfc tid=6399 waiting for java/util/concurrent/locks/ReentrantLock$NonfairSync@0x824288d8 held by:
""Camel (MainframeAdapterContext) thread #92 - JmsConsumer[bam_input_temp]"" id=114 idx=0x208 tid=6496 (waiting on notification)

""Camel (MainframeAdapterContext) thread #3 - JmsConsumer[bam_input_temp]"" id=25 idx=0xa4 tid=6373 prio=5 alive, blocked, native_blocked, daemon
    -- Blocked trying to get lock: java/lang/Object@0x820d0a98[fat lock]
    at jrockit/vm/Threads.waitForUnblockSignal()V(Native Method)
    at jrockit/vm/Locks.fatLockBlockOrSpin(Locks.java:1411)[optimized]
    at jrockit/vm/Locks.lockFat(Locks.java:1512)[optimized]
    at jrockit/vm/Locks.monitorEnterSecondStageHard(Locks.java:1054)[optimized]
    at jrockit/vm/Locks.monitorEnterSecondStage(Locks.java:1005)[optimized]
    at jrockit/vm/Locks.monitorEnter(Locks.java:2179)[optimized]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1097)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:958)
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

""Camel (MainframeAdapterContext) thread #25 - JmsConsumer[bam_input_temp]"" id=47 idx=0xfc tid=6399 prio=5 alive, parked, native_blocked, daemon
    -- Parking to wait for: java/util/concurrent/locks/ReentrantLock$NonfairSync@0x824288d8
    at jrockit/vm/Locks.park0(J)V(Native Method)
    at jrockit/vm/Locks.park(Locks.java:2230)[inlined]
    at jrockit/proxy/sun/misc/Unsafe.park(Unsafe.java:616)[inlined]
    at java/util/concurrent/locks/LockSupport.park(LockSupport.java:156)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)[inlined]
    at java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)[inlined]
    at java/util/concurrent/locks/ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)[optimized]
    at java/util/concurrent/locks/ReentrantLock.lock(ReentrantLock.java:262)[inlined]
    at org/apache/activemq/transport/MutexTransport.oneway(MutexTransport.java:66)[optimized]
    at org/apache/activemq/transport/ResponseCorrelator.oneway(ResponseCorrelator.java:60)[optimized]
    at org/apache/activemq/ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1275)[inlined]
    at org/apache/activemq/ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1269)[optimized]
    at org/apache/activemq/ActiveMQSession.doClose(ActiveMQSession.java:644)
    at org/apache/activemq/ActiveMQSession.close(ActiveMQSession.java:634)
    at org/apache/activemq/pool/SessionPool.destroyObject(SessionPool.java:91)
    at org/apache/commons/pool/impl/GenericObjectPool.destroy(GenericObjectPool.java:1330)
    at org/apache/commons/pool/impl/GenericObjectPool.clear(GenericObjectPool.java:1315)
    at org/apache/commons/pool/impl/GenericObjectPool.close(GenericObjectPool.java:1482)
    ^-- Holding lock: org/apache/commons/pool/impl/GenericObjectPool@0x8220a8b0[thin lock]
    at org/apache/activemq/pool/SessionPool.close(SessionPool.java:47)
    at org/apache/activemq/pool/ConnectionPool.close(ConnectionPool.java:133)
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[recursive]
    at org/apache/activemq/pool/ConnectionPool.expiredCheck(ConnectionPool.java:184)[optimized]
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[recursive]
    at org/apache/activemq/pool/ConnectionPool.decrementReferenceCount(ConnectionPool.java:157)[inlined]
    at org/apache/activemq/pool/PooledConnection.close(PooledConnection.java:80)[optimized]
    ^-- Holding lock: org/apache/activemq/pool/ConnectionPool@0x8220a858[thin lock]
    at org/springframework/jms/connection/ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:80)[optimized]
    at org/springframework/jms/listener/AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:385)
    ^-- Holding lock: java/lang/Object@0x820d0a98[fat lock]
    at org/springframework/jms/listener/DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)
    at org/springframework/jms/listener/DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)
    ^-- Holding lock: java/lang/Object@0x820d0b18[thin lock]
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

""Camel (MainframeAdapterContext) thread #92 - JmsConsumer[bam_input_temp]"" id=114 idx=0x208 tid=6496 prio=5 alive, waiting, native_blocked, daemon
    -- Waiting for notification on: java/lang/Object@0x822fc808[fat lock]
    at jrockit/vm/Threads.waitForNotifySignal(JLjava/lang/Object;)Z(Native Method)
    at jrockit/vm/Locks.wait(Locks.java:1973)[inlined]
    at org/apache/activemq/transport/failover/FailoverTransport.oneway(FailoverTransport.java:562)[optimized]
    ^-- Lock released while waiting: java/lang/Object@0x822fc808[fat lock]
    at org/apache/activemq/transport/MutexTransport.oneway(MutexTransport.java:68)[optimized]
    at org/apache/activemq/transport/ResponseCorrelator.oneway(ResponseCorrelator.java:60)[optimized]
    at org/apache/activemq/ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1275)[inlined]
    at org/apache/activemq/ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1269)[inlined]
    at org/apache/activemq/ActiveMQSession.send(ActiveMQSession.java:1769)[inlined]
    at org/apache/activemq/ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:277)[inlined]
    at org/apache/activemq/ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:212)[inlined]
    at org/apache/activemq/pool/PooledProducer.send(PooledProducer.java:74)[inlined]
    at org/apache/activemq/pool/PooledProducer.send(PooledProducer.java:63)[optimized]
    ^-- Holding lock: java/lang/Object@0x81a712d0[thin lock]
    ^-- Holding lock: org/apache/activemq/ActiveMQMessageProducer@0x820de070[biased lock]
    at org/springframework/jms/core/JmsTemplate.doSend(JmsTemplate.java:589)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.doSend(JmsConfiguration.java:277)[optimized]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.doSendToDestination(JmsConfiguration.java:216)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.access$100(JmsConfiguration.java:158)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate$3.doInJms(JmsConfiguration.java:192)[optimized]
    at org/springframework/jms/core/JmsTemplate.execute(JmsTemplate.java:466)[inlined]
    at org/apache/camel/component/jms/JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:189)[inlined]
    at org/apache/camel/component/jms/JmsProducer.doSend(JmsProducer.java:398)[inlined]
    at org/apache/camel/component/jms/JmsProducer.processInOnly(JmsProducer.java:352)[inlined]
    at org/apache/camel/component/jms/JmsProducer.process(JmsProducer.java:132)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[optimized]
    at org/apache/camel/processor/RoutingSlip$2.doInAsyncProducer(RoutingSlip.java:287)[inlined]
    at org/apache/camel/impl/ProducerCache.doInAsyncProducer(ProducerCache.java:298)[inlined]
    at org/apache/camel/processor/RoutingSlip.processExchange(RoutingSlip.java:280)[inlined]
    at org/apache/camel/processor/RoutingSlip.doRoutingSlip(RoutingSlip.java:205)[inlined]
    at org/apache/camel/processor/RoutingSlip.process(RoutingSlip.java:135)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/management/InstrumentationProcessor.process(InstrumentationProcessor.java:73)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/processor/interceptor/TraceInterceptor.process(TraceInterceptor.java:91)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/RedeliveryErrorHandler.processErrorHandler(RedeliveryErrorHandler.java:334)[inlined]
    at org/apache/camel/processor/RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:220)[optimized]
    at org/apache/camel/processor/RouteContextProcessor.processNext(RouteContextProcessor.java:45)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/processor/interceptor/DefaultChannel.process(DefaultChannel.java:303)[optimized]
    at org/apache/camel/processor/RouteContextProcessor.processNext(RouteContextProcessor.java:45)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[optimized]
    at org/apache/camel/processor/UnitOfWorkProcessor.processAsync(UnitOfWorkProcessor.java:150)[inlined]
    at org/apache/camel/processor/UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:117)[optimized]
    at org/apache/camel/processor/RouteInflightRepositoryProcessor.processNext(RouteInflightRepositoryProcessor.java:48)[optimized]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:73)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.processNext(DelegateAsyncProcessor.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:90)[inlined]
    at org/apache/camel/management/InstrumentationProcessor.process(InstrumentationProcessor.java:73)[optimized]
    at org/apache/camel/util/AsyncProcessorHelper.process(AsyncProcessorHelper.java:99)[inlined]
    at org/apache/camel/processor/DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:86)[optimized]
    at org/apache/camel/component/jms/EndpointMessageListener.onMessage(EndpointMessageListener.java:104)[optimized]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:560)[inlined]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:498)[inlined]
    at org/springframework/jms/listener/AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)[optimized]
    at org/springframework/jms/listener/AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)[optimized]
    at org/springframework/jms/listener/AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)[inlined]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[optimized]
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    at org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    at java/util/concurrent/ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java/util/concurrent/ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java/lang/Thread.run(Thread.java:662)
    at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
    -- end of trace

",Bug
AMQ-3821,12553398,,"Hello,
There seems to be a bug in activemq-admin tool.

I'm using the command:-
activemq-admin query  --view Destination -xQTopic=ActiveMQ.Advisory.* --jmxurl service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi

I have a job which run this command every hour and do some processing over the output. The problem is the destinations reported by the tool are sometimes false.

Occasionally, I'm getting these kind of destinations in the output which I thoroughly checked that is a connection ID and absolutely not(and never was) a destination.

Destination = ID_myhost.com-57923-1335027404174-2_49303_1

Also, I am sometimes getting 1 or 2 Advisory topics in the output. Please check if this is a bug in the view option of the activemq-admin utility or goes somewhere deep in the java code.

Thanks,
Bhanu",Bug
AMQ-3809,12551200,,"I have a simple consumer application which connects to the broker using failover url. The consumer uses Message listener to asynchronously listen to messages. Whenever i kill my primary broker, I get an EOF exception(which is expected), the consumer tries to connect to failover broker but before it could finish the reconnect, it shuts down. 
My simple producer connecting with the same failover url never dies and successfully connects to failover broker.

What is going on here?

Posting the snippet with which the consumer dies:-

2012-04-17 06:45:25,771 WARN  org.apache.activemq.transport.failover.FailoverTransport - Transport (host1/10.240.170.28:61616) failed to tcp://host1:61616 , attempting to automatically reconnect due to: java.io.EOFException
2012-04-17 06:45:25,772 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Transport failed with the following exception:
java.io.EOFException
        at java.io.DataInputStream.readInt(DataInputStream.java:392)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:227)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
        at java.lang.Thread.run(Thread.java:722)
2012-04-17 06:45:25,774 DEBUG org.apache.activemq.transport.failover.FailoverTransport - urlList connectionList:[tcp://host2:61616, tcp://host1:61616], from: [tcp://host1:61616, tcp://host2:61616]
2012-04-17 06:45:25,774 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Attempting connect to: tcp://host2:61616
[20120417 06:45:25.776 EDT (Shutdown-ActiveMQConsumer) ActiveMQConsumer#stop INFO] Stopping the consumer...
2012-04-17 06:45:26,242 DEBUG org.apache.activemq.transport.failover.FailoverTransport - Stopped.

",Bug
AMQ-3952,12600675,,"I'm using 
org.apache.activemq.broker.jmx.DestinationView.resetStatistics() 
to reset statistics I get from the JMX Java API, but I was expected that only the ""statistic numbers"" would be reseted, and not the state of my queue (number of pending messages for instance) 

I'm wondering why the super.reset() method is called in org.apache.activemq.broker.region.DestinationStatistics.reset() method. 

{code} 
 public void reset() { 
        if (this.isDoReset()) { 
            super.reset(); 
            enqueues.reset(); 
            dequeues.reset(); 
            dispatched.reset(); 
            inflight.reset(); 
            expired.reset(); 
        } 
    } 
{code} 
Problem is, after a reset, if I lookup some queue size, I get 0, even if there are still some message pending to be dequeued. The ""number of pending message"" is apparently reseted in the ""super.reset()"" call. 

",Bug
AMQ-3751,12544824,,"On http://activemq.apache.org/activemq-performance-module-users-manual.html the configuration key ""factory.username"" should read ""factory.userName""

As is, a broker configured with LDAP security logs the following error when a consumer is run through the perf tool using factory.username:
 WARN | Failed to add Connection ID:machineName.local-49773-1330624897725-2:2, reason: java.lang.SecurityException: User name [null] or password is invalid. 

Changing the configuration key resolves the issue",Bug
AMQ-3726,12543086,,"When using the link to the JavaDocs for ActiveMQ from the banner of the ActiveMQ site it points to the following URL:
http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/ and loads the ActiveMQ :: Core 5.5.0 API documentation.

Simply switching the version to 5.5.1 results in a 404 Not Found.  Can this be updated to 5.5.1 JavaDocs?",Bug
AMQ-3608,12532714,,"In our Spring application, we are receiving JMS messages using an SessionAwareMessageListener, processing these messages and then sending the messages using a JMSTemplate. It hangs after a couple of seconds after startup, and to me it looks like it is the client that has the issue. 

EDIT: it looks like a resource issue and not a deadlock issue. The deafult setup runs into a hang situation if not granted enough resources. After providing with enough resources it runs fine. (increasing memoryUsage and max memory settings)



The application stack dump is as follows: (After it the ActiveMQ dump follows)



Full thread dump Java HotSpot(TM) 64-Bit Server VM (20.4-b02-402 mixed mode):

""InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@5da3e311"" daemon prio=5 tid=7f8840364800 nid=0x118268000 waiting on condition [118267000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f5197160> (a java.util.concurrent.SynchronousQueue$TransferStack)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:424)
	at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:323)
	at java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:874)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:945)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:680)

""Attach Listener"" daemon prio=9 tid=7f8845940000 nid=0x1185df000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""QueueListener-10"" prio=5 tid=7f8840363800 nid=0x11a3e4000 in Object.wait() [11a3e3000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f50089c8> (a java.lang.Object)
	at org.apache.activemq.SimplePriorityMessageDispatchChannel.dequeue(SimplePriorityMessageDispatchChannel.java:89)
	- locked <7f50089c8> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:452)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:577)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:429)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-9"" prio=5 tid=7f8840363000 nid=0x11a2e1000 waiting on condition [11a2e0000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f4507e48> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:707)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:575)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:481)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-8"" prio=5 tid=7f883f824000 nid=0x11a1de000 waiting for monitor entry [11a1dc000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <7f510d808> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1863)
	at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:106)
	at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:928)
	at org.springframework.jms.core.JmsTemplate.doCreateProducer(JmsTemplate.java:971)
	at org.springframework.jms.core.JmsTemplate.createProducer(JmsTemplate.java:952)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:563)
	at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543)
	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620)
	at no.nsb.kundemaster.biz.jms.JMSSendCacheUpdateMessage.sendUpdateCacheMessage(JMSSendCacheUpdateMessage.java:20)
	at no.nsb.kundemaster.biz.grind.KMGrinder$1.doInTransactionWithoutResult(KMGrinder.java:44)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at no.nsb.kundemaster.biz.grind.KMGrinder.updateKMDatabase(KMGrinder.java:39)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:41)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:1)
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:330)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-7"" prio=5 tid=7f8841804800 nid=0x11a0db000 waiting for monitor entry [11a0d9000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <7f510d808> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1863)
	at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:106)
	at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:928)
	at org.springframework.jms.core.JmsTemplate.doCreateProducer(JmsTemplate.java:971)
	at org.springframework.jms.core.JmsTemplate.createProducer(JmsTemplate.java:952)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:563)
	at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543)
	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620)
	at no.nsb.kundemaster.biz.jms.JMSSendCacheUpdateMessage.sendUpdateCacheMessage(JMSSendCacheUpdateMessage.java:20)
	at no.nsb.kundemaster.biz.grind.KMGrinder$1.doInTransactionWithoutResult(KMGrinder.java:44)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at no.nsb.kundemaster.biz.grind.KMGrinder.updateKMDatabase(KMGrinder.java:39)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:41)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:1)
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:330)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-6"" prio=5 tid=7f8840815000 nid=0x119fd8000 waiting on condition [119fd7000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f4542de0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:707)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:575)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:481)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-5"" prio=5 tid=7f883f813000 nid=0x119ed5000 waiting on condition [119ed4000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f45ea1e0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:707)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:575)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:481)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-4"" prio=5 tid=7f883f276800 nid=0x119dd2000 waiting for monitor entry [119dd0000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <7f510d808> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1863)
	at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:106)
	at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:928)
	at org.springframework.jms.core.JmsTemplate.doCreateProducer(JmsTemplate.java:971)
	at org.springframework.jms.core.JmsTemplate.createProducer(JmsTemplate.java:952)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:563)
	at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543)
	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620)
	at no.nsb.kundemaster.biz.jms.JMSSendCacheUpdateMessage.sendUpdateCacheMessage(JMSSendCacheUpdateMessage.java:20)
	at no.nsb.kundemaster.biz.grind.KMGrinder$1.doInTransactionWithoutResult(KMGrinder.java:44)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at no.nsb.kundemaster.biz.grind.KMGrinder.updateKMDatabase(KMGrinder.java:39)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:41)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:1)
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:330)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-3"" prio=5 tid=7f884031f800 nid=0x119ccf000 waiting for monitor entry [119ccd000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- waiting to lock <7f510d808> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)
	at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1863)
	at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:106)
	at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:928)
	at org.springframework.jms.core.JmsTemplate.doCreateProducer(JmsTemplate.java:971)
	at org.springframework.jms.core.JmsTemplate.createProducer(JmsTemplate.java:952)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:563)
	at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543)
	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620)
	at no.nsb.kundemaster.biz.jms.JMSSendCacheUpdateMessage.sendUpdateCacheMessage(JMSSendCacheUpdateMessage.java:20)
	at no.nsb.kundemaster.biz.grind.KMGrinder$1.doInTransactionWithoutResult(KMGrinder.java:44)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at no.nsb.kundemaster.biz.grind.KMGrinder.updateKMDatabase(KMGrinder.java:39)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:41)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:1)
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:330)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""http-8080-Acceptor-0"" daemon prio=5 tid=7f8840318000 nid=0x119bcc000 runnable [119bcb000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:408)
	- locked <7f4e7e798> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:462)
	at java.net.ServerSocket.accept(ServerSocket.java:430)
	at org.apache.tomcat.util.net.DefaultServerSocketFactory.acceptSocket(DefaultServerSocketFactory.java:61)
	at org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run(JIoEndpoint.java:352)
	at java.lang.Thread.run(Thread.java:680)

""ContainerBackgroundProcessor[StandardEngine[localEngine]]"" daemon prio=5 tid=7f883e30c000 nid=0x119ac9000 waiting on condition [119ac8000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1579)
	at java.lang.Thread.run(Thread.java:680)

""QueueListener-2"" prio=5 tid=7f88401b1800 nid=0x1199c6000 waiting on condition [1199c5000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7f46d1dd8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1284)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:707)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:575)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:481)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""QueueListenerTest-1"" prio=5 tid=7f88410e1800 nid=0x11929d000 in Object.wait() [11929c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4fa51a0> (a java.lang.Object)
	at org.apache.activemq.SimplePriorityMessageDispatchChannel.dequeue(SimplePriorityMessageDispatchChannel.java:89)
	- locked <7f4fa51a0> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:452)
	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:577)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:429)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=5 tid=7f883c66b800 nid=0x11919a000 runnable [119199000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:576)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:561)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:227)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQConnection[ID:Knut-Erik-Borgens-MacBook-Pro.local-60907-1322223456368-0:2] Scheduler"" daemon prio=5 tid=7f88411ee800 nid=0x118f3e000 in Object.wait() [118f3d000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4e33810> (a java.util.TaskQueue)
	at java.lang.Object.wait(Object.java:485)
	at java.util.TimerThread.mainLoop(Timer.java:483)
	- locked <7f4e33810> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""InactivityMonitor WriteCheck"" daemon prio=5 tid=7f8842d97000 nid=0x118e3b000 in Object.wait() [118e3a000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4f93728> (a java.util.TaskQueue)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7f4f93728> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""InactivityMonitor ReadCheck"" daemon prio=5 tid=7f8842bf6000 nid=0x118b64000 in Object.wait() [118b63000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4ebc658> (a java.util.TaskQueue)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7f4ebc658> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""QueueListener-1"" prio=5 tid=7f8841299000 nid=0x118a61000 runnable [118a5f000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:136)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.write(TcpBufferedOutputStream.java:96)
	at java.io.DataOutputStream.write(DataOutputStream.java:90)
	- locked <7f5176628> (a java.io.DataOutputStream)
	at org.apache.activemq.openwire.v7.BaseDataStreamMarshaller.tightMarshalByteSequence2(BaseDataStreamMarshaller.java:431)
	at org.apache.activemq.openwire.v7.MessageMarshaller.tightMarshal2(MessageMarshaller.java:180)
	at org.apache.activemq.openwire.v7.ActiveMQMessageMarshaller.tightMarshal2(ActiveMQMessageMarshaller.java:89)
	at org.apache.activemq.openwire.v7.ActiveMQTextMessageMarshaller.tightMarshal2(ActiveMQTextMessageMarshaller.java:89)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:237)
	- locked <7f4f958b0> (a org.apache.activemq.openwire.OpenWireFormat)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:181)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:254)
	- locked <7f510d610> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <7f510d808> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)
	at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1744)
	- locked <7f4eddf10> (a java.lang.Object)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:592)
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:569)
	at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:546)
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)
	at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:543)
	at org.springframework.jms.core.JmsTemplate.convertAndSend(JmsTemplate.java:620)
	at no.nsb.kundemaster.biz.jms.JMSSendCacheUpdateMessage.sendUpdateCacheMessage(JMSSendCacheUpdateMessage.java:20)
	at no.nsb.kundemaster.biz.grind.KMGrinder$1.doInTransactionWithoutResult(KMGrinder.java:44)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:33)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:130)
	at no.nsb.kundemaster.biz.grind.KMGrinder.updateKMDatabase(KMGrinder.java:39)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:41)
	at no.nsb.kundemaster.biz.jms.QueueListenerBiz.onMessage(QueueListenerBiz.java:1)
	at org.springframework.jms.listener.adapter.MessageListenerAdapter.onMessage(MessageListenerAdapter.java:330)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:535)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:495)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Transport: tcp://localhost/127.0.0.1:61616"" prio=5 tid=7f8841344800 nid=0x1187c5000 runnable [1187c4000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:576)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:561)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:227)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQConnection[ID:Knut-Erik-Borgens-MacBook-Pro.local-60907-1322223456368-0:1] Scheduler"" daemon prio=5 tid=7f8841172800 nid=0x118165000 in Object.wait() [118164000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4f87c58> (a java.util.TaskQueue)
	at java.lang.Object.wait(Object.java:485)
	at java.util.TimerThread.mainLoop(Timer.java:483)
	- locked <7f4f87c58> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""Poller SunPKCS11-Darwin"" daemon prio=1 tid=7f8840020800 nid=0x1184dc000 waiting on condition [1184db000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at sun.security.pkcs11.SunPKCS11$TokenPoller.run(SunPKCS11.java:692)
	at java.lang.Thread.run(Thread.java:680)

""com.google.inject.internal.util.$Finalizer"" daemon prio=5 tid=7f88401b3000 nid=0x117f63000 in Object.wait() [117f62000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f44e1078> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <7f44e1078> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at com.google.inject.internal.util.$Finalizer.run(Finalizer.java:144)
	at java.lang.Thread.run(Thread.java:680)

""Low Memory Detector"" daemon prio=5 tid=7f883f00b800 nid=0x117a3e000 runnable [00000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread1"" daemon prio=9 tid=7f883f00a800 nid=0x11793b000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread0"" daemon prio=9 tid=7f883f00a000 nid=0x117838000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=9 tid=7f883f009000 nid=0x117735000 runnable [00000000]
   java.lang.Thread.State: RUNNABLE

""Surrogate Locker Thread (Concurrent GC)"" daemon prio=5 tid=7f883f008000 nid=0x117632000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=8 tid=7f883c13f800 nid=0x117370000 in Object.wait() [11736f000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f44e10a8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <7f44e10a8> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=7f883c13f000 nid=0x11726d000 in Object.wait() [11726c000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f44e10c0> (a java.lang.ref.Reference$Lock)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <7f44e10c0> (a java.lang.ref.Reference$Lock)

""main"" prio=5 tid=7f883c001800 nid=0x10f4f7000 in Object.wait() [10f4f5000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7f4ebc688> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.codehaus.mojo.tomcat.AbstractRunMojo.waitIndefinitely(AbstractRunMojo.java:622)
	- locked <7f4ebc688> (a java.lang.Object)
	at org.codehaus.mojo.tomcat.AbstractRunMojo.execute(AbstractRunMojo.java:258)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:319)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)

""VM Thread"" prio=9 tid=7f883c13a000 nid=0x11716a000 runnable 

""Gang worker#0 (Parallel GC Threads)"" prio=9 tid=7f883c002800 nid=0x112830000 runnable 

""Gang worker#1 (Parallel GC Threads)"" prio=9 tid=7f883c003800 nid=0x112933000 runnable 

""Gang worker#2 (Parallel GC Threads)"" prio=9 tid=7f883c004000 nid=0x112a36000 runnable 

""Gang worker#3 (Parallel GC Threads)"" prio=9 tid=7f883c004800 nid=0x112b39000 runnable 

""Gang worker#4 (Parallel GC Threads)"" prio=9 tid=7f883c005000 nid=0x112c3c000 runnable 

""Gang worker#5 (Parallel GC Threads)"" prio=9 tid=7f883c006000 nid=0x112d3f000 runnable 

""Gang worker#6 (Parallel GC Threads)"" prio=9 tid=7f883c006800 nid=0x112e42000 runnable 

""Gang worker#7 (Parallel GC Threads)"" prio=9 tid=7f883c007000 nid=0x112f45000 runnable 

""Concurrent Mark-Sweep GC Thread"" prio=9 tid=7f883c0e4800 nid=0x116e10000 runnable 
""Gang worker#0 (Parallel CMS Threads)"" prio=9 tid=7f883c0e3000 nid=0x11640a000 runnable 

""Gang worker#1 (Parallel CMS Threads)"" prio=9 tid=7f883c0e4000 nid=0x11650d000 runnable 

""VM Periodic Task Thread"" prio=10 tid=7f883f01d000 nid=0x117b41000 waiting on condition 

""Exception Catcher Thread"" prio=10 tid=7f883c002000 nid=0x10f659000 runnable 
JNI global references: 1547




*The ActiveMQ stack dump is as follows*:

""Attach Listener"" daemon prio=9 tid=7f99ee8e7000 nid=0x11595a000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""ActiveMQ Transport: tcp:///127.0.0.1:60909"" daemon prio=8 tid=7f99efbdc000 nid=0x115f6c000 runnable [115f6b000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:576)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:561)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:227)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Connection Dispatcher: /127.0.0.1:60909"" daemon prio=5 tid=7f99efbdb000 nid=0x1150fc000 in Object.wait() [1150fb000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ef12f380> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""InactivityMonitor WriteCheck"" daemon prio=8 tid=7f99eecb1000 nid=0x113ec6000 in Object.wait() [113ec5000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ef1b9e90> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""InactivityMonitor ReadCheck"" daemon prio=8 tid=7f99eecb1800 nid=0x11339d000 in Object.wait() [11339c000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ef1b9ea8> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""ActiveMQ Transport: tcp:///127.0.0.1:60908"" daemon prio=8 tid=7f99f318f800 nid=0x113dc3000 in Object.wait() [113dc2000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.apache.activemq.usage.Usage.waitForSpace(Usage.java:97)
	- locked <7ed333448> (a java.lang.Object)
	at org.apache.activemq.broker.region.BaseDestination.waitForSpace(BaseDestination.java:589)
	at org.apache.activemq.broker.region.BaseDestination.waitForSpace(BaseDestination.java:573)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:635)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:227)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:458)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:306)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <7ef1b9ed8> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Connection Dispatcher: /127.0.0.1:60908"" daemon prio=5 tid=7f99f33aa800 nid=0x113bbd000 in Object.wait() [113bbc000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ef12f398> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.Consumer.Queue.Queue.test"" daemon prio=5 tid=7f99f33a9800 nid=0x1169cf000 in Object.wait() [1169ce000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7eed4f9d8> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Queue:Queue.test"" daemon prio=5 tid=7f99f33a8000 nid=0x116275000 in Object.wait() [116274000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7eed4f9f0> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.Producer.Queue.Queue.cache_update_admin"" daemon prio=5 tid=7f99eab13000 nid=0x11606f000 in Object.wait() [11606e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ee37fb10> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.Consumer.Queue.Queue.imported"" daemon prio=5 tid=7f99eee61800 nid=0x115d66000 in Object.wait() [115d65000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ee382920> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""ConcurrentQueueStoreAndDispatch"" daemon prio=8 tid=7f99eaa3d800 nid=0x1166c6000 waiting on condition [1166c5000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed435390> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:680)

""Topic  ActiveMQ.Advisory.Producer.Queue.Queue.imported"" daemon prio=5 tid=7f99f32f6000 nid=0x1165c3000 in Object.wait() [1165c2000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed93efc0> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Queue:Queue.imported"" daemon prio=5 tid=7f99ee8e5800 nid=0x1163bd000 in Object.wait() [1163bc000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed93efd8> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.MessageDLQd.Queue.Queue.imported"" daemon prio=5 tid=7f99f2b42000 nid=0x1164c0000 in Object.wait() [1164bf000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed8391c0> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""ActiveMQ Session: ID:Knut-Erik-Borgens-MacBook-Pro.local-51346-1322120426223-2:1:1"" prio=7 tid=7f99f4fd5800 nid=0x115a5d000 in Object.wait() [115a5c000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed778440> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""ActiveMQConnection[ID:Knut-Erik-Borgens-MacBook-Pro.local-51346-1322120426223-2:1] Scheduler"" daemon prio=5 tid=7f99eee4a800 nid=0x115502000 in Object.wait() [115501000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at java.util.TimerThread.mainLoop(Timer.java:483)
	- locked <7ed774c20> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""VMTransport: vm://localhost#0"" daemon prio=5 tid=7f99eecc3800 nid=0x11350e000 in Object.wait() [11350d000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed7792f0> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""ActiveMQ Connection Dispatcher: vm://localhost#0"" daemon prio=5 tid=7f99f4ecd000 nid=0x1153ff000 in Object.wait() [1153fe000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed778870> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""VMTransport: vm://localhost#1"" daemon prio=5 tid=7f99f4bf2800 nid=0x1152fc000 in Object.wait() [1152fb000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed778458> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Usage Async Task"" daemon prio=5 tid=7f99ea8ca000 nid=0x115857000 waiting on condition [115856000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7eceea3f0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:399)
	at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:947)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:680)

""Topic  ActiveMQ.Advisory.Consumer.Queue.Queue.cache_update_admin"" daemon prio=5 tid=7f99ee8e3000 nid=0x115754000 in Object.wait() [115753000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7ed59c870> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed59c870> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.Connection"" daemon prio=5 tid=7f99ea8c9800 nid=0x115651000 in Object.wait() [115650000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7ed587fd8> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed587fd8> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""HashSessionScavenger-2"" daemon prio=5 tid=7f99eaa18000 nid=0x114ef6000 in Object.wait() [114ef5000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ed587ff0> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""Timer-1"" prio=5 tid=7f99ea96a000 nid=0x114df3000 in Object.wait() [114df2000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ed588020> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""HashSessionScavenger-1"" daemon prio=5 tid=7f99ea967800 nid=0x114cf0000 in Object.wait() [114cef000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ed588050> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""Timer-0"" prio=5 tid=7f99ec584000 nid=0x114bed000 in Object.wait() [114bec000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ed36a2a0> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""HashSessionScavenger-0"" daemon prio=5 tid=7f99ea95e000 nid=0x114aea000 in Object.wait() [114ae9000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ed36a270> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""qtp543998628-36"" prio=5 tid=7f99ea951000 nid=0x1149e7000 waiting on condition [1149e6000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-35"" prio=5 tid=7f99ea950800 nid=0x1148e4000 waiting on condition [1148e3000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-34"" prio=5 tid=7f99ea94f800 nid=0x1147e1000 waiting on condition [1147e0000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-33"" prio=5 tid=7f99ea94f000 nid=0x1146de000 waiting on condition [1146dd000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-32"" prio=5 tid=7f99ea94e000 nid=0x1145db000 waiting on condition [1145da000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-31"" prio=5 tid=7f99ea94d800 nid=0x1144d8000 waiting on condition [1144d7000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-30"" prio=5 tid=7f99ea94c800 nid=0x1143d5000 waiting on condition [1143d4000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7ed36a240> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at org.eclipse.jetty.util.BlockingArrayQueue.poll(BlockingArrayQueue.java:320)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:465)
	at java.lang.Thread.run(Thread.java:680)

""qtp543998628-29 - Acceptor0 SelectChannelConnector@0.0.0.0:8161"" prio=5 tid=7f99ea8c8800 nid=0x1142d2000 runnable [1142d1000]
   java.lang.Thread.State: RUNNABLE
	at sun.nio.ch.KQueueArrayWrapper.kevent0(Native Method)
	at sun.nio.ch.KQueueArrayWrapper.poll(KQueueArrayWrapper.java:136)
	at sun.nio.ch.KQueueSelectorImpl.doSelect(KQueueSelectorImpl.java:69)
	at sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:69)
	- locked <7ed58e618> (a sun.nio.ch.Util$2)
	- locked <7ed58e600> (a java.util.Collections$UnmodifiableSet)
	- locked <7ed53d420> (a sun.nio.ch.KQueueSelectorImpl)
	at sun.nio.ch.SelectorImpl.select(SelectorImpl.java:80)
	at org.eclipse.jetty.io.nio.SelectorManager$SelectSet.doSelect(SelectorManager.java:480)
	at org.eclipse.jetty.io.nio.SelectorManager.doSelect(SelectorManager.java:193)
	at org.eclipse.jetty.server.nio.SelectChannelConnector.accept(SelectChannelConnector.java:134)
	at org.eclipse.jetty.server.AbstractConnector$Acceptor.run(AbstractConnector.java:793)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Transport Server: tcp://0.0.0.0:61616"" daemon prio=9 tid=7f99ea8c8000 nid=0x1141cf000 runnable [1141ce000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:408)
	- locked <7ed3665a0> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:462)
	at java.net.ServerSocket.accept(ServerSocket.java:430)
	at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:280)
	at java.lang.Thread.run(Thread.java:680)

""ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616"" daemon prio=8 tid=7f99ea88c800 nid=0x1140cc000 waiting on condition [1140cb000]
   java.lang.Thread.State: TIMED_WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <7eceac968> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:196)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2025)
	at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:424)
	at org.apache.activemq.transport.tcp.TcpTransportServer$1.run(TcpTransportServer.java:352)
	at java.lang.Thread.run(Thread.java:680)

""Queue:Queue.cache_update_admin"" daemon prio=5 tid=7f99ec487800 nid=0x113fc9000 in Object.wait() [113fc8000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed306330> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""Topic  ActiveMQ.Advisory.Queue"" daemon prio=5 tid=7f99ec454800 nid=0x113cc0000 in Object.wait() [113cbf000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7ed3062d0> (a java.lang.Object)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:111)
	- locked <7ed3062d0> (a java.lang.Object)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)

""ActiveMQ Broker[localhost] Scheduler"" daemon prio=5 tid=7f99ef176800 nid=0x113aba000 in Object.wait() [113ab9000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7eceac908> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""ActiveMQ Data File Writer"" daemon prio=10 tid=7f99ee8e0000 nid=0x1139b7000 in Object.wait() [1139b6000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:312)
	- locked <7ed4f7670> (a org.apache.kahadb.journal.DataFileAppender$1)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)

""ActiveMQ Journal Checkpoint Worker"" daemon prio=5 tid=7f99ec392800 nid=0x113859000 waiting on condition [113858000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:296)

""KahaDB Scheduler"" daemon prio=5 tid=7f99ec303800 nid=0x11362e000 in Object.wait() [11362d000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.util.TimerThread.mainLoop(Timer.java:509)
	- locked <7ece37900> (a java.util.TaskQueue)
	at java.util.TimerThread.run(Timer.java:462)

""RMI TCP Accept-0"" daemon prio=5 tid=7f99ec1c4000 nid=0x112fdf000 runnable [112fde000]
   java.lang.Thread.State: RUNNABLE
	at java.net.PlainSocketImpl.socketAccept(Native Method)
	at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:408)
	- locked <7ece02b68> (a java.net.SocksSocketImpl)
	at java.net.ServerSocket.implAccept(ServerSocket.java:462)
	at java.net.ServerSocket.accept(ServerSocket.java:430)
	at sun.management.jmxremote.LocalRMIServerSocketFactory$1.accept(LocalRMIServerSocketFactory.java:34)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop(TCPTransport.java:369)
	at sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run(TCPTransport.java:341)
	at java.lang.Thread.run(Thread.java:680)

""Poller SunPKCS11-Darwin"" daemon prio=1 tid=7f99ef093800 nid=0x112edc000 waiting on condition [112edb000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at sun.security.pkcs11.SunPKCS11$TokenPoller.run(SunPKCS11.java:692)
	at java.lang.Thread.run(Thread.java:680)

""Low Memory Detector"" daemon prio=5 tid=7f99ea80b800 nid=0x112b45000 runnable [00000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread1"" daemon prio=9 tid=7f99ea80b000 nid=0x112a42000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""C2 CompilerThread0"" daemon prio=9 tid=7f99ea80a000 nid=0x11293f000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""Signal Dispatcher"" daemon prio=9 tid=7f99ea809800 nid=0x11283c000 runnable [00000000]
   java.lang.Thread.State: RUNNABLE

""Surrogate Locker Thread (Concurrent GC)"" daemon prio=5 tid=7f99ea808800 nid=0x112739000 waiting on condition [00000000]
   java.lang.Thread.State: RUNNABLE

""Finalizer"" daemon prio=8 tid=7f99ec14b800 nid=0x112475000 in Object.wait() [112474000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:118)
	- locked <7ece00878> (a java.lang.ref.ReferenceQueue$Lock)
	at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:134)
	at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=10 tid=7f99ec14b000 nid=0x112372000 in Object.wait() [112371000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:485)
	at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
	- locked <7ece03c38> (a java.lang.ref.Reference$Lock)

""main"" prio=5 tid=7f99ec001000 nid=0x10a398000 in Object.wait() [10a396000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <7ed587fc0> (a [Z)
	at java.lang.Object.wait(Object.java:485)
	at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:161)
	- locked <7ed587fc0> (a [Z)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:104)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)

""VM Thread"" prio=9 tid=7f99ec146800 nid=0x11226f000 runnable 

""Gang worker#0 (Parallel GC Threads)"" prio=9 tid=7f99ec002800 nid=0x10d6d4000 runnable 

""Gang worker#1 (Parallel GC Threads)"" prio=9 tid=7f99ec003000 nid=0x10d7d7000 runnable 

""Gang worker#2 (Parallel GC Threads)"" prio=9 tid=7f99ec003800 nid=0x10d8da000 runnable 

""Gang worker#3 (Parallel GC Threads)"" prio=9 tid=7f99ec004000 nid=0x10d9dd000 runnable 

""Gang worker#4 (Parallel GC Threads)"" prio=9 tid=7f99ec005000 nid=0x10dae0000 runnable 

""Gang worker#5 (Parallel GC Threads)"" prio=9 tid=7f99ec005800 nid=0x10dbe3000 runnable 

""Gang worker#6 (Parallel GC Threads)"" prio=9 tid=7f99ec006000 nid=0x10dce6000 runnable 

""Gang worker#7 (Parallel GC Threads)"" prio=9 tid=7f99ec006800 nid=0x10dde9000 runnable 

""Concurrent Mark-Sweep GC Thread"" prio=9 tid=7f99ec0e4000 nid=0x111f15000 runnable 
""Gang worker#0 (Parallel CMS Threads)"" prio=9 tid=7f99ec0e3000 nid=0x11150f000 runnable 

""Gang worker#1 (Parallel CMS Threads)"" prio=9 tid=7f99ec0e3800 nid=0x111612000 runnable 

""VM Periodic Task Thread"" prio=10 tid=7f99ef122800 nid=0x1130e2000 waiting on condition 

""Exception Catcher Thread"" prio=10 tid=7f99ec001800 nid=0x10a4fb000 runnable 
JNI global references: 1222
 ",Bug
AMQ-3572,12529432,,"Links at [""Apache ActiveMQ > Using ActiveMQ > Xml Configuration"" page to examples for configuring embedded brokers|http://activemq.apache.org/xml-configuration.html#XmlConfiguration-Configuringembeddedbrokers] are broken.

I guess second example link should be renamed and lead to https://svn.apache.org/repos/asf/activemq/trunk/assembly/src/test/java/org/apache/activemq/config/BrokerXmlConfigStartTest.java

",Bug
AMQ-3571,12529185,,Documentation for compression at http://activemq.apache.org/cms/openwire-support.html does not indicated that compression is supported.,Bug
AMQ-4687,12664658,,"ActiveMQ does a trx commit when there is a transaction timeout (EJBTransactionRolledbackException). In this way we are losing messages when there is any timeout.
We have seen that the activemq connections are enlist in XA.
The attribute transactionContext from ActiveMQSession class has the global transaction reference (xid) before calling the MDB (messageListener.onMessage(message)).
When the timeout is reached and the RuntimeException is throwned, the transactionContext losed the xid reference.
Later, when ActiveMQSession call the method transactionContext.isInXATransaction() the result is false because there is no xid reference.



This situation only happened when the MDB calls other EJB (Stateless) with CMT - TransactionAttributeType.REQUIRES_NEW, and the exception is throwed inside the Stateless.

I've tried to reproduce this without calling the stateless ejb but it works well.
The ActiveMQSession class should retain the original transactionContext.


I found these is the same problem jira https://issues.apache.org/jira/browse/AMQ-4634 but is possible move this fix into version ActiveMQ 5.6 ?

Regards
",Bug
AMQ-4052,12607848,,"The phenomenon of the bug:
When consumers was killed and restarted frequently, some messages could not be consumed by consumer but they were still in pending messages.

Reason:
When consumer consumes messages in transaction, it sends ack command and transaction commit command separately, if the consumer was killed between ack command and transaction commit command, in other words the Broker only received the ack command but did not receive the transaction commit command, this lead to the message in PrefetchSubscription’s dispatched list was set ack true, but was not removed from dispatched list. When the consumer was killed, Queue#removeSubscription() was called, in this method, PrefetchSubscription#remove() was called to put PrefetchSubscription’s pending list and dispatched list to Queue’s redeliveredWaitingDispatch list. After that, when Queue#doDispatch() was called, the redeliveredWaitingDispatch list was transferred to Queue#doActualDispatch () method to dispatch the messages to consumer again. In Queue#doActualDispatch () method, if all consumers isFull() method returns true, the target is null and the expression “interestCount > 0” become the only condition to judge if the message should be put back to the  redeliveredWaitingDispatch, but now the message’s isAcked() method returns true, this lead to interestCount is 0, and then the message was not put back to redeliveredWaitingDispatch, but it was not consumed and was still in pagedInMessages. 

Solution:
In PrefetchSubscription#remove() method, set ack status to false for all messages in dispatched list. The code as follows:

{code}

    public List<MessageReference> remove(ConnectionContext context, Destination destination) throws Exception {
        List<MessageReference> resultList = new ArrayList<MessageReference>();
        synchronized(pendingLock) {
            super.remove(context, destination);
            // Here is a potential problem concerning Inflight stat:
            // Messages not already committed or rolled back may not be removed from dispatched list at the moment
            // Except if each commit or rollback callback action comes before remove of subscriber.
            resultList.addAll(pending.remove(context, destination));

            // Synchronized to DispatchLock
            synchronized(dispatchLock) {
                ArrayList<MessageReference> references = new ArrayList<MessageReference>();
                for (MessageReference msgRef : dispatched) {
                    if( msgRef.getRegionDestination() == destination) {
                        references.add(msgRef);
                        if (msgRef instanceof QueueMessageReference) {
                        	QueueMessageReference ref = (QueueMessageReference) msgRef;
                        	ref.setAcked(false);
                        }
                    }
                }
                resultList.addAll(references);
                destination.getDestinationStatistics().getDispatched().subtract(references.size());
                destination.getDestinationStatistics().getInflight().subtract(references.size());
                dispatched.removeAll(references);
            }
        }
        
        return resultList;
    }
{code}

The solution can solve the problem, I want to know if the solution can lead to other problems.",Bug
AMQ-4071,12608710,,"I have a Tomcat web container with a persistent embedded broker in it, all messages get produced in this web container and queued up in the embedded broker. The embedded broker connects to a stand alone master/slave shared storage broker and finally the messages get consumed by threads clients connecting directly to the stand alone broker. The consumers run inside a Tomcat web container of the same version.

While the stand alone broker is enqueueing about 17 messages a second I restart the message producers which have embedded brokers the exception bellow starts appearing in the stand alone broker log:


INFO   | jvm 1    | 2012/09/21 22:00:32 | ERROR | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@40b1d29:myqueue,batchResetNeeded=false,storeHasMessages=true,size=30650,cacheEnabled=false - Failed to fill batch
INFO   | jvm 1    | 2012/09/21 22:00:32 | java.lang.RuntimeException: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:280)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1766)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1995)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1488)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
INFO   | jvm 1    | 2012/09/21 22:00:32 | Caused by: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1015)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:556)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:545)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	... 7 more
INFO   | jvm 1    | 2012/09/21 22:00:32 | ERROR | Failed to page in more queue messages 
INFO   | jvm 1    | 2012/09/21 22:00:32 | java.lang.RuntimeException: java.lang.RuntimeException: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:116)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1766)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1995)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1488)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
INFO   | jvm 1    | 2012/09/21 22:00:32 | Caused by: java.lang.RuntimeException: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:280)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	... 6 more
INFO   | jvm 1    | 2012/09/21 22:00:32 | Caused by: java.lang.ClassCastException: org.apache.activemq.store.kahadb.data.KahaTraceCommand cannot be cast to org.apache.activemq.store.kahadb.data.KahaAddMessageCommand
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1015)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:556)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.kahadb.page.Transaction.execute(Transaction.java:769)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:545)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
INFO   | jvm 1    | 2012/09/21 22:00:32 | 	... 7 more

I have 5 different queues in my brokers and I don't see any issues with any of the other queues. I've experienced this issue before and some other queue was the one affected.

These servers were being used at about 5 messages per second, they would be regularly restarted and this issue never appeared before.

My persistence adapter config

        <persistenceAdapter>
            <kahaDB directory=""/var/gluster/activemq/data/kahadb""
                    ignoreMissingJournalfiles=""true""
                    checkForCorruptJournalFiles=""true""
                    checksumJournalFiles=""true""/>
        </persistenceAdapter>",Bug
AMQ-3515,12525079,,There is an assignment to self in the directory setter of MultiKahaDBPersitenceAdapter.  this.directory=directory should be this.directory=dir.,Bug
AMQ-4921,12682939,,"The use case is about communicating with the StatisticsPlugin:
Sending a message and setting JMSReplyTo with a destination for the response message(s).
Doing (via Camel)

      in.setHeader(""JMSReplyTo"", ""topic://mydest"");

results in the broker producing messages to the ""mydest"" queue.",Bug
AMQ-4474,12642884,,"java.lang.NullPointerException
        at org.apache.activemq.ActiveMQXASession.getTransacted(ActiveMQXASession.java:72)
        at sun.reflect.GeneratedMethodAccessor91.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.7.0_13]
        at java.lang.reflect.Method.invoke(Method.java:601)[:1.7.0_13]
        at com.atomikos.jms.AtomikosJmsXaSessionProxy.invoke(AtomikosJmsXaSessionProxy.java:195)[163:com.atomikos.transactions-osgi:3.8.1]
        at sun.proxy.$Proxy44.getTransacted(Unknown Source)[163:com.atomikos.transactions-osgi:3.8.1]
        at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:573)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:359)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:244)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1069)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1061)[104:org.springframework.jms:3.1.4.RELEASE]
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:958)[104:org.springframework.jms:3.1.4.RELEASE]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_13]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_13]
        at java.lang.Thread.run(Thread.java:722)[:1.7.0_13]",Bug
AMQ-4090,12609962,,"There are missing *svn:ignore* attributes for some new files and folders that are created during the build.  Following are the list of files and folders that should be ignored.  This affects the new 5.7.0 Release Candidate as well.  Having these left around continually triggers automated build servers to rebuild the project when it doesn't need to.

{noformat}
activemq-leveldb\target
activemq-run\dependency-reduced-pom.xml
activemq-all\dependency-reduced-pom.xml
tests\target
{noformat}
",Bug
AMQ-4236,12625012,,"The documentation on the kahaDB log file cleanup located here [1] has a bug.

[1] http://activemq.apache.org/why-do-kahadb-log-files-remain-after-cleanup.html

The information provided about the output is incorrect describing the following two lines:

TRACE | gc candidates after dest:0:D, [86, 87, 163] | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
 TRACE | gc candidates after dest:0:E, [86, 87] | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker

This output indicates that dest:0:E has references to db-163.log and not dest:0:D as the current information states.

It might be helpful to explain the output a little bit clearly indicating the list of log files shown is what is available AFTER checking the the destination, as the log output states.  It just might be helpful to clearly point this out.",Bug
AMQ-4197,12618189,,"The XML for Lease Database Locker on this page 
http://activemq.apache.org/pluggable-storage-lockers.html#Pluggablestoragelockers-LeaseDatabaseLocker
has the incorrect closing tag for locker...
Should be
</locker>
not
</Locker>",Bug
AMQ-4130,12613208,,"When adding activemq-spring as a dependency in a java maven projects, the activemq-spring includes the artifact activemq-pool as a dependency. However, this causes a problem as activemq-spring duplicates many of the classes that are in activemq-pool.

If you do a directory and file comparision between activemq-spring-5.7.0.jar and activemq-pool-5.7.0.jar, the following files are duplicated in activemq-spring:

{noformat}
[WARNING] Found duplicate classes in [org.apache.activemq:activemq-pool:5.7.0,org.apache.activemq:activemq-spring:5.7.0] :
[WARNING]   org.apache.activemq.pool.ActiveMQResourceManager
[WARNING]   org.apache.activemq.pool.AmqJNDIPooledConnectionFactory
[WARNING]   org.apache.activemq.pool.ConnectionKey
[WARNING]   org.apache.activemq.pool.ConnectionPool
[WARNING]   org.apache.activemq.pool.JcaConnectionPool
[WARNING]   org.apache.activemq.pool.JcaPooledConnectionFactory
[WARNING]   org.apache.activemq.pool.PooledConnection
[WARNING]   org.apache.activemq.pool.PooledConnectionFactory
[WARNING]   org.apache.activemq.pool.PooledMessageConsumer
[WARNING]   org.apache.activemq.pool.PooledProducer
[WARNING]   org.apache.activemq.pool.PooledQueueSender
[WARNING]   org.apache.activemq.pool.PooledSession
[WARNING]   org.apache.activemq.pool.PooledSessionEventListener
[WARNING]   org.apache.activemq.pool.PooledTopicPublisher
[WARNING]   org.apache.activemq.pool.SessionKey
[WARNING]   org.apache.activemq.pool.XaConnectionPool
[WARNING]   org.apache.activemq.pool.XaPooledConnectionFactory
{noformat}

This can cause classloader problems as there are duplicated classes located on the path if activemq-pool or activemq-spring classes changed in a later version. This problem has also happened in previous versions of activemq.

Current workaround is to simply add exclusion to activemq-pool:

{code:xml}
<dependency>
	<groupId>org.apache.activemq</groupId>
	<artifactId>activemq-spring</artifactId>
	<version>5.7.0</version>
	<exclusions>
		<exclusion>
			<artifactId>activemq-pool</artifactId>
			<groupId>org.apache.activemq</groupId>
		</exclusion>
	</exclusions>
</dependency>
{code}

Suggested fix is to remove the classes from activemq-spring package and instead include the classes located in activemq-pool as a required dependency.
",Bug
AMQ-4131,12613211,,"When adding activemq-core as a dependency in a java maven project, the activemq-core pulls in a dependency for activemq-protobuf. However, the activemq-core artifact duplicates all of the classes located in the activemq-protobuf.

Doing a diff between the two jars for activemq-spring-5.7.0.jar and activemq-protobuf-1.1.jar, the following classes are duplicated:

{noformat}
[WARNING] Found duplicate classes in [org.apache.activemq:activemq-core:5.7.0,org.apache.activemq.protobuf:activemq-protobuf:1.1] :
[WARNING]   org.apache.activemq.protobuf.AsciiBuffer
[WARNING]   org.apache.activemq.protobuf.BaseMessage
[WARNING]   org.apache.activemq.protobuf.Buffer
[WARNING]   org.apache.activemq.protobuf.BufferInputStream
[WARNING]   org.apache.activemq.protobuf.BufferOutputStream
[WARNING]   org.apache.activemq.protobuf.CodedInputStream
[WARNING]   org.apache.activemq.protobuf.CodedOutputStream
[WARNING]   org.apache.activemq.protobuf.DeferredDecodeMessage
[WARNING]   org.apache.activemq.protobuf.InvalidProtocolBufferException
[WARNING]   org.apache.activemq.protobuf.Message
[WARNING]   org.apache.activemq.protobuf.MessageBuffer
[WARNING]   org.apache.activemq.protobuf.MessageBufferSupport
[WARNING]   org.apache.activemq.protobuf.PBMessage
[WARNING]   org.apache.activemq.protobuf.UTF8Buffer
[WARNING]   org.apache.activemq.protobuf.UninitializedMessageException
[WARNING]   org.apache.activemq.protobuf.WireFormat
[WARNING]   org.apache.activemq.protobuf.compiler.AltJavaGenerator
[WARNING]   org.apache.activemq.protobuf.compiler.CommandLineSupport
[WARNING]   org.apache.activemq.protobuf.compiler.CompilerException
[WARNING]   org.apache.activemq.protobuf.compiler.EnumDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.EnumFieldDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ExtensionsDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.FieldDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.IntrospectionSupport
[WARNING]   org.apache.activemq.protobuf.compiler.JavaGenerator
[WARNING]   org.apache.activemq.protobuf.compiler.MessageDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.MethodDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.OptionDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ParserSupport
[WARNING]   org.apache.activemq.protobuf.compiler.ProtoDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.ProtoMojo
[WARNING]   org.apache.activemq.protobuf.compiler.ServiceDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.TextFormat
[WARNING]   org.apache.activemq.protobuf.compiler.TypeDescriptor
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ParseException
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParser
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParserConstants
[WARNING]   org.apache.activemq.protobuf.compiler.parser.ProtoParserTokenManager
[WARNING]   org.apache.activemq.protobuf.compiler.parser.SimpleCharStream
[WARNING]   org.apache.activemq.protobuf.compiler.parser.Token
[WARNING]   org.apache.activemq.protobuf.compiler.parser.TokenMgrError
{noformat}

activemq-core is currently packaged incorrectly because of this. This will cause classloader issues as these classes are duplicated. However, luckily the classes are identical, but if something changes down the road it could cause unexpected behavior.

Current workaround:

{code:xml}
<dependency>
	<groupId>org.apache.activemq</groupId>
	<artifactId>activemq-core</artifactId>
	<version>5.7.0</version>
	<exclusions>
		<exclusion>
			<artifactId>activemq-protobuf</artifactId>
		 	<groupId>org.apache.activemq.protobuf</groupId>
		</exclusion>
	</exclusions>
</dependency>
{code}

Suggested fix is to remove the duplicated classes from activemq-core and instead bring them in through the activemq-protobuf dependency.
",Bug
AMQ-4143,12613992,,"I have 2 brokers embedded using a pure spring configuration on 2 different servers using the exact same config.

When I connect to a broker using jconsole and issue the stop() command to stop the broker (1), the other broker (2) takes over as it should. My application has a quartz job that detects the stopped broker and replaces it with a new broker using a broker factory. When I stop broker 2 the application goes heywire and dumps and socket closed error in an infinite loop.

ERROR TransportConnector.java:228 ActiveMQ Transport Server: tcp://0.0.0.0:61616 ) Could not accept connection : java.net.SocketException: Socket is closed",Bug
AMQ-4836,12676582,,"This issue is similar to AMQ-577 (resolved by adding a MSSQL JDBC URL parameter) and AMQ-711 (resolved as cannot reproduce) issues.

The problem is that the JDBC API (the {{Connection}} class JavaDoc) states:

{code}
    /**
     * Makes all changes made since the previous
     * commit/rollback permanent and releases any database locks
     * currently held by this <code>Connection</code> object. 
     * This method should be
     * used only when auto-commit mode has been disabled.
     *
     * @exception SQLException if a database access error occurs, 
     * this method is called while participating in a distributed transaction,
     * if this method is called on a closed conection or this
     *            <code>Connection</code> object is in auto-commit mode
     * @see #setAutoCommit 
     */
    void commit() throws SQLException;
{code}

However, some JDBC drivers do not throw the {{SQLException}} when the {{Connection.commit()}} method is called on a {{Connection}} instance with {{setAutoCommit(true)}}. Some others do (Firebird, SAP-HANA, MSSQL without the JDBC URL parameter {{relaxAutoCommit=true}}). With these databases the following exceptions can be thrown on the Broker start-up:

1) {{DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)}}:

{code}
Caused by: com.sap.db.jdbc.exceptions.JDBCDriverException: SAP DBTech JDBC: Connection is currently in auto commit mode.
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.createException(SQLExceptionSapDB.java:334)
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.generateSQLException(SQLExceptionSapDB.java:113)
	at com.sap.db.jdbc.ConnectionSapDB.commit(ConnectionSapDB.java:351)
	at com.sap.db.jdbc.trace.Connection.commit(Connection.java:126)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)
	at org.apache.activemq.store.jdbc.adapter.OptimizedDefaultJDBCAdapter.doDropTables(OptimizedDefaultJDBCAdapter.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy12.doDropTables(Unknown Source)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:526)
	... 64 more
{code}

2) {{DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:119)}}

{code}
Caused by: com.sap.db.jdbc.exceptions.JDBCDriverException: SAP DBTech JDBC: Connection is currently in auto commit mode.
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.createException(SQLExceptionSapDB.java:334)
	at com.sap.db.jdbc.exceptions.SQLExceptionSapDB.generateSQLException(SQLExceptionSapDB.java:113)
	at com.sap.db.jdbc.ConnectionSapDB.commit(ConnectionSapDB.java:351)
	at com.sap.db.jdbc.trace.Connection.commit(Connection.java:126)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:119)
	at org.apache.activemq.store.jdbc.adapter.OptimizedDefaultJDBCAdapter.doCreateTables(OptimizedDefaultJDBCAdapter.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy12.doCreateTables(Unknown Source)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:528)
	... 64 more
{code}

This led us to a workaround where we simply override the 1) and 2) methods and replaced the following code in them:

{code}
      c.getConnection().commit();
{code}

With the following code (to prevent the exceptions from being thrown):

{code}
      if (!c.getConnection().getAutoCommit()) { /* HACK */
        c.getConnection().commit();
      }
{code}

I believe that the ActiveMQ code should correspond to the JDBC API specification by calling the {{Connection.commit()}} method only on connections with {{setAutoCommit(false)}}. This approach is already implemented in the ActiveMQ code, for example, in the following method:

{code}
org.apache.activemq.store.jdbc.TransactionContext.commit()
{code}",Bug
AMQ-5959,12862124,,"Try blocks including a finally block that references a potential null object generating a NullPointerException.

In The DestinationView.sendTextMessage(java.util.Map, ...) method for example (http://grepcode.com/file/repo1.maven.org/maven2/org.apache.activemq/activemq-broker/5.11.1/org/apache/activemq/broker/jmx/DestinationView.java#DestinationView.sendTextMessage%28java.util.Map%2Cjava.lang.String%2Cjava.lang.String%2Cjava.lang.String%29), I noticed code like the following:  
        Connection connection = null;
        try {
            connection = cf.createConnection(userName, password);
         ...
             return msg.getJMSMessageID();
        } finally {
            connection.close();
        }

There is no catch block and since an exception in the createConnection method could be thrown, connection would be null in the finally block, causing a NPE and masking the real exception.

There may be other forms of this bad style which a code style checker should be able to locate for you.",Bug
AMQ-4948,12685766,,"Please see below error … our inbound MDP losing connection with MQ and not able to reconnect. Can you please let us know possible reasons.
using Apache Active MQ 5.8 version.

INSERT1     :-  0
|   INSERT2     :-  0
|   INSERT3     :-  com.ibm.mq.jmqi.JmqiException[CC=2;RC=2009]
|   RETURNCODE  :-  2009
|   THROWABLE   :-  ExceptionDepth is 3
|   THROWABLE   :-  
|   |   Cause:1       :-  com.ibm.mq.jmqi.JmqiException: CC=2;RC=2009
|   |   Cause:2       :-  com.ibm.mq.jmqi.JmqiException: CC=2;RC=2009;AMQ9208: Error on receive from host 'r11ln00.bnymellon.net/10.0.47.244:1438 (r11ln00.bnymellon.net)'. [1=-1,2=ffffffff,3=r11ln00.bnymellon.net/10.0.47.244:1438 (r11ln00.bnymellon.net),4=TCP]
|   |   Message:1     :-  CC=2;RC=2009
|   |   Message:2     :-  CC=2;RC=2009;AMQ9208: Error on receive from host 'r11ln00.bnymellon.net/10.0.47.244:1438 (r11ln00.bnymellon.net)'. [1=-1,2=ffffffff,3=r11ln00.bnymellon.net/10.0.47.244:1438 (r11ln00.bnymellon.net),4=TCP]
|   |   StackTrace:1  :-  com.ibm.mq.jmqi.JmqiException: CC=2;RC=2009
|   |        at com.ibm.mq.jmqi.remote.internal.RemoteHconn.enterCall(RemoteHconn.java:397)
|   |        at com.ibm.mq.jmqi.remote.internal.RemoteHconn.enterCall(RemoteHconn.java:320)
|   |        at com.ibm.mq.jmqi.remote.internal.ReconnectableHconn.enterCall(ReconnectableHconn.java:324)
|   |        at com.ibm.mq.jmqi.remote.internal.RemoteFAP.jmqiGetMessage(RemoteFAP.java:5653)
|   |        at com.ibm.mq.jmqi.internal.JmqiTools.getMessage(JmqiTools.java:1056)
|   |        at com.ibm.mq.jmqi.remote.internal.RemoteFAP.jmqiGet(RemoteFAP.java:5593)
|   |        at com.ibm.msg.client.wmq.internal.WMQConsumerShadow.getMsg(WMQConsumerShadow.java:1169)
|   |        at com.ibm.msg.client.wmq.internal.WMQSyncConsumerShadow.receiveInternal(WMQSyncConsumerShadow.java:233)
|   |        at com.ibm.msg.client.wmq.internal.WMQConsumerShadow.receive(WMQConsumerShadow.java:922)
|   |        at com.ibm.msg.client.wmq.internal.WMQMessageConsumer.receive(WMQMessageConsumer.java:450)
|   |        at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl.receiveInboundMessage(JmsMessageConsumerImpl.java:7Dec 16, 2013 7:59:24 PM org.apache.catalina.core.AprLifecycleListener init

",Bug
AMQ-4870,12678617,,"We are using a standalone ActiveMQ WebConsole that connects remotely to the broker using JMX.

I have noticed that a bug has been introduced by the JMX MBean naming changes that came with ActiveMQ 5.8. It prevents the webconsole to connect to the remote broker as it doesn't ""see"" the broker MBean.

Bug affects ActiveMQ 5.8/5.9.

Faulty code in activemq-web module in class org.apache.activemq.web.RemoteJMXBrokerFacade
{code}
protected Set<ObjectName> findBrokers(MBeanServerConnection connection) throws IOException, MalformedObjectNameException {
if (this.brokerName == null) {
    name = new ObjectName(""org.apache.activemq:type=Broker,brokerName=*"");
  } else {
    name = new ObjectName(""org.apache.activemq:brokerName=""
					+ this.brokerName + "",Type=broker"");
  }
...
{code}
}

When brokerName hasn't been specified, the remote JMX connection works OK.

When the brokerName has been specified, the remote JMX connection fails.

Fix is to replace the second name definition with the proper ObjectName :
{code}
name = new ObjectName(""org.apache.activemq:type=Broker,brokerName="" + this.brokerName);
{code}
",Bug
AMQ-5230,12721753,,"http://activemq.apache.org/initial-configuration.html

Under Required JARs, the following JAR files are listed:
activemq-core.jar
activeio-core.jar
kahadb.jar

According to this forum discussion, 

http://activemq.2283324.n4.nabble.com/When-will-activemq-core-5-9-be-present-in-maven-central-repo-td4675087.html

the following JARs should be listed:
activemq-broker
activemq-client
activemq-spring
activemq-kahadb-store

Could we get this documentation updated to specify what is needed/optional for the supported versions? Or at least the latest released version?
",Bug
AMQ-4692,12665652,,"When I run a MQTT client（paho or fuse）to connect ActiveMQ broker. if i terminate this client and can not receive LWT messages from broker.

I changed broker from ActiveMQ to Mosquitto broker , everything is ok.

below is my test class:

package com.paho;

import org.eclipse.paho.client.mqttv3.MqttCallback;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttDeliveryToken;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.paho.client.mqttv3.MqttSecurityException;
import org.eclipse.paho.client.mqttv3.MqttTopic;

public class Sub {
	private MqttClient mqttClient;
	
	public void subscriber(){
		try {
			mqttClient = new MqttClient(""tcp://192.168.100.80:1883"", MqttClient.generateClientId());
			

			MqttConnectOptions connectOptions = new  MqttConnectOptions();

			//set will
			connectOptions.setWill(mqttClient.getTopic(""lastwill""), new String(""I am offline"").getBytes(), 1, false);
			mqttClient.connect(connectOptions);
			mqttClient.setCallback(new MqttCallback(){

				public void connectionLost(Throwable paramThrowable) {
					System.out.println(""Connection Exist. \nCause: "" + paramThrowable);
					while(true){
						try {
							Thread.sleep(20000);
							if(!mqttClient.isConnected()){
								subscriber();
							}
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}

				public void messageArrived(MqttTopic paramMqttTopic,
						MqttMessage paramMqttMessage) throws Exception {

					System.out.println(""Message arrived From The Topic:\t""+paramMqttTopic.toString() +"" \nMessage: "" + paramMqttMessage.toString());
				}

				public void deliveryComplete(
						MqttDeliveryToken paramMqttDeliveryToken) {
				}
				
			});
			
			mqttClient.subscribe(""durable"",1);
//			mqttClient.subscribe(""durable1"",1);

			
		} catch (MqttException e) {
			e.printStackTrace();
		}

	}
	

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Sub sub = new Sub();
		sub.subscriber();
	}

}
",Bug
AMQ-4727,12669344,,"gtully: noconnor: there is a pax exam test on apache trunk that validates the karaf features - see the xml https://github.com/apache/activemq/blob/trunk/activemq-karaf-itest/src/test/resources/org/apache/activemq/karaf/itest/activemq-nd-camel.xml
[07:35am] gtully: in 6.0 u can try the same - just embed a context
[07:36am] gtully: so modify etc/activemq.xml
[07:36am] noconnor: gtully: thanks, trying it now
[07:44am] noconnor: gtully: same issue again, ""bundle context must be specified""
[07:49am] gtully: noconnor: i see the same thing with the test on trunk… need to investigate that a bit…can u raise an amq issue
[07:51am] gtully: noconnor: on trunk that can be reproduced with mvn test -Dtest=ActiveMQBrokerNdCamelFeatureTest in the activemq-karaf-itest module


Exception on start: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in file [/opt/jboss-amq/jboss-a-mq-6.0.0.redhat-024
/etc/activemq.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'camel': Invocation
of init method failed; nested exception is java.lang.IllegalArgumentException: BundleContext must be specified
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'activemq' defined in file [/opt/jboss-amq/jboss-a-mq-6.0.0.redhat-024/etc/activemq.xml]: I
nitialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'camel': Invocation of init method failed
; nested exception is java.lang.IllegalArgumentException: BundleContext must be specified


Also I had to add the activemq-camel feature to org.apache.karaf.features.cfg to get the namespaces resolved



",Bug
AMQ-4602,12654887,,"When using a org.apache.activemq.pool.PooledConnectionFactory in our web application and trying to deploy it on glassfish that has activemq-ra 5.8.0 deployed, an exception with message ""ClassNotFoundException: org.apache.commons.pool.KeyedPoolableObjectFactory"" was thrown.",Bug
AMQ-4657,12660354,,"I get the following error while starting the Active MQ bundle under karaf on Windows 2012 Server 64 bit

Error executing command: Could not start bundle mvn:org.apache.activemq/activemq-osgi/5.8-SNAPSHOT in feature(s) activemq-client-5.8-SNAPSHOT: The bundle ""org.apache.activemq.activemq-osgi_5.8.0.SNAPSHOT [235]"" could not be resolved. Reason: No match found for native code: META-INF/native/windows32/leveldbjni.dll; processor=x86; osname=Win32, META-INF/native/windows64/leveldbjni.dll; processor=x86-64; osname=Win32, META-INF/native/osx/libleveldbjni.jnilib; osname=macosx, META-INF/native/linux32/libleveldbjni.so; processor=x86; osname=Linux, META-INF/native/linux64/libleveldbjni.so; processor=x86-64; osname=Linux, org/xerial/snappy/native/Linux/i386/libsnappyjava.so; processor=x86; osname=Linux, org/xerial/snappy/native/Mac/i386/libsnappyjava.jnilib; processor=x86; osname=macosx, org/xerial/snappy/native/Mac/x86_64/libsnappyjava.jnilib; processor=x86-64; osname=macosx,
org/xerial/snappy/native/Windows/amd64/snappyjava.dll; processor=x86-64; osname=Win32, org/xerial/snappy/native/Windows/x86/snappyjava.dll; processor=x86; osname=Win32
",Bug
AMQ-4471,12642554,,"Playing with the ""demo/websocket/index.html"" demo (5.8.0), I see an inconsistent messaging behavioir


Having two browsers (FF and chrome) and not always the message receives the other browser


* TEST in FF => displayed in Chrome (and FF)
* TEST (1) in Chrome => displayed in both
* TEST (2) in Chrome => this time, only visible in Chrome; no message arrived at the Firefox browser


",Bug
AMQ-4314,12632289,,"On the Web Admin Connections page, my NMS Openwire client connection does not show up.  The client is actually connected and sending/receiving messages.

Steps to duplicate:
1. Install fresh ActiveMQ 5.8.0 (to verify that custom configuration did not introduce the problem).
2. Launch the broker.
3. Connect Openwire client.  (I use C# NMS).
4. In the web admin, navigate to the Connections page.

Results:
The Openwire section of the page does not list the client.

Expected:
The client connection should be listed.

Notes:
I have not verified other types of connections (e.g., STOMP) to see if they are experiencing the same problem.  This is a critical feature for our use case.",Bug
AMQ-4410,12639307,,"Method ""public long setTimeBetweenExpirationCheckMillis()"" should be ""public long getTimeBetweenExpirationCheckMillis()""",Bug
AMQ-4315,12632293,,"There are a couple of duplicate files in the ActiveMQ 5.8.0 distribution package.  Here are the locations:

lib/extra/activemq-leveldb-store-5.8.0.jar
lib/optional/activemq-leveldb-store-5.8.0.jar

lib/activemq-spring-5.8.0.jar
lib/optional/activemq-spring-5.8.0.jar

Not sure which location is the ""real"" location.",Bug
AMQ-4409,12639286,,"http://activemq.apache.org/configuring-wire-formats.html states that the default value for {{tcpNoDelayEnabled}} is false.

This contradicts what the debug logs says if I don't change the parameter:

{noformat}
12:10:06.827 DEBUG org.apache.activemq.transport.InactivityMonitor - Using min of local: WireFormatInfo { version=9, properties={MaxFrameSize=9223372036854775807, CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]} and remote: WireFormatInfo { version=9, properties={CacheSize=1024, MaxFrameSize=31337, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=15000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
{noformat}

Note the {{TcpNoDelayEnabled=true}}!

This default value seems to come from {{org/apache/activemq/openwire/OpenWireFormatFactory.java}} which states

{noformat}
private boolean tcpNoDelayEnabled = true;
{noformat}

I think that either the documentation or the code should be updated.
",Bug
AMQ-5048,12694932,,"It was an accident when our system ran out of free disk space. ActiveMQ broker was shut down but after disk clean it failed to start with throwing an exception:

2014-01-31 07:59:46,297 | ERROR | Failed to page in more queue messages  | org.apache.activemq.broker.region.Queue | ActiveMQ BrokerService[CORE_FuseMQ] Task-149
java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:113)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1775)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2003)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1491)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
        at java.lang.Thread.run(Thread.java:662)st
Caused by: java.lang.RuntimeException: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:277)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        ... 9 more
Caused by: java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log
        at org.apache.activemq.store.kahadb.disk.journal.Journal.getDataFile(Journal.java:353)
        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:600)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:939)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1029)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:557)
        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:546)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)
        ... 10 more
2014-01-31 07:59:47,305 | ERROR | Looking for key 97203 but not found in fileMap: {55354=db-55354.log number = 55354 , length = 33563112, 93728=db-93728.log number = 93728 , length = 33554796, 9373
2014-01-31 07:59:47,307 | ERROR | org.apache.activemq.broker.region.cursors.QueueStorePrefetch@3a252a17:mdm.kis,batchResetNeeded=false,storeHasMessages=true,size=157,cacheEnabled=false,maxBatchSize
java.io.IOException: Could not locate data file /opt/broker/data/kahadb/db-97203.log
        at org.apache.activemq.store.kahadb.disk.journal.Journal.getDataFile(Journal.java:353)
        at org.apache.activemq.store.kahadb.disk.journal.Journal.read(Journal.java:600)
        at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:939)
        at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:1029)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:557)
        at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:546)
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:106)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:274)
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1775)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:2003)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1491)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
[...]

We rebuilt metadata as described here: https://access.redhat.com/site/documentation/en-US/Fuse_MQ_Enterprise/7.1/html/Configuring_Broker_Persistence/files/KahaDB-Recovery.html 

Performed steps to rebuild:
1. Stop broker
2. Delete db.data
3. Start broker

Afterwards broker started correctly without exceptions. Problem is that some new messages appeared in queues. Those queues had zero messages before metadata recovery. Appeared messages were quite outdated and already delivered several months ago. This is dangerous behaviour because unexpected redelivery in some cases may bring harm to consumers. ",Bug
AMQ-4541,12648098,,"""./activemq list "" can work.
""./activemq-admin list"" can not work.

It seems that a bug of jdk.
see here: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6649594

To fix it: just remove this:
{code}
 -Djava.io.tmpdir=""${ACTIVEMQ_TMP}"" 
{code}",Bug
AMQ-4466,12641848,,"Properties should be 
property=""property.name""

but at the moment, it's 
property=""${property.name}""

probably left over when it was expression=""${property.name}""

Similar issue to AMQ-4275 ",Bug
AMQ-4435,12640745,,"ActiveMQConnectionFactory contains ""consumerFailoverRedeliveryWaitPeriod"" to be applied to the connection created - however method ""populateProperties()"" ignores this property.

The following should be added to populateProperties() method

{code}
props.setProperty(""consumerFailoverRedeliveryWaitPeriod"", Long.toString(consumerFailoverRedeliveryWaitPeriod));
{code}",Bug
AMQ-5220,12720308,,"The subject of this task similiar as AMQ-2098. Bug still exists, and it can be reproduced according to steps below.

This simple script written in PHP uses standard Stomp client
{code}
$stomp       = new \Stomp('tcp://localhost:61613', 'admin', 'admin');
$stomp->subscribe('/topic/stats');

$stomp->begin($transaction = microtime(true));
$status = $stomp->send('/queue/ActiveMQ.Statistics.Destination.testqueue', '', Array('reply-to' => '/topic/stats', 'persistent' => 'true'));

$message = $stomp->readFrame();
$stomp->ack($message->headers['message-id']);
$stomp->commit($transaction);
{code}
And in $message we'll have empty body paramter. It's because ActiveMQ returned message without body that's show in a captured packets between ActiveMQ and PHP communication below
{code}
T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
CONNECT
login:admin
passcode:admin

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]
CONNECTED
heart-beat:0,0
session:ID:amneziac-59996-1402320672417-5:8
server:ActiveMQ/5.9.1
version:1.0
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
SUBSCRIBE
ack:client
destination:/topic/stats
activemq.prefetchSize:1

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
BEGIN
transaction:1402321825.9952

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
SEND
reply-to:/topic/stats
persistent:true
destination:/queue/ActiveMQ.Statistics.Destination.testqueue

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:61613 -> 127.0.0.1:53988 [AP]
MESSAGE
message-id:ID:amneziac-59996-1402320672417-2:1:0:0:8
type:Advisory
destination:/topic/stats
timestamp:1402321826311
expires:0
priority:4
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
ACK
message-id:ID:amneziac-59996-1402320672417-2:1:0:0:8

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
.

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AP]
COMMIT
transaction:1402321825.9952

T 127.0.0.1:53988 -> 127.0.0.1:61613 [AFP]
.
DISCONNECT
{code}",Bug
AMQ-3504,12523563,,"When connecting from chrome or firefox 6 over websockets, I get the Null pointer below. It does not happen on firefox 5 or safari . My guess would be that the chrome and ff 6 are implementing a newer version of the websocket spec that is incompatible with the version that the activemq implements.     

2011-09-19 09:18:33,931 | WARN  | /stomp | org.eclipse.jetty.util.log | qtp1545215993-39
java.lang.NullPointerException
        at org.apache.activemq.transport.ws.StompServlet.doGet(StompServlet.java:51)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
        at org.eclipse.jetty.websocket.WebSocketServlet.service(WebSocketServlet.java:73)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:423)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
        at org.eclipse.jetty.server.Server.handle(Server.java:351)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
        at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
        at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:241)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Thread.java:680)
",Bug
AMQ-5295,12730591,,"HttpsClientTransport is getting wrong SSLSocketFactory.

The problem is here:
{code}
    private SchemeRegistry createSchemeRegistry() {

        SchemeRegistry schemeRegistry = new SchemeRegistry();
        try {
            // register the default socket factory so that it looks at the javax.net.ssl.keyStore,
            // javax.net.ssl.trustStore, etc, properties by default
            SSLSocketFactory sslSocketFactory =
                    new SSLSocketFactory((javax.net.ssl.SSLSocketFactory) javax.net.ssl.SSLSocketFactory.getDefault(),
                    SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER);
            schemeRegistry.register(new Scheme(""https"", getRemoteUrl().getPort(), sslSocketFactory));
            return schemeRegistry;
        } catch (Exception e) {
            throw new IllegalStateException(""Failure trying to create scheme registry"", e);
        }
    }
{code}

The problem with that code is, that it never take SSLSocketFactory from spring context. So the one defined in XML is ignored.

So it's code have to be replaced with:

{code}
    private SchemeRegistry createSchemeRegistry() {

        SchemeRegistry schemeRegistry = new SchemeRegistry();
        try {
            // register the default socket factory so that it looks at the javax.net.ssl.keyStore,
            // javax.net.ssl.trustStore, etc, properties by default
            SSLSocketFactory sslSocketFactory = createSocketFactory();
            schemeRegistry.register(new Scheme(""https"", getRemoteUrl().getPort(), sslSocketFactory));
            return schemeRegistry;
        } catch (Exception e) {
            throw new IllegalStateException(""Failure trying to create scheme registry"", e);
        }
    }
{code}

And then new method should be added:

{code}
    /**
     * Creates a new SSL SocketFactory. The given factory will use user-provided
     * key and trust managers (if the user provided them).
     *
     * @return Newly created (Ssl)SocketFactory.
     * @throws IOException
     */
    protected SocketFactory createSocketFactory() throws IOException {
        if (SslContext.getCurrentSslContext() != null) {
            SslContext ctx = SslContext.getCurrentSslContext();
            try {
                return ctx.getSSLContext().getSocketFactory();
            } catch (Exception e) {
                throw IOExceptionSupport.create(e);
            }
        } else {
            return SSLSocketFactory.getDefault();
        }

    }
{code}

This is consistent solution with other transports.

I will prepare patches and tests for this scenerio.

Greetings
Piotr Klimczak",Bug
AMQ-5282,12728496,,"Activemq-karaf feature.xml missing org.fusesource.hawtbuf since 5.9.0
it was there in 5.8.0 looking like this:

<bundle dependency=""true"">mvn:org.fusesource.hawtbuf/hawtbuf/1.9</bundle>
<bundle dependency=""true"">mvn:org.fusesource.hawtbuf/hawtbuf-proto/1.9</bundle>

Problem was found on apache karaf 2.3.3 while starting:
 Unable to resolve 263.0: missing requirement [263.0] osgi.wiring.package; (&(osgi.wiring.package=org.fusesource.hawtbuf)(version>=1.9.0)(!(version>=2.0.0)))


	",Bug
AMQ-4961,12687236,,"It appears that the binary release of ActiveMQ 5.9.0 is missing all the platform-specific leveldbjni files in lib/optional. Those files are all present in ActiveMQ 5.8.0 binary release.

Reason: AMQ 5.9.0 depends on leveldbjni-1.7.0 which would then also require all the platform-specific jni jars of version 1.7.0. Unfortunately it appears that all public maven repos (specifically on repo1.maven.org) do not contain version 1.7 of those jars. The public maven repo contains version 1.5 and then 1.8.
This is not specific an issue of ActiveMQ, but I still wanted the ActiveMQ team make aware of this issue.",Bug
AMQ-5138,12706922,,"In VMTransport class taskRunner is set to null two times needlessly on the next line and couple of lines below:    
       {color:red}taskRunner = null;{color}
            messageQueue = null;

            if (mq != null) {
                mq.clear();
            }

            // Allow pending deliveries to finish up, but don't wait
            // forever in case of an stalled onCommand.
            if (tr != null) {
                try {
                    tr.shutdown(TimeUnit.SECONDS.toMillis(1));
                } catch(Exception e) {
                }
                {color:red}taskRunner = null;{color}
            }",Bug
AMQ-4953,12686084,,"When creating a composite queue (by editing activemq.xml) it doesn't seem like the queue is actually created.

When I try to connect to the composite queue (from another server), the folowing Exception is thrown:
Caused by: java.lang.SecurityException: User alice is not authorized to create: queue://FOO.BAR
We doesn't allow the user ('alice') to create queues so this seems to indicate that the queue doesn't exist according to A-MQ.

Part from my activemq.xml:
{code}
    <broker xmlns=""http://activemq.apache.org/schema/core""
            brokerName=""${broker-name}""
            dataDirectory=""${data}""
            advisorySupport=""false""
            start=""false"">

        ...

        <plugins>
            <jaasAuthenticationPlugin configuration=""karaf"" />
            <authorizationPlugin>
              <map>
                <authorizationMap groupClass=""org.apache.karaf.jaas.boot.principal.RolePrincipal"">
                  <authorizationEntries>
                    <authorizationEntry queue="">"" read=""admin,alice"" write=""admin,alice"" admin=""admin"" />
                    <authorizationEntry topic="">"" read=""admin,alice"" write=""admin,alice"" admin=""admin"" />
                    <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""admin,alice"" write=""admin,alice"" admin=""admin,alice"" /> 
                  </authorizationEntries>
                </authorizationMap>
              </map>
            </authorizationPlugin>
        </plugins>

        ...

        <destinations>
            <queue physicalName=""FOO.BAR.COM""/>
        </destinations>

        <destinationInterceptors>
          <virtualDestinationInterceptor>
             <virtualDestinations>
               <compositeQueue name=""FOO.BAR"">
                 <forwardTo>
                   <queue physicalName=""FOO.BAR.COM""/>
                 </forwardTo>
               </compositeQueue>
            </virtualDestinations>
         </virtualDestinationInterceptor>
       </destinationInterceptors>
    </broker>
{code}
** Note: This is destinct from AMQ-4320 which was about the destinations contained within the Composite Destinations, not being created.",Bug
AMQ-4895,12679737,,"Using AMQ RA when the broker is shutted down the following log is traced: https://gist.github.com/rmannibucau/ab945546963db12365d3

this is due to the onException of org.apache.activemq.ra.ActiveMQManagedConnection",Bug
AMQ-5253,12724461,,"I noticed that there is a typo in property used for deleting inactive destinations.
In documentation example(http://activemq.apache.org/delete-inactive-destinations.html)
""inactiveTimoutBeforeGC"" used. Which has one letter missing in word ""Timout"". 

I tried to change property name to ""inactiveTimeoutBeforeGC"" and active mq failed to start afterwards, so seems there is typo in parameter name. 
",Bug
AMQ-5262,12725879,,"We are having a problem with ActiveMQ hanging on shutdown.  Here is the scenario, we have a stand alone application that runs an embedded ActiveMQ which creates a JMS Queue Bridge via Spring configs. When we call shutdown, the TCPTransport that connects the JMS Queue Bridge does not shutdown, it hangs on java.net.SocketInputStream.socketRead0(). 

{noformat}
java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50)
	at org.apache.activemq.transport.tcp.TcpTransport$2.fill(TcpTransport.java:604)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58)
	at org.apache.activemq.transport.tcp.TcpTransport$2.read(TcpTransport.java:589)
	at java.io.DataInputStream.readInt(DataInputStream.java:370)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:213)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)
	at java.lang.Thread.run(Thread.java:662)
{noformat}

Digging around on the forums and the issue tracker, the work around seems to add a parameter to the URI (Ex - tcp://localhost:60606?daemon=true).  

According to this StackOverflow posting (http://stackoverflow.com/questions/2213340/what-is-daemon-thread-in-java) which quotes from Java Concurrency in Practice 

* When a new thread is created it inherits the daemon status of its parent.
* Normal thread and daemon threads differ in what happens when they exit. When the JVM halts any remaining daemon threads are abandoned: **finally blocks are not executed**, stacks are not unwound - JVM just exits. Due to this reason daemon threads should be used sparingly and it is dangerous to use them for tasks that might perform any sort of I/O.

So, making the Socket that connects the JMS Queue Bridge a Daemon thread, seems to be the wrong solution.  

I was trying to debug the initialization of ActiveMQ, and noticed the org.apache.activemq.network.jms.JmsConnector class has a stop() method on it.  I believe this class creates the connection for the JMS Bridge, right?  If so, the stop method does not seem to shutdown the connection properly. 

{code}
public void stop() throws Exception {

        if (started.compareAndSet(true, false)) {

            ThreadPoolUtils.shutdown(connectionSerivce);
            connectionSerivce = null;

            for (DestinationBridge bridge : inboundBridges) {
                bridge.stop();
            }
            for (DestinationBridge bridge : outboundBridges) {
                bridge.stop();
            }
            LOG.info(""JMS Connector {} stopped"", getName());
        }
        
}
{code}

The question I have is why is the stop() method relying on the ThreadPoolUtils.shutdown(connectionSerivce) and NOT calling close() on the Connections first? For example:

{code}
public void stop() throws Exception {

        if (started.compareAndSet(true, false)) {

			foreignConnection.get().close();
			localConnection.get().close();
			
            ThreadPoolUtils.shutdown(connectionSerivce);
            connectionSerivce = null;

            for (DestinationBridge bridge : inboundBridges) {
                bridge.stop();
            }
            for (DestinationBridge bridge : outboundBridges) {
                bridge.stop();
            }
            LOG.info(""JMS Connector {} stopped"", getName());
        }
        
}
{code}
It was a little difficult to follow the code, so I may be missing something.  BUT shouldn't the connections close first?  Or am I looking in the wrong place.  

I have created a small project that creates this scenario.
https://github.com/pminearo/activemq-shutdown-bug.git

This was done with ActiveMQ 5.9.  Though, since this bug has been around for quite some time, it most likely is still in 5.10, 5.11, and 6.0.
",Bug
AMQ-5337,12737331,,"The AdvisoryBroker use a ConcurrentLinkedQueue to store consumers.
This standard JDK class has a bug which can lead to an OutOfMemory : https://bugs.openjdk.java.net/browse/JDK-8054446

In our environment we observe that ActiveMQ process cpu usage is continually climbing and that the ConcurrentLinkedQueue in the AdvisoryBroker grows indefinitely.

The ConcurrentLinkedQueue is a non-blocking concurrent FIFO datastructure provided by the core Java Development Kit API starting from Java 5. 
AdvisoryBroker use offer() method to add a new consumer in the ConcurrentLinkedQueue, and remove() method to remove it.
When the consumer removed is the last element of the queue, the Consumer object is nulled but a node remain in the queue. The null node is then never garbage collected. This is true only for the last element of the queue. Any other element is removed safely.

Related bug : https://issues.apache.org/jira/browse/AMQ-4853
",Bug
AMQ-5193,12715562,,"activemq-all-5.8.0.jar and older versions do not contain any .java files, 
only .class files as I would expect.  Strating in version 
activemq-all-5.9.0.jar .java and .class files are included in the JAR. 

Was this intentional?  I'm having a problem related to the fact that Maven 
is attempting to compile the.java files within the jar.  I'm sure I can work around the issue in the short term, however I wanted to make sure that you were aware of it.  It seems odd to me that the .java files are included in the .jar file, normally they would only appear in the sources jar (example: activemq-all-5.9.0-sources.jar). ",Bug
AMQ-5075,12697002,,When a client attempts to connect and the attempt fails for things other than a security violation the broker should set a different ErrorCondition on the Proton transport.  For instance the InvalidClientIdException shouldn't trigger that error but instead should trigger an INVALID_FIELD condition.  ,Bug
AMQ-5067,12696211,,"Can't access connections.jsp with a networkConnector, cause  there is a ""nc.networkTTL"" in this pages but  no networkTTL in NetworkConnectorViewMBean. 

exception stack:
org.apache.jasper.JasperException: javax.el.PropertyNotFoundException: The class 'com.sun.proxy.$Proxy7' does not have t
he property 'networkTTL'.
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:418)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:652)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1320)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.obtainContent(SiteMeshFilter.java:129)
        at com.opensymphony.sitemesh.webapp.SiteMeshFilter.doFilter(SiteMeshFilter.java:77)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1291)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:443)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1044)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:372)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:189)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:978)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:521)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
        at org.eclipse.jetty.server.Server.handle(Server.java:367)
        at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:486)
        at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:926)
        at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:988
)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)
        at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
        at java.lang.Thread.run(Thread.java:722)",Bug
AMQ-5223,12720840,,Adding <packaging>bunde<packaging> fixes the issue,Bug
AMQ-5224,12720863,,PooledConnectionFactory#setConnectionFactory hides the XAConnectionFactory interface which is used by the resource manager.,Bug
AMQ-5222,12720635,,"I enabled deletion of Inactive Queue for POC every 10 seconds
<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""20mb""   gcInactiveDestinations=""true"" inactiveTimoutBeforeGC=""10000"">.

Now I start a Consumer Listener process..The Queue is created and then it is deleted though Consumer is still running and Active..I would expect this to should not be deleted as it still has active Queue

Looking @ code BaseDestination->markForGC(long timeStamp) & BaseDestination->canGC() seems to be suspect based on usage from RegionBroker->purgeInactiveDestinations
",Bug
AMQ-5233,12722436,,"Configure broker with :

    <amq:broker useJmx=""false"" persistent=""false"">
        <amq:transportConnectors>
            <amq:transportConnector name=""mqtt"" uri=""${jms.brokerurl}"">            
        </amq:transportConnectors>
        <amq:networkConnectors/>

        <amq:plugins>
            <amq:simpleAuthenticationPlugin>
                <amq:users>
                    <amq:authenticationUser username=""test"" password=""test"" groups=""admins,guests,users"" />
                </amq:users>
            </amq:simpleAuthenticationPlugin>
            <amq:authorizationPlugin>
                <amq:map>
                    <amq:authorizationMap>
                        <amq:authorizationEntries>
                            <amq:authorizationEntry queue="">"" read=""admins"" write=""admins"" admin=""admins"" />
                            <amq:authorizationEntry topic="">"" read=""admins"" write=""admins"" admin=""admins"" />
                            <amq:authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""admins"" write=""admins"" admin=""admins""/>
                        </amq:authorizationEntries>
                    </amq:authorizationMap>
                </amq:map>
            </amq:authorizationPlugin>
        </amq:plugins>
    </amq:broker>

Connecting with mosquittolib (C) with bad credential rise first ""on_connection"" event as the connection is OK, and next ""on_disconnection"" event. Expected behavior is failed connection with BAD CREDENTIAL reported error form broker.
",Bug
AMQ-5446,12756754,,"Found on cygwin/Windows 7 but should be application for Linux/Unix platform too 
If Java is installed in a directory containing space character, like c:\Program files\Java ,  activemq start command doesn't start 
Script doesn't report any error. activemq.pid file pid of a process which doesn't exist.



",Bug
AMQ-5430,12754428,,"We are currently testing levelDB on NFS. 

leveldb creates .log files in leveldb directory to store actual message/data and this files rotates after 100MB size. These .log files gets deleted when all the messages are consumed from a particular file. 

Issue: After all the messages are consumed I can see that files are getting deleted but internally they are creating .nfs files of same size. 
we have to restart the process to delete those .nfs files. 

From my understanding: It seems that the LevelDB store keeps the old logfiles open after they were deleted.

Below is the snapshot of files: 

amqtest@kepler19.nyc:/u/amqtest/dev/leveldb> ls -a
.nfs000000000082e7be0000fafe
.nfs0000000000960d1e0000eb46
.nfs00000000010332430000ea15
.nfs0000000000614cf10000eaef
.nfs0000000000960d1a0000ee3e
.nfs00000000010332420000e52d
dirty.index
store-version.txt
.nfs000000000082e7c3000100c5
.nfs0000000000960d1f0000f27f
00000000724ff92c.index
lock
00000000724ff92c.log
plist.index
--------------------------------------------------------------------------------------

amqtest@kepler19.nyc:/u/amqtest/dev/leveldb> du -sh .nfs*
107M .nfs0000000000614cf10000eaef
101M .nfs000000000082e7be0000fafe
101M .nfs000000000082e7c3000100c5
108M .nfs0000000000960d1a0000ee3e
106M .nfs0000000000960d1e0000eb46
104M .nfs0000000000960d1f0000f27f
101M .nfs00000000010332420000e52d
101M .nfs00000000010332430000ea15

Thanks,
Anuj",Bug
AMQ-5599,12776170,,"We encountered a situation where the startup of our broker fails sometimes. We investigated this and have seen that this is caused by a race condition.
When the BrokerService is configured to be async, the starting of the broker will hang when the starting of the PersistenceAdapter is faster than expected.

The ActiveMQ code will first start the persistence adapter, and then start the broker. When startup is configured to be 'async', these actions will happen async (in separate threads). Since these calls are async, we can not garuantee the order in which they will be finished. Although the ActiveMQ code now relies on the fact that the starting of the persistence adapter takes longer, and it waits in the starting of the broker for the starting of the persistence adapter to finish. When the starting of the persistence adapter already finished before the starting of the broker starts waiting for it, it will wait forever (and thus the broker cannot get started).

In the following snippet from org.apache.activemq.broker.BrokerService this becomes clear:

'startPersistenceAdapter' is fast and already notifies: persistenceAdapterLock.notifyAll();. 
'startBroker' will wait for notification but no one will ever notify it again: persistenceAdapterLock.wait();

---

startPersistenceAdapter(startAsync);
startBroker(startAsync);

private void startPersistenceAdapter(boolean async) throws Exception {
    if (async) {
        new Thread(""Persistence Adapter Starting Thread"") {
            @Override
            public void run() {
                try {
                    doStartPersistenceAdapter();
                } catch (Throwable e) {
                    startException = e;
                } finally {
                    synchronized (persistenceAdapterLock) {
                        persistenceAdapterLock.notifyAll();
                    }
                }
            }
        }.start();
    } else {
        doStartPersistenceAdapter();
    }
}

private void startBroker(boolean async) throws Exception {
    if (async) {
        new Thread(""Broker Starting Thread"") {
            @Override
            public void run() {
                try {
                    synchronized (persistenceAdapterLock) {
                        persistenceAdapterLock.wait();
                    }
                    doStartBroker();
                } catch (Throwable t) {
                    startException = t;
                }
            }
        }.start();
    } else {
        doStartBroker();
    }
}",Bug
AMQ-5318,12733038,,"The oracle v12 driver throws the following exception if commit() is called on a connection that has auto-commit enabled(see [1]) . This seems to be a change in behaviour since v11.  

{code}

caused by: java.sql.SQLException: Could not commit with auto-commit set on
	at oracle.jdbc.driver.PhysicalConnection.commit(PhysicalConnection.java:4443)
	at oracle.jdbc.driver.PhysicalConnection.commit(PhysicalConnection.java:4490)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:334)
	at org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:211)
	at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDropTables(DefaultJDBCAdapter.java:148)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.deleteAllMessages(JDBCPersistenceAdapter.java:534)
	... 40 more

{code}


In the org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter#doDropTables() it explicitly calls connection.commit() without checking if auto-commit is enabled.  In other places auto-commit does seem to be checked before commit is called  - org.apache.activemq.store.jdbc.TransactionContext#commit().

The v12 driver does allow  autocommit-SpecCompliance to be turned off by setting system property ""oracle.jdbc.autoCommitSpecCompliant=false"". But it does seem like org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter#doDropTables() is not strictly adhering to the spec. 

I think it would be better to do a check if auto-commit is on before calling connection.commit(). 


I will attach a github pull request with test and potential fix - for someone to review.
",Bug
AMQ-5299,12730956,,"When a duplicate subscription with differing QoS value is received the protocol converter does two onUnsubscribe calls, only one is needed.",Bug
AMQ-5298,12730935,,When a client subscribes to a Virtual Topic and sends a duplicate subscription request the method that resends the old retained messages tries to cast the destination from the TopicRegion is finds to a Topic but in this case it would be a VirtualTopicIntercepter and an exception is thrown disconnecting the client.,Bug
AMQ-5296,12730780,,"Web-console does not initialize under Spring-4.x because dispatcher-servlet.xml has very old bean definition.
See PR #37 (https://github.com/apache/activemq/pull/37)",Bug
AMQ-5288,12729497,,"Currently the MQTT protocol converter doesn't really try to map connection error into the MQTT spec codes.  We need to distinguish between bad client Ids and authentication issues.  We should return codes that match these error conditions

InvalidClientIdException - 0x02 Connection Refused, identifier rejected
CredentialException - 0x04 Connection Refused, bad user name or password
SecurityException - 0x05 Connection Refused, not authorized

",Bug
AMQ-5320,12733735,,"org.apache.activemq.management.SizeStatisticImpl has incorrect / misleading documentation for getters method.

I feel instead of time they should use size in documentation.",Bug
AMQ-5323,12734405,,"When you retrieve the JMSDeliveryMode property from an ActiveMQ message, it returns either ""PERSITENT"" or ""NON_PERSISTENT"".

However, when using the set property, it only supports either Integer values or Boolean values.

That is why is sensible to support the mapping from the above string representation (""PERSITENT"" or ""NON_PERSISTENT"") to integer (1 or 2).",Bug
AMQ-5306,12731718,,"When the performance test is triggered via the following flags, the resulting test run sends messages to two topics, as opposed to queues:

mvn activemq-perf:producer -Dproducer.composite=true -DsysTest.totalDests=2 -Dproducer.destName=queue://foo

Messages will be sent to topic://foo.0 and topic://foo.1.

Pull request incoming.",Bug
AMQ-5131,12706422,,,Bug
AMQ-5439,12755414,,"The sample for updateClusterFilter in  [1] uses

{code}
updateClusterFilter=""*A*,*B*"" /> 
{code}

This will throw an error as it does not appear to be a correct regular expression .

{code}
tcp://localhost/127.0.0.1:61617@63382 shutdown due to a local error: java.util.regex.PatternSyntaxException: Dangling meta character '*' near index 0
*A*
{code}


I think that is meant to be:


{code}
updateClusterFilter="".*A.*,.*B.*"" /> 
{code}

[1]http://activemq.apache.org/failover-transport-reference.html
",Bug
AMQ-5225,12720948,,"I've configured a 3 node activemq cluster using this as my guide: http://activemq.apache.org/replicated-leveldb-store.html

1) Startup activemq on 1st node.
2) Startup activemq on 2nd node

     At this point I see a log message on the 1st node stating it was promoted to master.  Next I see this Exception and am unable to connect to the broker.  Each time an activemq instance is promoted to master, this exception occurs and broker is left unusable.


java.io.IOException: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:552)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.replay_init(LevelDBClient.scala:657)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:558)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:235)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.MasterLevelDBStore.doStart(MasterLevelDBStore.scala:110)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$start_master$1.apply$mcV$sp(ElectingLevelDBStore.scala:226)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330)[hawtdispatch-scala-2.11-1.21.jar:1.21]
	at java.lang.Thread.run(Thread.java:744)[:1.7.0_51]
2014-06-12 19:02:32,350 | INFO  | Stopped LevelDB[/opt/apache-activemq-5.10.0/bin/linux-x86-64/../../data/leveldb] | org.apache.activemq.leveldb.LevelDBStore | LevelDB IOException handler.
",Bug
AMQ-5257,12724891,,"Are configured as follows：(I used this configuration in version of 5.9.1 is ok.)

<persistenceAdapter>
            <replicatedLevelDB directory=""${activemq.data}/leveldb"" replicas=""3"" bind=""tcp://0.0.0.0:0"" zkAddress=""192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181"" zkPath=""/activemq/leveldb-stores"" weight=""2""/>
            <!-- <kahaDB directory=""${activemq.data}/kahadb""/> -->
        </persistenceAdapter>


startup log: 
[amq@lin-mongo-65-181 bin]$ ./activemq console
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/amq/.activemqrc)

INFO: Invoke the following command to create a configuration file
./activemq setup [ /etc/default/activemq | /home/amq/.activemqrc ]

INFO: Using java '/usr/bin/java'
INFO: Starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+C)
Java Runtime: Oracle Corporation 1.7.0_60 /usr/java/jdk1.7.0_60/jre
  Heap sizes: current=2010624k  free=1979104k  max=5592576k
    JVM args: -Xms2G -Xmx6G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=/home/amq/apache-activemq-5.10.0/conf/login.config -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/home/amq/apache-activemq-5.10.0/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/home/amq/apache-activemq-5.10.0/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote -Djava.awt.headless=true -Djava.io.tmpdir=/home/amq/apache-activemq-5.10.0/tmp -Dactivemq.classpath=/home/amq/apache-activemq-5.10.0/conf; -Dactivemq.home=/home/amq/apache-activemq-5.10.0 -Dactivemq.base=/home/amq/apache-activemq-5.10.0 -Dactivemq.conf=/home/amq/apache-activemq-5.10.0/conf -Dactivemq.data=/amq_data
Extensions classpath:
  [/home/amq/apache-activemq-5.10.0/lib,/home/amq/apache-activemq-5.10.0/lib/camel,/home/amq/apache-activemq-5.10.0/lib/optional,/home/amq/apache-activemq-5.10.0/lib/web,/home/amq/apache-activemq-5.10.0/lib/extra]
ACTIVEMQ_HOME: /home/amq/apache-activemq-5.10.0
ACTIVEMQ_BASE: /home/amq/apache-activemq-5.10.0
ACTIVEMQ_CONF: /home/amq/apache-activemq-5.10.0/conf
ACTIVEMQ_DATA: /amq_data
Loading message broker from: xbean:activemq.xml
 INFO |AbstractApplicationContext.java:510| Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@781efa43: startup date [Wed Jul 02 14:43:11 CST 2014]; root of context hierarchy
 INFO |BrokerService.java:636| Using Persistence Adapter: Replicated LevelDB[/amq_data/leveldb, 192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181//activemq/leveldb-stores]
 INFO |ZKClient.java:343| Starting StateChangeDispatcher
 INFO |Environment.java:100| Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
 INFO |Environment.java:100| Client environment:host.name=lin-mongo-65-181.ofcardnis
 INFO |Environment.java:100| Client environment:java.version=1.7.0_60
 INFO |Environment.java:100| Client environment:java.vendor=Oracle Corporation
 INFO |Environment.java:100| Client environment:java.home=/usr/java/jdk1.7.0_60/jre
 INFO |Environment.java:100| Client environment:java.class.path=/home/amq/apache-activemq-5.10.0/bin/activemq.jar
 INFO |Environment.java:100| Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
 INFO |Environment.java:100| Client environment:java.io.tmpdir=/home/amq/apache-activemq-5.10.0/tmp
 INFO |Environment.java:100| Client environment:java.compiler=<NA>
 INFO |Environment.java:100| Client environment:os.name=Linux
 INFO |Environment.java:100| Client environment:os.arch=amd64
 INFO |Environment.java:100| Client environment:os.version=2.6.32-431.el6.x86_64
 INFO |Environment.java:100| Client environment:user.name=amq
 INFO |Environment.java:100| Client environment:user.home=/home/amq
 INFO |Environment.java:100| Client environment:user.dir=/home/amq/apache-activemq-5.10.0/bin
 INFO |ZooKeeper.java:438| Initiating client connection, connectString=192.168.65.183:2181,192.168.65.184:2181,192.168.65.185:2181 sessionTimeout=2000 watcher=org.apache.activemq.leveldb.replicated.groups.ZKClient@63a06d20
 WARN |ClientCnxn.java:949| SASL configuration failed: javax.security.auth.login.LoginException: No JAAS configuration section named 'Client' was found in specified JAAS configuration file: '/home/amq/apache-activemq-5.10.0/conf/login.config'. Will continue connection to Zookeeper server without SASL authentication, if Zookeeper server allows it.
 INFO |ClientCnxn.java:966| Opening socket connection to server 192.168.65.185/192.168.65.185:2181
 WARN |ZKClient.java:222| unprocessed event state: AuthFailed
 INFO |ClientCnxn.java:849| Socket connection established to 192.168.65.185/192.168.65.185:2181, initiating session
 INFO |ClientCnxn.java:1207| Session establishment complete on server 192.168.65.185/192.168.65.185:2181, sessionid = 0x346e18687c1164c, negotiated timeout = 4000
 INFO |Log.scala:93| Not enough cluster members connected to elect a master.
 INFO |Log.scala:93| Not enough cluster members connected to elect a master.
 INFO |Log.scala:93| Not enough cluster members have reported their update positions yet.
 INFO |Log.scala:93| Promoted to master
 WARN |ChangeListener.scala:102| listeners are taking too long to process the events
 WARN |ChangeListener.scala:102| listeners are taking too long to process the events
 INFO |Log.scala:93| Using the pure java LevelDB implementation.
 INFO |BrokerService.java:2561| No IOExceptionHandler registered, ignoring IO exception
java.io.IOException: com.google.common.base.Objects.firstNonNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.might_fail(LevelDBClient.scala:552)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.replay_init(LevelDBClient.scala:657)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBClient.start(LevelDBClient.scala:558)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.DBManager.start(DBManager.scala:648)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.LevelDBStore.doStart(LevelDBStore.scala:235)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.MasterLevelDBStore.doStart(MasterLevelDBStore.scala:110)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)[activemq-client-5.10.0.jar:5.10.0]
	at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$start_master$1.apply$mcV$sp(ElectingLevelDBStore.scala:226)[activemq-leveldb-store-5.10.0.jar:5.10.0]
	at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330)[hawtdispatch-scala-2.11-1.21.jar:1.21]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_60]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_60]
	at java.lang.Thread.run(Thread.java:745)[:1.7.0_60]
 INFO |Log.scala:93| Stopped LevelDB[/amq_data/leveldb]",Bug
AMQ-5243,12723341,,"Folder ""Program Files""
F:\Program Files\apache-activemq-5.10.0\bin>activemq.bat start
Error: Could not find or load main class Files\apache-activemq-5.10.0\bin\..\conf\login.config

*NOTE* If remove blank spaces from the file path, then it works.
Folder ""ProgramFiles""
F:\ProgramFiles\apache-activemq-5.10.0\bin>activemq.bat start",Bug
AMQ-5510,12765989,,"I have multiple listeners sharing same connection and the broker url has maxReconnectAttempts property set to 5.
If I restart the broker, the ActiveMQ layer tries 5 reconnect attempts then gives up and the listener throws up connection refused exception and then tries to refresh the jms connection and says its refreshed but there is not connection made to ActiveMQ and the listener again throws up connection refused exception and again refreshes the jms connection but fails. This process continues indefinitely.

However, I use single listener and no sharing of connection, this works fine. The ActiveMQ layers tries 5 reconnect attempts fails, listener throws up exception and again triggers reconnect attempts which does not happens in case of multiple listener.


This issue doesn't happen with ActiveMQ 5.8.0


Steps to reproduce this issue:

<bean id=""connectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">
        <property name=""brokerURL"" value=""failover:(tcp://<hostname1>:61616?wireFormat.maxInactivityDuration=120000,tcp://<hostname2>:61616?wireFormat.maxInactivityDuration=120000)?randomize=false&amp;maxReconnectAttempts=5"" />
    </bean>

<bean id=""jmsConnectionFactory""
        class=""org.apache.activemq.pool.PooledConnectionFactory""
        destroy-method=""stop"">
        <property name=""connectionFactory"" ref=""connectionFactory"" />
    </bean>

    <amq:topic id=""testTopic"" physicalName=""test.topic""/>

    <!-- The message listener container to invoke the consumer -->
    <bean id=""jmsContainer1""
        class=""org.springframework.jms.listener.DefaultMessageListenerContainer""
        p:connectionFactory-ref=""jmsConnectionFactory""
        p:destination-ref=""testTopic""
        p:pubSubDomain=""true""
        p:subscriptionDurable=""false""
        p:sessionTransacted=""true""
        p:messageListener-ref=""consumer"" />

    <bean id=""jmsContainer2""
        class=""org.springframework.jms.listener.DefaultMessageListenerContainer""
        p:connectionFactory-ref=""jmsConnectionFactory""
        p:destination-ref=""testTopic""
        p:pubSubDomain=""true""
        p:subscriptionDurable=""false""
        p:sessionTransacted=""true""
        p:messageListener-ref=""consumer"" />

Use this configuration and start the application.
Now restart the ActiveMQ broker once the listeners successfully connect.

Here are some logs:
[20141223 01:21:39.277 EST (ActiveMQ Task-3) org.apache.activemq.transport.failover.FailoverTransport#doReconnect 1089 ERROR] - Failed to connect to [tcp://a
rgon47.nyc:61616?wireFormat.maxInactivityDuration=120000, tcp://argon36.nyc:61616?wireFormat.maxInactivityDuration=120000] after: 5 attempt(s) 
[20141223 01:21:39.277 EST (ActiveMQ Task-3) org.apache.activemq.ActiveMQConnection#onAsyncException 2010 DEBUG] - Async exception with no exception listener
: java.net.ConnectException: Connection refused 
java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.279 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.transport.failover.FailoverTransport#stop 366 DEBUG] - Stopped unc
onnected 
[20141223 01:21:39.279 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.util.ThreadPoolUtils#shutdownNow 54 DEBUG] - Forcing shutdown of E
xecutorService: java.util.concurrent.ThreadPoolExecutor@31736876[Running, pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 5] 
[20141223 01:21:39.281 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.pool.PooledConnectionFactory$1$1#onException 110 INFO] - Expiring connection ActiveMQConnection {id=ID:cobalt14.nyc.deshaw.com-49500-1419315471791-1:1,clientId=ID:cobalt14.nyc.deshaw.com-49500-1419315471791-0:1,started=false} on IOException: java.net.ConnectException: Connection refused 
[20141223 01:21:39.281 EST (ActiveMQ Connection Executor: unconnected) org.apache.activemq.pool.PooledConnectionFactory$1$1#onException 111 DEBUG] - Expiring connection on IOException 
java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.282 EST (jmsContainer2-1) org.apache.activemq.jms.pool.PooledSession#close 119 WARN] - Caught exception trying rollback() when putting session back into the pool, will invalidate. javax.jms.IllegalStateException: The Session is closed 
javax.jms.IllegalStateException: The Session is closed
        at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:767)
        at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:588)
        at org.apache.activemq.jms.pool.PooledSession.close(PooledSession.java:116)
        at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1143)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1002)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.282 EST (jmsContainer1-1) org.apache.activemq.jms.pool.PooledSession#close 119 WARN] - Caught exception trying rollback() when putting session back into the pool, will invalidate. javax.jms.IllegalStateException: The Session is closed 
javax.jms.IllegalStateException: The Session is closed
        at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:767)
        at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:588)
        at org.apache.activemq.jms.pool.PooledSession.close(PooledSession.java:116)
        at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.clearResources(DefaultMessageListenerContainer.java:1143)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1002)
        at java.lang.Thread.run(Thread.java:745)
[20141223 01:21:39.283 EST (jmsContainer2-1) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: Connection refused 
javax.jms.JMSException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:484)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:631)
        at org.apache.activemq.jms.pool.PooledMessageConsumer.receive(PooledMessageConsumer.java:67)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:430)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:39.283 EST (jmsContainer1-1) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: Connection refused 
javax.jms.JMSException: Connection refused
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:484)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:631)
        at org.apache.activemq.jms.pool.PooledMessageConsumer.receive(PooledMessageConsumer.java:67)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.java:430)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:310)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1102)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:39.284 EST (jmsContainer2-1) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:39.284 EST (jmsContainer1-1) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:44.286 EST (jmsContainer1-2) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:44.286 EST (jmsContainer2-2) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
[20141223 01:21:44.288 EST (jmsContainer1-2) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:44.289 EST (jmsContainer2-2) org.springframework.jms.listener.DefaultMessageListenerContainer#refreshConnectionUntilSuccessful 891 INFO] - Successfully refreshed JMS Connection 
[20141223 01:21:49.291 EST (jmsContainer2-3) org.springframework.jms.listener.DefaultMessageListenerContainer#handleListenerSetupFailure 839 WARN] - Setup of JMS message listener invoker failed for destination 'topic://cometd.seedTCAStatusPush' - trying to recover. Cause: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused 
javax.jms.IllegalStateException: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:135)
        at org.apache.activemq.jms.pool.PooledConnection.createSession(PooledConnection.java:167)
        at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:197)
        at org.springframework.jms.listener.DefaultMessageListenerContainer.access$1400(DefaultMessageListenerContainer.java:119)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1122)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1094)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:991)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.activemq.ConnectionFailedException: The JMS connection has failed: Connection refused
        at org.apache.activemq.ActiveMQConnection.checkClosedOrFailed(ActiveMQConnection.java:1492)
        at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:327)
        at org.apache.activemq.jms.pool.ConnectionPool.makeSession(ConnectionPool.java:104)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:81)
        at org.apache.activemq.jms.pool.ConnectionPool$1.makeObject(ConnectionPool.java:66)
        at org.apache.commons.pool.impl.GenericKeyedObjectPool.borrowObject(GenericKeyedObjectPool.java:1220)
        at org.apache.activemq.jms.pool.ConnectionPool.createSession(ConnectionPool.java:133)
        ... 8 more
Caused by: java.net.ConnectException: Connection refused
        at java.net.PlainSocketImpl.socketConnect(Native Method)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
        at java.net.Socket.connect(Socket.java:589)
        at org.apache.activemq.transport.tcp.TcpTransport.connect(TcpTransport.java:501)
        at org.apache.activemq.transport.tcp.TcpTransport.doStart(TcpTransport.java:464)
        at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
        at org.apache.activemq.transport.AbstractInactivityMonitor.start(AbstractInactivityMonitor.java:138)
        at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:58)
        at org.apache.activemq.transport.WireFormatNegotiator.start(WireFormatNegotiator.java:72)
        at org.apache.activemq.transport.failover.FailoverTransport.doReconnect(FailoverTransport.java:1017)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:148)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:133)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        ... 1 more
This continues indefinitely. I checked lsof output at this point and there was no connection to ActiveMQ broker, so these connection attempts were not reaching the broker itself.
",Bug
AMQ-5524,12767995,,"On page http://activemq.apache.org/failover-transport-reference.html
the default for startupMaxReconnectAttempts is ""0"". In the code the actual default is ""-1"" (Infinite). 


",Bug
AMQ-5519,12767495,,"When attempting to unregister a DurableSubscription that does not exist via AMQP, the broker currently returns the ""amqp:internal-error"" condition when closing the link. Using the ""amqp:not-found"" condition would be more appropriate.",Bug
AMQ-5557,12771635,,"In my app we use lots of ephemeral queues which are active for a while, and then become inactive.

Queue GC is very important for us.

Right now , there is no safe way to use queue GC in this scenario if any future messages could come into the queue.  Even if there's a low probability of this happening.

Ideally the way this would work is if the queue is empty, and nothing is written to it for the inactiveTimoutBeforeGC interval than it is GCd... regardless of the number of consumers and producers.

If producers/consumers WANT to disconnect, they can listen to advisory messages that the queue has been GCd and then disconnect when the advisory message says that the queue has been destroyed.

Trying to emulate this by disconnecting yields tons of potential race bugs.

For example, if you have a 60 second window, and you have no messages written, so you close your consumer, it's totally possible that 1 message comes in 1ms after you disconnect.

You would have no way of knowing this.  This message would stay there, not consumed , forever.


",Bug
AMQ-7276,13251026,,"I am trying to establish mutual authentication over HTTPS transport but found that only the one way authentication is established.

Below is my code snippet:

 

+*Client Java Program:*+
{code:java}
System.setProperty(""javax.net.ssl.keyStore"", ""D://project//test//POC//client.ks"");
System.setProperty(""javax.net.ssl.keyStorePassword"", ""password"");
System.setProperty(""javax.net.ssl.trustStore"", ""D://project//test//POC//client.ts"");
System.setProperty(""javax.net.ssl.trustStorePassword"", ""password"");

cf=new ActiveMQConnectionFactory(""https://localhost:8443"");
con=cf.createConnection();
Session s=con.createSession(false,Session.AUTO_ACKNOWLEDGE);
Destination d;
d=s.createQueue(""TestQueue"");
MessageProducer mp;
mp=s.createProducer(d);
con.start();
// prepare the message
mp.send(message){code}
+*Active MQ configuration*+

 
{code:java}
<transportConnector name=""https"" uri=""https://localhost:8443?transport.needClientAuth=true""/>

<sslContext>
   <sslContext keyStore=""file:D:/project/test/POC/broker.ks""
    keyStorePassword=""password""
    trustStore=""file:D:/project/test/POC/broker.ts""
    trustStorePassword=""password""/>
</sslContext>{code}
 

While running the program, the message is being sent successfully but I am not finding any difference in the logs if ""*needClientAuth*"" is set to *false*.

If the transport connector is changed from https to ssl, I can view the detailed ssl handshake logs which implies that ""Mutual Authentication"" has been established",Bug
AMQ-5605,12776495,,"I've got a configuration with two master/slave setups consisting of 3 ActiveMQ instances each. They are deployed on three servers, with one ActiveMQ instance from each master/slave setup on every server. They are using the leveldb and zookeeper. Everything works fine.

Now I've got the strange behaviour that when I add a network connector to each ActiveMQ instance like this:
{code}
networkConnector name=""toMasterSlave02"" dynamicOnly=""true"" uri=""masterslave:(tcp://host1:61617,tcp://host2:61617,tcp://host3:61617)""
{code}

When you now restart the master of the master/slave setup that is targeted by the above network connector the cpu load on the current master goes and stays up at 100%, i.e. it uses one CPU per configured transportConnector.

Now the explanation, mostly copied from http://activemq.2283324.n4.nabble.com/High-CPU-load-with-network-connector-failover-transport-tp4691798.html
{quote}
When one of the brokers is restarted, the other broker uses ~400% CPU. The cause is the FailoverTransport reconnectTask spinning, and nothing is stopping the task.

Reverting this fix made for AMQ-5315, while it does reintroduce the NullPointerException, does handle failover properly without spinning:
https://git1-us-west.apache.org/repos/asf/activemq/repo?p=activemq.git;a=commitdiff;h=c391321d1b5b59542d847717654b0d4dba54cf2f <https://git1-us-west.apache.org/repos/asf/activemq/repo?p=activemq.git;a=commitdiff;h=c391321d1b5b59542d847717654b0d4dba54cf2f>

The reason it works after reverting that change is the NullPointerException is caught, -> serviceLocalException() -> ServiceSupport.dispose(getControllingService()); with the fix made in AMQ-5315, the dispose() call is never made. 
{quote}

Sorry, but I've got no clue how to provide a unit test for this. Maybe someone else can help.
",Bug
AMQ-5124,12704024,,"jolokia-agent is barfing an ugly exception on the console on activemq startup: 

 WARN | jolokia-agent: Cannot start discovery multicast handler: java.net.SocketException: Can't assign requested address
java.net.SocketException: Can't assign requested address
	at java.net.PlainDatagramSocketImpl.join(Native Method)
	at java.net.AbstractPlainDatagramSocketImpl.joinGroup(AbstractPlainDatagramSocketImpl.java:202)
	at java.net.MulticastSocket.joinGroup(MulticastSocket.java:402)
	at org.jolokia.discovery.MulticastUtil.joinMcGroupsOnAllNetworkInterfaces(MulticastUtil.java:136)
	at org.jolokia.discovery.MulticastUtil.newMulticastSocket(MulticastUtil.java:38)
	at org.jolokia.discovery.MulticastSocketListenerThread.<init>(MulticastSocketListenerThread.java:60)
	at org.jolokia.discovery.DiscoveryMulticastResponder.start(DiscoveryMulticastResponder.java:75)
	at org.jolokia.http.AgentServlet.initDiscoveryMulticast(AgentServlet.java:176)
	at org.jolokia.http.AgentServlet.init(AgentServlet.java:162)
	at org.eclipse.jetty.servlet.ServletHolder.initServlet(ServletHolder.java:477)
",Bug
AMQ-5612,12777330,,"Documentation states that {{logWriteBufferSize}} parameter is supported by LevelDB and ReplicatedLevelDB persistence adapters, but it is not - it's not even passing through schema validation on AMQ startup.",Bug
AMQ-5365,12742609,,"Setup:
Broker1 and Broker2 are networked using a duplex connection.
<Broker1> -------------- <Broker2>

Transport connector of Broker1:
-----------------------------------------
<transportConnector name=""mqtt""uri=""mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions”/>


Transport connector of Broker2:
-----------------------------------------
<transportConnector name=""mqtt""uri=""mqtt://0.0.0.0:2883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.subscriptionStrategy=mqtt-virtual-topic-subscriptions”/>

Problem:
In a network of brokers scenario with MQTT clients, sometimes the topic that is reported (to the clients) when the message is received has extra information prefixed to what the consumer subscribed to. For example, if the consumer received a message on topic dup/msg/test, it is received as:

Consumer/duptestsub:AT_LEAST_ONCE/VirtualTopic/dup/msg/tes",Bug
AMQ-5908,12850566,,The -Dconsumer.recvDelay flag has no effect when -Dconsumer.recvType=async (the default). ,Bug
AMQ-5817,12834279,,"Non-persistent messages either from high message producer or slow consumer left unchecked could cause a file handle leak.  The effect is many files being created under directory /<activemq_install>/data/leveldb/plist.index and ActiveMQ become unresponsive to where it cannot processing any messages until its process is bounced.



2015-06-01 10:58:21,674 | ERROR | Caught an Exception adding a message: ActiveMQTextMessage {commandId = 6904, responseRequired = false, messageId = ID:testico180l-45369-1432936489601-1:83688:1:1:6900, originalDestination = null, originalTransactionId = null, producerId = ID:testico180l-45369-1432936489601-1:83688:1:1, destination = queue://FOX.DEV.ERROR, transactionId = null, expiration = 0, timestamp = 1433174297512, arrival = 0, brokerInTime = 1433174301674, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@10a9ac16, marshalledProperties = org.apache.activemq.util.ByteSequence@7360e0e5, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {umh_call_chain=testico189l\testico189l_CIT\AMQ\20150601105821674\queue://FOX.DEV.ERROR, umh_origin_host=testico180l, umh_process_key=activemq_client, umh_application_version=5.11.1, umh_application_id=ActiveMQ, umh_routing_environment=DEV, umh_header_version=1.0.0, umh_routing_sub_environment=DEV, umh_message_id=EF81B0F3BD3740E1941EC1C44AB2F6D5, umh_release_id=20150522000000, tgenv=DEV, umh_channel=MQ}, readOnlyProperties = false, readOnlyBody = false, droppable = false, jmsXGroupFirstForConsumer = false, text = Test message} first to FilePendingMessageCursor  | org.apache.activemq.broker.region.cursors.FilePendingMessageCursor | ActiveMQ NIO Worker 2224
org.iq80.leveldb.impl.DbImpl$BackgroundProcessingException: java.io.FileNotFoundException: /activemq/data/leveldb/plist.index/291781.sst (Too many open files)
        at org.iq80.leveldb.impl.DbImpl.checkBackgroundException(DbImpl.java:411)[leveldb-0.6.jar:]
        at org.iq80.leveldb.impl.DbImpl.writeInternal(DbImpl.java:664)[leveldb-0.6.jar:]
        at org.iq80.leveldb.impl.DbImpl.put(DbImpl.java:630)[leveldb-0.6.jar:]
        at org.apache.activemq.leveldb.LevelDBClient$RichDB.put(LevelDBClient.scala:224)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBClient.plistPut(LevelDBClient.scala:1716)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.DBManager.plistPut(DBManager.scala:884)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBStore$LevelDBPList.add(LevelDBStore.scala:1050)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.leveldb.LevelDBStore$LevelDBPList.addLast(LevelDBStore.scala:1037)[activemq-leveldb-store-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:237)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:207)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueCursor.java:97)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.cursorAdd(Queue.java:1796)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.orderedCursorAdd(Queue.java:878)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:854)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.Queue.send(Queue.java:733)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:169)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)[activemq-broker-5.11.1.jar:5.11.1]
        at main.com.test.activemq.broker.plugin.umh.UnifiedMessageHeaderFilter.send(UnifiedMessageHeaderFilter.java:417)[test_activemq_broker_plugins.jar:]
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)[activemq-broker-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:138)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:69)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:97)[activemq-client-5.11.1.jar:5.11.1]
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)[activemq-client-5.11.1.jar:5.11.1]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)[:1.7.0_75]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)[:1.7.0_75]
        at java.lang.Thread.run(Thread.java:745)[:1.7.0_75]
",Bug
AMQ-5811,12833281,,"After deploying activemq-rar to EAP 6 and starting the server, it sometimes gives NoSuchElementException during shutdown, like:
{quote}
17:06:12,471 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) Exception in thread ""ResourceAdapterDeploymentService Thread Pool -- 1"" java.util.NoSuchElementException
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:925)
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.HashMap$KeyIterator.next(HashMap.java:956)
17:06:12,475 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.apache.activemq.ra.ActiveMQResourceAdapter.stop(ActiveMQResourceAdapter.java:152)
17:06:12,478 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService.unregisterAll(AbstractResourceAdapterDeploymentService.java:188)
17:06:12,478 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.ResourceAdapterXmlDeploymentService.unregisterAll(ResourceAdapterXmlDeploymentService.java:155)
17:06:12,479 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService$2.run(AbstractResourceAdapterDeploymentService.java:299)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at java.lang.Thread.run(Thread.java:745)
17:06:12,480 ERROR [stderr] (ResourceAdapterDeploymentService Thread Pool -- 1) 	at org.jboss.threads.JBossThread.run(JBossThread.java:122)
{quote}
",Bug
AMQ-5749,12825436,,"{code}
karaf@root()> feature:install activemq
Error executing command: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=activ
karaf.feature; version=""[5.11.1,5.11.1]""; filter:=""(&(osgi.identity=activemq)(type=karaf.feature)(version>=5.1
on<=5.11.1))"" [caused by: Unable to resolve activemq/5.11.1: missing requirement [activemq/5.11.1] osgi.identi
dentity=activemq-karaf; type=osgi.bundle; version=""[5.11.1,5.11.1]""; resolution:=mandatory [caused by: Unable
 activemq-karaf/5.11.1: missing requirement [activemq-karaf/5.11.1] osgi.wiring.package; filter:=""(&(osgi.wiri
=org.apache.felix.service.command)(version>=0.12.0)(!(version>=1.0.0)))""]]
{code}

In the previous version 5.10.0, the Import-Package: of this bundle has:
{code}
......
org.apache.felix.service.command;status=provisional;
......
{code}

but in the current 5.11.1 version, the Import-Package: looks like:
{code}
......
org.apache.felix.service.command;version=""[0.12,1)""
......
{code}",Bug
AMQ-5758,12826735,,DefaultIOExceptionHandler handles SQLException without checking if message is not null. This can cause NPE been thrown.,Bug
AMQ-5764,12827760,,"When the mirroredQueue destination interceptor is enabled in activemq.xml the purge button on the queues tab of the web console no longer works.

This is because the code that's invoked by this operation is broken, namely org.apache.activemq.web.LocalBrokerFacade.purgeQueue().

I have changed it in my local build to:

public void purgeQueue(ActiveMQDestination destination) throws Exception { 
getQueue(destination.getPhysicalName()).purge(); 
}

This new implementation works regardless of whether or not mirrored queues are enabled.",Bug
AMQ-6401,12998566,,"Using Jmeter, I am publishing 500 message to my virtual topic using 100 threads which is configure in Jmeter. I have 5 consumer. The issue I am facing is while sending 500 message from jmeter my consumer code consume 500 message but still I am seeing pending message = 5 and my consumers are also live.I tried with prefetch=1 and  <strictOrderDispatchPolicy /> but no luck. Any suggestion?",Bug
AMQ-5729,12821172,,"Each AuditLogEntry dumps all arguments for the method call to the Audit log.  Some of these arguments should not be logged as they may contain senstive information.  For example QueueView.sendTextMessage contains user password information.

Example Log Entry:
anonymous called org.apache.activemq.broker.jmx.QueueView.sendTextMessage[String, admin, mypassword] at 04-03-2013 11:00:00",Bug
AMQ-5954,12861802,,"We have a system using activeMQ and weblogic, where we found that after upgrading weblogic server from 12.1.1 to 12.1.3 the bridge stopped working. We've found the cause and fixed it (oracle refused to fix their code), and would like you to add the fix to activemq so we can remove the local hack we've made. Look for the ""//new code"" in the code sample furthest down in this description

Cause: Oracle changed the method getQueueName() in weblogic.jms.common.DestinationImpl.java so that it returns null if the object received is not the correct type (a Topic instead of a Queue for instance). In previous version the method returned the name regardless of type. The missing name casues the bridge to fail. 

The object received in our case is an implementation of the Destination interface, DistributedDestinationImpl, which implements both these interfaces in its parent class DestinationImpl. In org.apache.activemq.ActiveMQMessageTransformation.transformDestination(...) where the instanceof TemporaryQueue/TemporaryTopic++ tests will always return true for both TemporaryQueue and TemporaryTopic. The code will enter the first if() in the code below because of this and call the getQueueName() method even if it is a Topic, and will return null.  

ActiveMQMessageTransformation.java (old version): 
{code}
    public static ActiveMQDestination transformDestination(Destination destination) throws JMSException {
        ActiveMQDestination activeMQDestination = null;

        if (destination != null) {
            if (destination instanceof ActiveMQDestination) {
                return (ActiveMQDestination)destination;

            } else {
                if (destination instanceof TemporaryQueue) {
                    activeMQDestination = new ActiveMQTempQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof TemporaryTopic) {
                    activeMQDestination = new ActiveMQTempTopic(((Topic)destination).getTopicName());
                } else if (destination instanceof Queue) {
                    activeMQDestination = new ActiveMQQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof Topic) {
                    activeMQDestination = new ActiveMQTopic(((Topic)destination).getTopicName());
                }
            }
        }

        return activeMQDestination;
    }
{code}

The fixed version test for this case and calls the UnresolvableDestinationTransformer which was added to activemq as a response to issue AMQ-3401: 
{code}
    public static ActiveMQDestination transformDestination(Destination destination) throws JMSException {
        ActiveMQDestination activeMQDestination = null;

        if (destination != null) {
            if (destination instanceof ActiveMQDestination) {
                return (ActiveMQDestination)destination;

            } else {
                //start new code
                if (destination instanceof TemporaryQueue && destination instanceof TemporaryTopic) {
                    activeMQDestination = ActiveMQDestination.getUnresolvableDestinationTransformer().transform(destination);
                } else
                //end new code
                if (destination instanceof TemporaryQueue) {
                    activeMQDestination = new ActiveMQTempQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof TemporaryTopic) {
                    activeMQDestination = new ActiveMQTempTopic(((Topic)destination).getTopicName());
                } else if (destination instanceof Queue) {
                    activeMQDestination = new ActiveMQQueue(((Queue)destination).getQueueName());
                } else if (destination instanceof Topic) {
                    activeMQDestination = new ActiveMQTopic(((Topic)destination).getTopicName());
                }
            }
        }

        return activeMQDestination;
    }
{code}
",Bug
AMQ-5714,12819319,,"The pathCanonical method does not work as expected for directories that contain either single characters or 2 characters.  This is caused by the following entry -

{noformat}
echo ""${dst}"" | sed -e 's#//#/#g' -e 's#/./#/#g' -e 's#/[^/]*/../#/#g'
{noformat}

This can be resolved with the following changes -

{noformat}
echo ""${dst}"" | sed -e 's#//#/#g' -e 's#/\./#/#g' -e 's#/[^/]*/\.\./#/#g'
{noformat}

Example, before and after -

{noformat}
# echo /1/2/3/4/11/22/33/44/.././x | sed -e 's#//#/#g' -e 's#/./#/#g' -e 's#/[^/]*/../#/#g'
/2/22/../x

# echo /1/2/3/4/11/22/33/44/.././x | sed -e 's#//#/#g' -e 's#/\./#/#g' -e 's#/[^/]*/\.\./#/#g'
/1/2/3/4/11/22/33/x
{noformat}",Bug
AMQ-5608,12776887,,"If a SimpleAuthenticationPlugin is defined in the configuration without any users element, then when a client which does supply a username attempts to connect an NPE occurs in the broker.

E.g, defining broker config as:
{noformat}
<simpleAuthenticationPlugin anonymousAccessAllowed=""true"" />
{noformat}

And trying to log in, results in:
{noformat}
java.lang.NullPointerException
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:83)
...
<snip>
{noformat}",Bug
AMQ-6474,13014262,,"Hello,

when undeploying a Spring (4) webapp (JDK 1.8.101), we got a memory leak error message on a thread.


AVERTISSEMENT: The web application [venus] appears to have started a thread named [ActiveMQ InactivityMonitor Worker] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
 java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(Unknown Source)
 java.util.concurrent.SynchronousQueue$TransferStack.transfer(Unknown Source)
 java.util.concurrent.SynchronousQueue.poll(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.getTask(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
 java.lang.Thread.run(Unknown Source)
oct. 20, 2016 2:50:43 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads

when using an older version of active MQ 5.11.4 we don't get the error.

We notice the shutwon of factory thread pool is not made anymore ( 

inside class AbstractInactivityMonitor , method stopMonitorThreads 
this line has been removed: ThreadPoolUtils.shutdown(ASYNC_TASKS);

Could you fix it.

",Bug
AMQ-5849,12838565,,"The problem manifests itself when a big number of connections tries to re-establish the connection. Here is the scenario:
1. A client creates 10000 MQTT connections.
2. The server is cut off the client using the firewall on the server
3. Wait a couple of minutes to let the server close all connections
4. Restore the network connectivity
after some time the connections seem to be reconnected, but we observe connection thrashing - the client reports that some of the connection is lost, and the server reports that it is stealing connection as the client reconnects. This process keeps happening continuously and as it happens the number of threads keeps growing into 10000 and more.

If the connection stealing is disabled, the number of threads remains in low 100s.",Bug
AMQ-6195,12946985,,"Since version 5.11.3 (and maybe 5.11.2 but we can't download any release archive for this version) the fileserver webapp doesn't works out of the box.

Downloading archive from affected version, extracting it in a folder, and enabling fileserver context (when needed, as only recent release need to enable the context in jetty.xml) without changing anything else. Then we can't use the fileserver (in a browser we have a not found error, and in an application using blobmessage we have error on put method).

Little hack to solve the problem : replace files (webapps/fileserver/WEB-INF/classes/*) of any version (tested on 5.13.1) with files coming from release v5.11.1 makes the fileserver works again.",Bug
AMQ-5738,12822950,,When the AmqpSender link object for a non-durable consumer is closed it is retained in maps within AmqpSession and AmqpConnection and as result will remain in memory until the connection closes.,Bug
AMQ-5944,12858347,,"As mentioned in http://activemq.2283324.n4.nabble.com/OSGi-ClassNotFoundException-when-trying-to-upgrade-from-5-11-1-to-5-12-0-td4701124.html there's a classloading issue with commons-pool2.

It's apparently been fixed in more recent versions: POOL-289 POOL-292",Bug
AMQ-6262,12962170,,"A regression from https://issues.apache.org/jira/browse/AMQ-5794 .
Connection watchdog is started for every initiated connection and stopped on WireFormatInfo command. HTTP transport doesn't send WireFormatInfo so the watchdog never realises that the connection has been successfully established.

The connection gets terminated every 30seconds by the watchdog.
At the beginning, everything looks fine, but then you start getting exceptions and start losing packets. I haven't seen that myself, but I had people reporting that if HTTP transports are in use, it eventually destabilises the broker and affects non-HTTP transports too.

{noformat}
2016-04-22 10:32:46.029244500 2016-04-22 10:32:46,029 WARN [ActiveMQ InactivityMonitor Worker] [Transport] Transport Connection to: blockingQueue_28120594 failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive
2016-04-22 10:33:30.988313500 org.apache.activemq.transport.InactivityIOException: Channel was inactive (no connection attempt made) for too (>30000) long: blockingQueue_21644517
2016-04-22 10:33:30.988637500   at org.apache.activemq.transport.AbstractInactivityMonitor$1$1.run(AbstractInactivityMonitor.java:91)
2016-04-22 10:33:30.988667500   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
2016-04-22 10:33:30.988689500   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
2016-04-22 10:33:30.988717500   at java.lang.Thread.run(Thread.java:745)
{noformat}",Bug
AMQ-6851,13112104,,"The default broker behavior for message groups uses a CachedMessageGroupMap with a least-recently-used cache with a capacity of 1024. When more that 1024 group IDs are used messages can be consumed out-of-order.

Scenario.
Configure two consumers for a queue.
Send a message with group ID '0' that requires a long time to consume.
Send 1024 additional messages with group IDs '1' through '1024' that require a short time to consume.
Send a message of group ID '0' that requires a short time to consume.

Expected:
The second message in group '0' is consumed *after* the first message in group '0'

Actual:
The second message in group '0' is consumed *before* the first message in group '0' has finished.

The LRU cache is evicting the group to consumer mapping for group '0' before the second message arrives, allowing the second message in group '0' to be processed by a different consumer than the first message.
Using the MessageGroupHashBucket or the SimpleMessageGroupMap results in the expected behavior.

{code}
package com.example.outoforderjms;

import java.io.Serializable;
import java.time.Instant;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.jms.ConnectionFactory;
import org.apache.activemq.ActiveMQConnectionFactory;
import org.apache.activemq.pool.PooledConnectionFactory;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jms.annotation.EnableJms;
import org.springframework.jms.annotation.JmsListener;
import org.springframework.jms.config.DefaultJmsListenerContainerFactory;
import org.springframework.jms.core.JmsTemplate;
import org.springframework.jms.core.MessagePostProcessor;

@EnableJms
@Configuration
public class OutOfOrderJms {

  private static final int MODULUS = 1025;
  private static final int COUNT = MODULUS + 1;
  private static final String QUEUE_NAME = ""MessageGroupTest"";

  public static void main(String[] args) {
    AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();

    ctx.register(OutOfOrderJms.class);
    ctx.refresh();

    JmsTemplate template = new JmsTemplate();
    template.setConnectionFactory(CONNECTION_FACTORY);
    for (int i = 0; i < COUNT; i++) {
      SomeMessage someMessage = new SomeMessage(i, Integer.toString(i % MODULUS));
      if (someMessage.getGroup().equals(""0"")) {
        System.out.println(getTimeStamp() + "" "" + Thread.currentThread().getName() + "" producing message "" + someMessage);
      }
      template.convertAndSend(QUEUE_NAME, someMessage, getMessageGroupPostProcessor(someMessage));
    }
  }

  private static String getTimeStamp() {
    DateTimeFormatter formatter =
        DateTimeFormatter.ofPattern(""hh:mm:ss:SSSS"")
            .withLocale(Locale.US)
            .withZone(ZoneId.systemDefault());
    return formatter.format(Instant.now());
  }

  private static MessagePostProcessor getMessageGroupPostProcessor(Serializable object) {
    return message -> {
      SomeMessage m = ((SomeMessage) object);
      message.setStringProperty(
          ""JMSXGroupID"", m.getGroup());
      return message;
    };
  }

  @JmsListener(destination = QUEUE_NAME, containerFactory = ""containerFactory"")
  private void process(SomeMessage someMessage) throws InterruptedException {
  //  Simulate long-processing message for first message produced.
  if (someMessage.getMessage() == 0) {
      for (int i = 10; i > 0; i--) {
        Thread.sleep(1000);
        System.out.println(i + "" "");
      }
    }
    if (someMessage.getGroup().equals(""0"") || someMessage.getGroup().equals(""1"")) {
      System.out.println(getTimeStamp() + "" "" + Thread.currentThread().getName() + "" consuming message "" + someMessage);
    }
  }

  @Bean
  public DefaultJmsListenerContainerFactory containerFactory() {
    DefaultJmsListenerContainerFactory factory = new DefaultJmsListenerContainerFactory();
    factory.setConnectionFactory(CONNECTION_FACTORY);
    factory.setConcurrency(""1-2"");
    return factory;
  }

  private static ConnectionFactory CONNECTION_FACTORY = new PooledConnectionFactory(
      new ActiveMQConnectionFactory(
          ""admin"",
          ""admin"",
          ""failover:tcp://localhost:61616"")
  );

  private static class SomeMessage implements Serializable {
    private final int message;
    private final String group;

    private SomeMessage(int message, String group) {
      this.message = message;
      this.group = group;
    }


    int getMessage() {
      return message;
    }

    String getGroup() {
      return group;
    }

    @Override
    public String toString() {
      return ""SomeMessage{"" +
          ""message="" + message +
          "", group='"" + group + '\'' +
          '}';
    }
  }
}

{code}

Output shows message 1025 finishing before message 0
{code}
03:11:15:1730 main producing message SomeMessage{message=0, group='0'}
03:11:15:2220 DefaultMessageListenerContainer-2 consuming message SomeMessage{message=1, group='1'}
10 
9 
8 
03:11:18:9530 main producing message SomeMessage{message=1025, group='0'}
03:11:18:9540 DefaultMessageListenerContainer-2 consuming message SomeMessage{message=1025, group='0'}
7 
6 
5 
4 
3 
2 
1 
03:11:25:2130 DefaultMessageListenerContainer-1 consuming message SomeMessage{message=0, group='0'}
{code}",Bug
AMQ-6273,12963879,,"The v.5.12.1 release of class org.apache.activemq.network.jms.JmsConnector contains a defect within method *private void doInitializeConnection(boolean local) throws Exception* that causes the *attempt* variable to
 always retain a value of zero if ReconnectionPolicy.maxReconnectAttempts/maxInitialConnectAttempts == ReconnectionPolicy.INFINITE. (irrespective of the actual number of loop iterations)

This indirectly prevents the connector from using any of the following ReconnectionPolicy configuration properties:

private long initialReconnectDelay = 1000L;
private long maximumReconnectDelay = 30000;
private boolean useExponentialBackOff = false;
private double backOffMultiplier = 2.0;

The defect is triggered by inclusion of increment operator for *attempt* variable within do/while loop condition evaluation.  Line 630 of class JmsConnector uses short-circuit evaluation and this prevents value from being incremented whenever maxRetries == INFINITE  evaluates to true:

*while ((maxRetries == INFINITE || maxRetries > ++attempt) && !connectionService.isShutdown());*",Bug
AMQ-6055,12914824,,"SASL PLAIN authentication with AMQP doesn't take authzid into account and fails authentication when it's fully legal in SASL PLAIN.

See [PROTON-1055] for a more detailed description including debug logs.",Bug
AMQ-6499,13018716,,"The list of packages in the default value of the property `org.apache.activemq.SERIALIZABLE_PACKAGES` was updated to include {{javax.security}} for AMQ-6029 (see [this commit|https://github.com/apache/activemq/commit/d7a3b9406b8496c3f1508bebf3c7ff5367374b90]), but the documentation at http://activemq.apache.org/objectmessage.html was not updated.

Please update the documentation to reflect the set of packages required by the code so that someone overriding this property does not miss any of them.",Bug
AMQ-6154,12936311,,"Hi,

After updating to ActiveMQ 5.13.0 embedded ActiveMQ fails to start on Tomcat (was fine with 5.12.1).  It has MQTT feature and ws transport. It may be related to Jetty version update, however I am not sure.

Demo project is here: https://github.com/polivenok/activemq-mqtt-tomcat

Stacktrace:
 org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:154)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1675)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:465)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:415)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1471)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1312)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1404)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:832)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$256(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer.isEnabled(WebSocketServerContainerInitializer.java:122)
	at org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer.onStartup(WebSocketServerContainerInitializer.java:137)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5244)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 42 more

03-Feb-2016 12:47:07.849 SEVERE [RMI TCP Connection(3)-127.0.0.1] org.apache.tomcat.util.modeler.BaseModelMBean.invoke Exception invoking method manageApp
 java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:729)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1675)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:465)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:415)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1471)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1312)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1404)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:832)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$256(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

03-Feb-2016 12:47:07.850 SEVERE [RMI TCP Connection(3)-127.0.0.1] org.apache.tomcat.util.modeler.BaseModelMBean.invoke Exception invoking method createStandardContext
 javax.management.RuntimeOperationsException: Exception invoking method manageApp
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:308)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:465)
	at org.apache.catalina.mbeans.MBeanFactory.createStandardContext(MBeanFactory.java:415)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:819)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1471)
	at javax.management.remote.rmi.RMIConnectionImpl.access$300(RMIConnectionImpl.java:76)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1312)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1404)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:832)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)
	at sun.rmi.transport.Transport$1.run(Transport.java:200)
	at sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:568)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:826)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$256(TCPTransport.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:682)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: ContainerBase.addChild: start: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[]]
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:729)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.manageApp(HostConfig.java:1675)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.tomcat.util.modeler.BaseModelMBean.invoke(BaseModelMBean.java:300)
	... 33 more

Thanks,
Dmytro",Bug
AMQ-6241,12957736,,"Installing {{activemq-camel}} into a virgin Karaf 4.0.3 instance works. If {{camel-core}} gets installed before one attempts to install {{activemq-camel}}, the latter fails:

{noformat}
$ ./karaf
        __ __                  ____
       / //_/____ __________ _/ __/
      / ,<  / __ `/ ___/ __ `/ /_
     / /| |/ /_/ / /  / /_/ / __/
    /_/ |_|\__,_/_/   \__,_/_/

  Apache Karaf (4.0.3)

Hit '<tab>' for a list of available commands
and '[cmd] --help' for help on a specific command.
Hit '<ctrl-d>' or type 'system:shutdown' or 'logout' to shutdown Karaf.

karaf@root()> feature:repo-add activemq 5.13.2
Adding feature url mvn:org.apache.activemq/activemq-karaf/5.13.2/xml/features
karaf@root()> feature:repo-add camel 2.17.0
Adding feature url mvn:org.apache.camel.karaf/apache-camel/2.17.0/xml/features
karaf@root()> feature:install camel-core
karaf@root()> feature:install activemq
activemq                activemq-blueprint      activemq-broker         activemq-broker-noweb
activemq-camel          activemq-client         activemq-web-console
karaf@root()> feature:install activemq-camel
karaf@root()> bundle:list | grep -i activemq
59 | Active  |  80 | 5.13.2  | activemq-camel
60 | Failure |  80 | 5.13.2  | activemq-osgi
karaf@root()>
{noformat}

Error in Karaf log:

{noformat}
2016-04-11 17:25:25,093 | INFO  | nsole user karaf | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Adding features: activemq-camel/[5.13.2,5.13.2]
2016-04-11 17:25:25,804 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Changes to perform:
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   Region: root
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |     Bundles to install:
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.activemq/activemq-camel/5.13.2
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.activemq/activemq-osgi/5.13.2
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.camel/camel-blueprint/2.17.0
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.camel/camel-jms/2.17.0
2016-04-11 17:25:25,805 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.camel/camel-spring/2.17.0
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:commons-net/commons-net/3.3
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:commons-pool/commons-pool/1.6
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.commons/commons-pool2/2.4.2
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
2016-04-11 17:25:25,806 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.zookeeper/zookeeper/3.4.6
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.karaf.bundle/org.apache.karaf.bundle.springstate/4.0.3
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.spring/4.0.3
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/3.0_1
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/3.2.14.RELEASE_1
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/4.1.7.RELEASE_2
2016-04-11 17:25:25,807 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/4.2.2.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/3.2.14.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/4.1.7.RELEASE_2
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/4.2.2.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/3.2.14.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/4.1.7.RELEASE_2
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/4.2.2.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/3.2.14.RELEASE_1
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/4.1.7.RELEASE_2
2016-04-11 17:25:25,808 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/4.2.2.RELEASE_1
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/3.2.14.RELEASE_1
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/4.1.7.RELEASE_2
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/4.2.2.RELEASE_1
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/3.2.14.RELEASE_1
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/4.1.7.RELEASE_2
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/4.2.2.RELEASE_1
2016-04-11 17:25:25,809 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/3.2.14.RELEASE_1
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/4.2.2.RELEASE_1
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/3.2.14.RELEASE_1
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/4.1.7.RELEASE_2
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/4.2.2.RELEASE_1
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.apache.xbean/xbean-spring/3.18
2016-04-11 17:25:25,810 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.jvnet.jaxb2_commons/jaxb2-basics-runtime/0.6.4
2016-04-11 17:25:25,811 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-aop/3.1.4.RELEASE
2016-04-11 17:25:25,811 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-asm/3.1.4.RELEASE
2016-04-11 17:25:25,811 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-beans/3.1.4.RELEASE
2016-04-11 17:25:25,812 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-context/3.1.4.RELEASE
2016-04-11 17:25:25,812 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-context-support/3.1.4.RELEASE
2016-04-11 17:25:25,812 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-core/3.1.4.RELEASE
2016-04-11 17:25:25,812 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework/spring-expression/3.1.4.RELEASE
2016-04-11 17:25:25,812 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework.osgi/spring-osgi-core/1.2.1
2016-04-11 17:25:25,813 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework.osgi/spring-osgi-extender/1.2.1
2016-04-11 17:25:25,813 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework.osgi/spring-osgi-annotation/1.2.1
2016-04-11 17:25:25,813 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |       mvn:org.springframework.osgi/spring-osgi-io/1.2.1
2016-04-11 17:25:25,814 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Installing bundles:
2016-04-11 17:25:25,815 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.activemq/activemq-camel/5.13.2
2016-04-11 17:25:25,818 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.activemq/activemq-osgi/5.13.2
2016-04-11 17:25:25,869 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.camel/camel-blueprint/2.17.0
2016-04-11 17:25:25,875 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.camel/camel-jms/2.17.0
2016-04-11 17:25:25,878 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.camel/camel-spring/2.17.0
2016-04-11 17:25:25,898 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:commons-net/commons-net/3.3
2016-04-11 17:25:25,901 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:commons-pool/commons-pool/1.6
2016-04-11 17:25:25,904 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.commons/commons-pool2/2.4.2
2016-04-11 17:25:25,906 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1
2016-04-11 17:25:25,909 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1
2016-04-11 17:25:25,914 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1
2016-04-11 17:25:25,917 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.zookeeper/zookeeper/3.4.6
2016-04-11 17:25:25,923 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.karaf.bundle/org.apache.karaf.bundle.springstate/4.0.3
2016-04-11 17:25:25,926 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.spring/4.0.3
2016-04-11 17:25:25,932 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.aopalliance/1.0_6
2016-04-11 17:25:25,935 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.cglib/3.0_1
2016-04-11 17:25:25,941 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/3.2.14.RELEASE_1
2016-04-11 17:25:25,947 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/4.1.7.RELEASE_2
2016-04-11 17:25:25,953 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-aop/4.2.2.RELEASE_1
2016-04-11 17:25:25,959 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/3.2.14.RELEASE_1
2016-04-11 17:25:25,967 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/4.1.7.RELEASE_2
2016-04-11 17:25:25,975 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-beans/4.2.2.RELEASE_1
2016-04-11 17:25:25,981 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/3.2.14.RELEASE_1
2016-04-11 17:25:25,990 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/4.1.7.RELEASE_2
2016-04-11 17:25:26,000 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context/4.2.2.RELEASE_1
2016-04-11 17:25:26,010 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/3.2.14.RELEASE_1
2016-04-11 17:25:26,016 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/4.1.7.RELEASE_2
2016-04-11 17:25:26,022 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-context-support/4.2.2.RELEASE_1
2016-04-11 17:25:26,028 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/3.2.14.RELEASE_1
2016-04-11 17:25:26,035 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/4.1.7.RELEASE_2
2016-04-11 17:25:26,043 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-core/4.2.2.RELEASE_1
2016-04-11 17:25:26,054 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/3.2.14.RELEASE_1
2016-04-11 17:25:26,060 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/4.1.7.RELEASE_2
2016-04-11 17:25:26,064 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-expression/4.2.2.RELEASE_1
2016-04-11 17:25:26,067 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/3.2.14.RELEASE_1
2016-04-11 17:25:26,072 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-jms/4.2.2.RELEASE_1
2016-04-11 17:25:26,085 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/3.2.14.RELEASE_1
2016-04-11 17:25:26,091 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/4.1.7.RELEASE_2
2016-04-11 17:25:26,098 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.spring-tx/4.2.2.RELEASE_1
2016-04-11 17:25:26,107 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.apache.xbean/xbean-spring/3.18
2016-04-11 17:25:26,110 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.jvnet.jaxb2_commons/jaxb2-basics-runtime/0.6.4
2016-04-11 17:25:26,114 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-aop/3.1.4.RELEASE
2016-04-11 17:25:26,120 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-asm/3.1.4.RELEASE
2016-04-11 17:25:26,122 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-beans/3.1.4.RELEASE
2016-04-11 17:25:26,129 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-context/3.1.4.RELEASE
2016-04-11 17:25:26,138 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-context-support/3.1.4.RELEASE
2016-04-11 17:25:26,142 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-core/3.1.4.RELEASE
2016-04-11 17:25:26,149 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework/spring-expression/3.1.4.RELEASE
2016-04-11 17:25:26,154 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework.osgi/spring-osgi-core/1.2.1
2016-04-11 17:25:26,161 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework.osgi/spring-osgi-extender/1.2.1
2016-04-11 17:25:26,164 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework.osgi/spring-osgi-annotation/1.2.1
2016-04-11 17:25:26,167 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   mvn:org.springframework.osgi/spring-osgi-io/1.2.1
2016-04-11 17:25:26,175 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Stopping bundles:
2016-04-11 17:25:26,183 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.karaf.camel-karaf-commands/2.17.0
2016-04-11 17:25:26,184 | INFO  | pool-41-thread-1 | BlueprintExtender                | 13 - org.apache.aries.blueprint.core - 1.4.5 |   | Destroying BlueprintContainer for bundle org.apache.camel.karaf.camel-karaf-commands/2.17.0
2016-04-11 17:25:26,223 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-core/2.17.0
2016-04-11 17:25:26,226 | INFO  | pool-41-thread-1 | Activator                        | 54 - org.apache.camel.camel-core - 2.17.0 |   | Camel activator stopping
2016-04-11 17:25:26,227 | INFO  | pool-41-thread-1 | Activator                        | 54 - org.apache.camel.camel-core - 2.17.0 |   | Camel activator stopped
2016-04-11 17:25:26,227 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-commands-core/2.17.0
2016-04-11 17:25:26,228 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-catalog/2.17.0
2016-04-11 17:25:26,229 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Refreshing bundles:
2016-04-11 17:25:26,229 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |     org.apache.camel.camel-catalog/2.17.0 (Wired to org.apache.camel.camel-core/2.17.0 which is being refreshed)
2016-04-11 17:25:26,229 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |     org.apache.camel.camel-commands-core/2.17.0 (Wired to org.apache.camel.camel-core/2.17.0 which is being refreshed)
2016-04-11 17:25:26,230 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |     org.apache.camel.camel-core/2.17.0 (Should be wired to: org.apache.servicemix.bundles.spring-tx/4.2.2.RELEASE_1 (through [org.apache.camel.camel-core/2.17.0] osgi.wiring.package; filter:=""(osgi.wiring.package=org.springframework.transaction)""; resolution:=optional))
2016-04-11 17:25:26,230 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |     org.apache.camel.karaf.camel-karaf-commands/2.17.0 (Wired to org.apache.camel.camel-core/2.17.0 which is being refreshed)
2016-04-11 17:25:26,380 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Starting bundles:
2016-04-11 17:25:26,381 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.geronimo.specs.geronimo-jta_1.1_spec/1.1.1
2016-04-11 17:25:26,382 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.geronimo.specs.geronimo-jms_1.1_spec/1.1.1
2016-04-11 17:25:26,403 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.aopalliance/1.0.0.6
2016-04-11 17:25:26,404 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.asm/3.1.4.RELEASE
2016-04-11 17:25:26,404 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.cglib/3.0.0.1
2016-04-11 17:25:26,405 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-core/4.2.2.RELEASE_1
2016-04-11 17:25:26,405 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-beans/4.2.2.RELEASE_1
2016-04-11 17:25:26,406 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-aop/4.2.2.RELEASE_1
2016-04-11 17:25:26,406 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-expression/4.2.2.RELEASE_1
2016-04-11 17:25:26,407 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context/4.2.2.RELEASE_1
2016-04-11 17:25:26,407 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-tx/4.2.2.RELEASE_1
2016-04-11 17:25:26,408 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.karaf.deployer.spring/4.0.3
2016-04-11 17:25:26,414 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-core/3.2.14.RELEASE_1
2016-04-11 17:25:26,415 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-beans/3.2.14.RELEASE_1
2016-04-11 17:25:26,416 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-aop/3.2.14.RELEASE_1
2016-04-11 17:25:26,417 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-expression/3.2.14.RELEASE_1
2016-04-11 17:25:26,418 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context/3.2.14.RELEASE_1
2016-04-11 17:25:26,419 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-tx/3.2.14.RELEASE_1
2016-04-11 17:25:26,420 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context-support/3.2.14.RELEASE_1
2016-04-11 17:25:26,421 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-core/4.1.7.RELEASE_2
2016-04-11 17:25:26,421 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-beans/4.1.7.RELEASE_2
2016-04-11 17:25:26,422 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-aop/4.1.7.RELEASE_2
2016-04-11 17:25:26,423 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-expression/4.1.7.RELEASE_2
2016-04-11 17:25:26,424 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context/4.1.7.RELEASE_2
2016-04-11 17:25:26,424 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-tx/4.1.7.RELEASE_2
2016-04-11 17:25:26,425 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.core/3.1.4.RELEASE
2016-04-11 17:25:26,426 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.beans/3.1.4.RELEASE
2016-04-11 17:25:26,426 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.aop/3.1.4.RELEASE
2016-04-11 17:25:26,427 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.osgi.io/1.2.1
2016-04-11 17:25:26,427 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context-support/4.1.7.RELEASE_2
2016-04-11 17:25:26,428 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.expression/3.1.4.RELEASE
2016-04-11 17:25:26,429 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.context/3.1.4.RELEASE
2016-04-11 17:25:26,430 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-jms/4.2.2.RELEASE_1
2016-04-11 17:25:26,430 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.osgi.core/1.2.1
2016-04-11 17:25:26,432 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.osgi.extensions.annotations/1.2.1
2016-04-11 17:25:26,433 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.osgi.extender/1.2.1
2016-04-11 17:25:26,450 | INFO  | pool-41-thread-1 | ContextLoaderListener            | 108 - org.springframework.osgi.extender - 1.2.1 |   | Starting [org.springframework.osgi.extender] bundle v.[1.2.1]
2016-04-11 17:25:26,502 | INFO  | pool-41-thread-1 | ExtenderConfiguration            | 108 - org.springframework.osgi.extender - 1.2.1 |   | No custom extender configuration detected; using defaults...
2016-04-11 17:25:26,507 | INFO  | pool-41-thread-1 | TimerTaskExecutor                | 81 - org.apache.servicemix.bundles.spring-context - 3.2.14.RELEASE_1 |   | Initializing Timer
2016-04-11 17:25:26,578 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.karaf.bundle.springstate/4.0.3
2016-04-11 17:25:26,606 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-context-support/4.2.2.RELEASE_1
2016-04-11 17:25:26,607 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.servicemix.bundles.spring-jms/3.2.14.RELEASE_1
2016-04-11 17:25:26,608 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.springframework.context.support/3.1.4.RELEASE
2016-04-11 17:25:26,615 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-spring/2.17.0
2016-04-11 17:25:26,618 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-core/2.17.0
2016-04-11 17:25:26,620 | INFO  | pool-41-thread-1 | Activator                        | 54 - org.apache.camel.camel-core - 2.17.0 |   | Camel activator starting
2016-04-11 17:25:26,652 | INFO  | pool-41-thread-1 | Activator                        | 54 - org.apache.camel.camel-core - 2.17.0 |   | Camel activator started
2016-04-11 17:25:26,661 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-catalog/2.17.0
2016-04-11 17:25:26,663 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-commands-core/2.17.0
2016-04-11 17:25:26,665 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.commons.pool/1.6.0
2016-04-11 17:25:26,666 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.geronimo.specs.geronimo-j2ee-management_1.1_spec/1.0.1
2016-04-11 17:25:26,666 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-jms/2.17.0
2016-04-11 17:25:26,669 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.commons.net/3.3.0
2016-04-11 17:25:26,670 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.commons.pool2/2.4.2
2016-04-11 17:25:26,671 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.xbean.spring/3.18.0
2016-04-11 17:25:26,672 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.hadoop.zookeeper/3.4.6
2016-04-11 17:25:26,673 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.jvnet.jaxb2_commons.jaxb2-basics-runtime/0.6.4
2016-04-11 17:25:26,674 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.activemq.activemq-camel/5.13.2
2016-04-11 17:25:26,676 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.karaf.camel-karaf-commands/2.17.0
2016-04-11 17:25:26,766 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.camel.camel-blueprint/2.17.0
2016-04-11 17:25:26,780 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   |   org.apache.activemq.activemq-osgi/5.13.2
2016-04-11 17:25:26,802 | WARN  | pool-41-thread-1 | BeanRecipe                       | 13 - org.apache.aries.blueprint.core - 1.4.5 |   | Object to be destroyed is not an instance of UnwrapperedBeanHolder, type: null
2016-04-11 17:25:26,802 | ERROR | pool-41-thread-1 | BlueprintContainerImpl           | 13 - org.apache.aries.blueprint.core - 1.4.5 |   | Unable to start blueprint container for bundle org.apache.activemq.activemq-osgi/5.13.2
org.osgi.service.blueprint.container.ComponentDefinitionException: Unable to instantiate components
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:692)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:383)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:270)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:294)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:263)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:253)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500)[22:org.apache.aries.util:1.1.1]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433)[22:org.apache.aries.util:1.1.1]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725)[22:org.apache.aries.util:1.1.1]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463)[22:org.apache.aries.util:1.1.1]
	at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422)[22:org.apache.aries.util:1.1.1]
	at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1179)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.util.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:731)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:486)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4541)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.Felix.startBundle(Felix.java:2172)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:998)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.BundleImpl.start(BundleImpl.java:984)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.karaf.features.internal.service.FeaturesServiceImpl.startBundle(FeaturesServiceImpl.java:1189)[9:org.apache.karaf.features.core:4.0.3]
	at org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:836)[9:org.apache.karaf.features.core:4.0.3]
	at org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1079)[9:org.apache.karaf.features.core:4.0.3]
	at org.apache.karaf.features.internal.service.FeaturesServiceImpl$1.call(FeaturesServiceImpl.java:975)[9:org.apache.karaf.features.core:4.0.3]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[:1.8.0_77]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)[:1.8.0_77]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)[:1.8.0_77]
	at java.lang.Thread.run(Thread.java:745)[:1.8.0_77]
Caused by: java.lang.NoClassDefFoundError: org/springframework/osgi/context/support/OsgiBundleXmlApplicationContext
	at java.lang.Class.getDeclaredConstructors0(Native Method)[:1.8.0_77]
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2671)[:1.8.0_77]
	at java.lang.Class.getConstructors(Class.java:1651)[:1.8.0_77]
	at org.apache.aries.blueprint.container.BeanRecipe.findMatchingConstructors(BeanRecipe.java:533)
	at org.apache.aries.blueprint.container.BeanRecipe.getInstanceFromType(BeanRecipe.java:345)
	at org.apache.aries.blueprint.container.BeanRecipe.getInstance(BeanRecipe.java:282)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate2(BeanRecipe.java:830)
	at org.apache.aries.blueprint.container.BeanRecipe.internalCreate(BeanRecipe.java:811)
	at org.apache.aries.blueprint.di.AbstractRecipe$1.call(AbstractRecipe.java:79)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)[:1.8.0_77]
	at org.apache.aries.blueprint.di.AbstractRecipe.create(AbstractRecipe.java:88)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintRepository.createInstances(BlueprintRepository.java:247)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintRepository.createAll(BlueprintRepository.java:183)[13:org.apache.aries.blueprint.core:1.4.5]
	at org.apache.aries.blueprint.container.BlueprintContainerImpl.instantiateEagerComponents(BlueprintContainerImpl.java:688)[13:org.apache.aries.blueprint.core:1.4.5]
	... 25 more
Caused by: java.lang.ClassNotFoundException: org.springframework.osgi.context.support.OsgiBundleXmlApplicationContext not found by org.apache.activemq.activemq-osgi [60]
	at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1574)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.BundleWiringImpl.access$400(BundleWiringImpl.java:79)[org.apache.felix.framework-5.4.0.jar:]
	at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:2018)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)[:1.8.0_77]
	... 39 more
2016-04-11 17:25:26,825 | INFO  | pool-41-thread-1 | FeaturesServiceImpl              | 9 - org.apache.karaf.features.core - 4.0.3 |   | Done.
{noformat}

The problem arises with Camel version 2.17.0 (latest at the time of writing). Older Camel versions do not prevent installation of activemq-camel.",Bug
AMQ-6230,12956516,,"The new Camel version seems to cause the ActiveMQBrokerNdCamelFeatureTest test to fail.

https://builds.apache.org/view/A/view/ActiveMQ/job/ActiveMQ-Java8/lastBuild/org.apache.activemq$activemq-karaf-itest/testReport/org.apache.activemq.karaf.itest/ActiveMQBrokerNdCamelFeatureTest/test/

It looks like a bunch of work was done with Karaf and to get rid of Spring DM in the new version which is probably the issue as ActiveMQ still has the Spring DM stuff laying around.",Bug
AMQ-6210,12949802,,"SubQueueCacheSelectorPlugin stores selector data on temporary destinations.

I believe this is not necessary, as temporary destinations would cease to exist when their creator disconnects, And the creator is also usually their consumer in request-response scenarios.

This leads to ever growing cache file, and since this is just persisted in-memory map, also to unnecessary memory consumption.",Bug
AMQ-6213,12949994,,"If ActiveMQ is installed in a path with spaces (like: ""C:\Program Files\AMQ""), the batch files activemq.bat and activemq-admin.bat cannot start the service. 

The source of the issue appears to be that the -Djava.security.auth.login.config command line option is getting passed a raw path value that is not properly encoded for spaces in the path. I have a patch available that surrounds this parameter value with quotations.",Bug
AMQ-6268,12963433,,"On karaf 4.x plateform, with camel 2.17.0 and activemq 5.13.2 features, installs feature activemq-camel and then installs activemq-broker-noweb. The broker fails to start with error java.lang.ClassNotFoundException: org.apache.xbean.spring.context.v2.XBeanNamespaceHandler not found by org.apache.activemq.activemq-osgi.
This is not happening with camel 2.16.3
This is not happening either if activemq-camel is not installed.",Bug
AMQ-6338,12983404,,"When I startup activemq with openjdk, it shows
{code}
Java Runtime: Oracle Corporation 1.8.0_92-internal /usr/lib/jvm/java-1.8-openjdk/jre
{code}
but there is no oracle java in this environment. Also notice that the path points to the right vendor/path ""java-1.8-openjdk"". I traced that output down to:
activemq-console/src/main/java/org/apache/activemq/console/Main.java
{code}
buffer.append(System.getProperty(""java.vendor""));
{code}

If my limited maven/java skills are right, it grabs the version from 
activemq-openwire-generator/pom.xml:58
{code}
        <property>
          <name>java.vendor</name>
          <value>Oracle Corporation</value>
        </property>
{code}

That would be a rather static setup. It is irritating to show a wrong vendor, could you please make this more dynamic to reflect the jvm/jre vendor?",Bug
AMQ-6300,12971734,,"Hello,

i tried to use ActiveMQ in Combination with the Wildfly Application Server to establish a centrallogging acrhitecture. Some applications can write logging output through log4j JMSTopicAppender and on the Wildfly is a MDB which shall receive the message. 

BUT i get every time the 

06:45:58,259 ERROR [de.dropletinnovations.centrallogging.centralloggingsystem.LoggingMessageService] (default-threads - 24) Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class org.apache.log4j.spi.LoggingEvent! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes.

I've see at the page and added 

if [ -z ""$ACTIVEMQ_OPTS"" ] ; then
    ACTIVEMQ_OPTS=""$ACTIVEMQ_OPTS_MEMORY -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=$ACTIVEMQ_CONF/login.config -Dorg.apache.activemq.SERIALIZABLE_PACKAGES='*'""

I try it without quotes too but both didn't work.

thank a lot.

with best regards

Bjoern


",Bug
AMQ-6656,13063726,,"While accessing ActiveMQ Admin Panel section Scheduled I get the following error at web view:
{quote}
Exception occurred while processing this request, check the log for more information!
{quote}

Stacktrace from logs:
{code}
| WARN  |  | org.eclipse.jetty.servlet.ServletHandler | qtp1491860739-8662832
org.apache.jasper.JasperException: An exception occurred processing JSP page /scheduled.jsp at line 45

42:             </tr>
43:     </thead>
44:     <tbody>
45:             <c:forEach items=""${requestContext.brokerQuery.scheduledJobs}""
46:             var=""row"">
47:             <tr>
48:              <td><c:out value=""${row.jobId}""/></td>


Stacktrace:
        at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:568)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:470)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:405)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:349)[apache-jsp-8.0.9.M3.jar:2.3]
        at org.eclipse.jetty.jsp.JettyJspServlet.service(JettyJspServlet.java:107)[apache-jsp-9.2.13.v20150730.jar:9.2.13.v20150730]
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)[tomcat-servlet-api-8.0.24.jar:]
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)[spring-web-4.1.9.RELEASE.jar:4.1.9.RELEASE]
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)[spring-web-4.1.9.RELEASE.jar:4.1.9.RELEASE]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)[activemq-web-5.13.4.jar:5.13.4]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:102)[file:/opt/apache-activemq-5.13.4/webapps/admin/WEB-INF/classes/:]
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:542)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:110)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.Server.handle(Server.java:499)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)[jetty-all-9.2.13.v20150730.jar:9.2.13.v20150730]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_60]
{code}",Bug
AMQ-6523,13024163,,"After upgrading a 4 node cluster from 5.9.1 to 5.14.1 I'm seeing my amq logs spammed with 1000's of the following warnings. This was after shutting down all 4 instances, deleting the db and restarting them. 

It looks like the scheduler is stuck in a loop trying to deal with topics that have been deleted. I'm just wondering where the scheduler has picked up these tasks from given that the db was completely removed.

2016-11-29 15:14:55,555 | WARN  | Failed to browse Topic: my.custom.topic.123 | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[myBrokerName] Scheduler
java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.FixedCountSubscriptionRecoveryPolicy.browse(FixedCountSubscriptionRecoveryPolicy.java:102)[activemq-broker-5.14.1.jar:5.14.1]
	at org.apache.activemq.broker.region.policy.RetainedMessageSubscriptionRecoveryPolicy.browse(RetainedMessageSubscriptionRecoveryPolicy.java:111)[activemq-broker-5.14.1.jar:5.14.1]
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:674)[activemq-broker-5.14.1.jar:5.14.1]
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:69)[activemq-broker-5.14.1.jar:5.14.1]
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:780)[activemq-broker-5.14.1.jar:5.14.1]
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)[activemq-client-5.14.1.jar:5.14.1]
	at java.util.TimerThread.mainLoop(Timer.java:555)[:1.7.0_101]
	at java.util.TimerThread.run(Timer.java:505)[:1.7.0_101]",Bug
AMQ-6765,13085971,,"In the exception handling in the doStart() method of the HttpClientTransport vital debugging information is lost.

On line 282, for any encountered exception an IOException is thrown with the following message: '""Failed to perform GET on: "" + remoteUrl + "" as response was: "" + e.getMessage()'. Where e.getMessage() usually returns null.

It would be nicer if at least he http status code was logged, and maybe the stacktrace when trace is enabled.",Bug
AMQ-6563,13034654,,"MessageDatabase.load in the kahadb store implementation makes a call to ""IOHelper.mkdirs(directory);"" after acquiring the writeLock, but _outside_ of the try/finally which releases the writeLock.  if that method call fails, the writeLock would be left incorrectly locked.",Bug
AMQ-6710,13081322,,"
please include the tags in the pages in webapps/admin/xml, this somehow got forgotten when implementing AMQ-6620

{noformat}

<%@include file=""../WEB-INF/jspf/headertags.jspf"" %>

{noformat}
",Bug
AMQ-6685,13074542,,"We just upgraded from 5.13.3 to 5.14.5 and now when we try to get queue stats form /admin/xml/queues.jsp we get a page with the following errors: 

-=-=-=-=-=-=-=-=-=-=-=-=-=-
This page contains the following errors: 
error on line 4 at column 666: Namespace prefix c on forEach is not defined 
error on line 5 at column 14: Unescaped '<' not allowed in attributes values 
Below is a rendering of the page up to the first error.
-=-=-=-=-=-=-=-=-=-=-=-=-=-

There is nothing below the error message. I even tried deleting all the queues via the /admin/queues.jsp page then went back to the /admin/xml/queues.jsp page and still got the same error.",Bug
AMQ-6996,13166405,,"ActiveMQ 5.15.4 xercesImpl-2.11.0.jar which has one high severity CVE against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2012-0881 Severity:High  CVSS Score: 7.8 (AV:N/AC:L/Au:N/C:N/I:N/A:C)
CWE: CWE-399 Resource Management Errors
Apache Xerces2 Java allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=787104
MLIST - [oss-security] 20140708 Summer bug cleaning - some Hash DoS stuff
Vulnerable Software & Versions:
cpe:/a:apache:xerces2_java:2.11.0 and all previous versions",Bug
AMQ-6994,13166402,,"ActiveMQ 5.15.4 tomcat-servlet-api-8.0.24.jar  which has four high severity CVEs against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

Referenced In Projects/Scopes:
ActiveMQ :: Assembly:compile
ActiveMQ :: Web:provided
ActiveMQ :: Web Console:provided

CVE-2016-3092 Severity:High CVSS Score: 7.8 (AV:N/AC:L/Au:N/C:N/I:N/A:C)
CWE: CWE-20 Improper Input Validation
The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before
9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.
BID - 91453
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743480
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743722
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743738
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1743742
CONFIRM - http://tomcat.apache.org/security-7.html
CONFIRM - http://tomcat.apache.org/security-8.html
CONFIRM - http://tomcat.apache.org/security-9.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpujul2017-3236622.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
CONFIRM - http://www.oracle.com/technetwork/topics/security/bulletinjul2016-3090568.html
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1349468
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05204371
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05289840
CONFIRM - https://h20566.www2.hpe.com/portal/site/hpsc/public/kb/docDisplay?docId=emr_na-c05324759
DEBIAN - DSA-3609
DEBIAN - DSA-3611
DEBIAN - DSA-3614
GENTOO - GLSA-201705-09
JVN - JVN#89379547
JVNDB - JVNDB-2016-000121
MLIST - [dev] 20160621 CVE-2016-3092: Apache Commons Fileupload information disclosure vulnerability
REDHAT - RHSA-2016:2068
REDHAT - RHSA-2016:2069
REDHAT - RHSA-2016:2070
REDHAT - RHSA-2016:2071
REDHAT - RHSA-2016:2072
REDHAT - RHSA-2016:2599
REDHAT - RHSA-2016:2807
REDHAT - RHSA-2016:2808
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
SECTRACK - 1036427
SECTRACK - 1036900
SECTRACK - 1037029
SECTRACK - 1039606
SUSE - openSUSE-SU-2016:2252
UBUNTU - USN-3024-1
UBUNTU - USN-3027-1
Vulnerable Software & Versions: (show all)
cpe:/a:apache:tomcat:8.0.24

CVE-2016-5425  Severity:High CVSS Score: 7.2 (AV:L/AC:L/Au:N/C:C/I:C/A:C)
CWE: CWE-264 Permissions, Privileges, and Access Controls
The Tomcat package on Red Hat Enterprise Linux (RHEL) 7, Fedora, CentOS, Oracle Linux, and possibly other Linux distributions uses weak permissions for /usr/lib
/tmpfiles.d/tomcat.conf, which allows local users to gain root privileges by leveraging membership in the tomcat group.
BID - 93472
CONFIRM - http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2016-3090545.html
EXPLOIT-DB - 40488
MISC - http://legalhackers.com/advisories/Tomcat-RedHat-Pkgs-Root-PrivEsc-Exploit-CVE-2016-5425.html
MISC - http://packetstormsecurity.com/files/139041/Apache-Tomcat-8-7-6-Privilege-Escalation.html
MLIST - [oss-security] 20161010 CVE-2016-5425 - Apache Tomcat packaging on RedHat-based distros - Root Privilege Escalation (affecting CentOS, Fedora,
OracleLinux, RedHat etc.)
REDHAT - RHSA-2016:2046
SECTRACK - 1036979
Vulnerable Software & Versions:
cpe:/a:apache:tomcat


CVE-2016-6325   Severity:High  CVSS Score: 7.2 (AV:L/AC:L/Au:N/C:C/I:C/A:C)
CWE: CWE-264 Permissions, Privileges, and Access Controls
The Tomcat package on Red Hat Enterprise Linux (RHEL) 5 through 7, JBoss Web Server 3.0, and JBoss EWS 2 uses weak permissions for (1) /etc/sysconfig/tomcat and
(2) /etc/tomcat/tomcat.conf, which allows local users to gain privileges by leveraging membership in the tomcat group.
BID - 93478
CONFIRM - http://www.oracle.com/technetwork/topics/security/linuxbulletinoct2016-3090545.html
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1367447
REDHAT - RHSA-2016:2045
REDHAT - RHSA-2016:2046
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
Vulnerable Software & Versions:
cpe:/a:apache:tomcat:-


CVE-2016-8735 Severity:High CVSS Score: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P)
CWE: CWE-284 Improper Access Control
Remote code execution is possible with Apache Tomcat before 6.0.48, 7.x before 7.0.73, 8.x before 8.0.39, 8.5.x before 8.5.7, and 9.x before 9.0.0.M12 if
JmxRemoteLifecycleListener is used and an attacker can reach JMX ports. The issue exists because this listener wasn't updated for consistency with the CVE-2016-3427
Oracle patch that affected credential types.
BID - 94463
CONFIRM - http://seclists.org/oss-sec/2016/q4/502
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767644
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767656
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767676
CONFIRM - http://svn.apache.org/viewvc?view=revision&revision=1767684
CONFIRM - http://tomcat.apache.org/security-6.html
CONFIRM - http://tomcat.apache.org/security-7.html
CONFIRM - http://tomcat.apache.org/security-8.html
CONFIRM - http://tomcat.apache.org/security-9.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html
CONFIRM - http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html
CONFIRM - https://security.netapp.com/advisory/ntap-20180607-0001/
DEBIAN - DSA-3738
REDHAT - RHSA-2017:0455
REDHAT - RHSA-2017:0456
REDHAT - RHSA-2017:0457
SECTRACK - 1037331
Vulnerable Software & Versions: (show all)",Bug
AMQ-7019,13173951,,"ActiveMQ 5.15.4 jolokia.jar which has one high severity CVE against it.
Discovered by adding OWASP Dependency check into ActiveMQ pom.xml and running the OWASP report.

CVE-2015-5182 Severity:High  CVSS Score: 6.8 
allows Cross-site request forgery (CSRF) vulnerability in the jolokia API in A-MQ. 
CONFIRM - https://bugzilla.redhat.com/show_bug.cgi?id=1248809 CONFIRM",Bug
AMQ-7012,13172586,,"From time to time I see the following log line for STOMP: 

 

{{2018-07-17 07:31:22,204 | WARN  | Exception occurred processing: <Unknown> -> org.apache.activemq.transport.stomp.ProtocolException: No subscription matched. | org.apache.activemq.transport.stomp.ProtocolConverter | ActiveMQ NIO Worker 1186}}

 

 

The misleading part is ""<Unknown>"", the unknown is suppose to be the STOMP's action word (SEND, SUBSCRIBE etc). 

The problem seems to be 
{code:java}
 org.apache.activemq.transport.stomp.ProtocolConverter.safeGetAction(){code}
that is comparing the STOMP action word with constants defined in 
{code:java}
org.apache.activemq.transport.stomp.ProtocolConverter.Stomp.Commands{code}
But for subscribe and unsubscribe the constants are defined as ""SUB"" and ""UNSUB"" which does not match the actual STOMP action verbs.

 ",Bug
AMQ-7093,13196926,,AMQ-7082 was implemented to create a concurrent thread to handle the free page recovery.  It was included as a part of 5.15.7.  There was some additional add-on coding that was not a part of that release which had introduced some potential bugs.  This was made to track the additional commits for this.,Bug
AMQ-7089,13195794,,"On my Linux machine I have been running ActiveMQ on a filesystem setup like this:
{noformat}
Filesystem Size Used Avail Use% Mounted on
/dev/nvme0n1p1 407G 299G 88G 78% /
...
/dev/nvme1n1p2 477G 443G 35G 93% /media/sits/DATA
{noformat}
When I call broker.setDataDirectoryFile(""/media/sits/DATA/activemq') after broker initialisation it reports the amount of free temp space usage is the free space on '/', not on '/media/sits/DATA'.

The culprit is BrokerService.checkTmpStorageUsageLimits() calls checkUsageLimit(tmpDir, usage.getTempUsage(), usage.getTempUsage().getPercentLimit()) which ultimately calls this code:
{code}
    protected void checkUsageLimit(File dir, Usage<?> storeUsage, int percentLimit) throws ConfigurationException {
        if (dir != null) {
            dir = StoreUtil.findParentDirectory(dir);
            String storeName = storeUsage instanceof StoreUsage ? ""Store"" : ""Temporary Store"";
            long storeLimit = storeUsage.getLimit();
            long storeCurrent = storeUsage.getUsage();
            long totalSpace = dir.getTotalSpace();
{code}
The problem is StoreUtil is broken on Linux (and probably other OS's) since you can mount a filesystems in non-root locations.  Even on Windows this is possible.
{code}
    public static File findParentDirectory(File dir) {
        if (dir != null) {
            String dirPath = dir.getAbsolutePath();
            if (!dir.isAbsolute()) {
                dir = new File(dirPath);
            }

            while (dir != null && !dir.isDirectory()) {
                dir = dir.getParentFile();
            }
        }
        return dir;
    }
{code}
On Linux this will always go to '/' and use that for reporting free space which is clearly wrong.

There are only a few usages of this method.  My proposal is to nuke this method and instead update the clients to just call Files.getFileStore(Path path) and then FileStore.getTotalSpace() and FileStore.getUsableSpace.

I'm happy to submit a PR if people are happy with the approach?

",Bug
AMQ-6956,13157274,,"When I connect and disconnect from a broker using the activemq-client, sometimes I get the exception below. ssl:// is used. The exception appears when the client is disconnecting.

The broker in this case is the current snapshot of ActiveMQ Artemis.

Good test for reproducing is {{org.apache.activemq.artemis.tests.integration.security.SecurityTest#testJAASSecurityManagerAuthenticationWithCertsAndOpenWire}}.

I saw it in conjunction with the {{flush()}} exception from Netty, discussed on ARTEMIS-1804. It turns out the flush{} exception is probably unrelated to this one, because it appeared in the server log every time and seems harmless.

The exception below appears on the client in about 1 % of runs of the aforementioned tests (so it must be run in a loop to see this happen). For some reason, this error appears to me more often on Travis CI (linked from the Artemis bug)

The exception is

{noformat}
javax.jms.JMSException: Connection closed by remote host
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1310)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:696)
	at com.redhat.mqe.lib.CoreClient.close(CoreClient.java:302)
	at com.redhat.mqe.lib.CoreClient.closeConnObjects(CoreClient.java:295)
	at com.redhat.mqe.lib.SenderClient.startClient(SenderClient.java:156)
	at com.redhat.mqe.lib.Main.main(Main.java:50)
	at com.redhat.mqe.aoc.Main.main(Main.java:74)
	at AocMainTest.main(MainTest.kt:113)
	at AbstractMainTest$sendSingleMessageAllTrustingTls$1.invoke(AbstractMainTest.kt:404)
	at AbstractMainTest$sendSingleMessageAllTrustingTls$1.invoke(AbstractMainTest.kt:75)
	at AbstractMainTestKt.assertNoSystemExit(AbstractMainTest.kt:66)
	at AbstractMainTest.sendSingleMessageAllTrustingTls(AbstractMainTest.kt:398)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:436)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:170)
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:166)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:113)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:58)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:112)
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$2(HierarchicalTestExecutor.java:120)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.lambda$executeRecursively$3(HierarchicalTestExecutor.java:120)
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.executeRecursively(HierarchicalTestExecutor.java:108)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:79)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:67)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: java.net.SocketException: Connection closed by remote host
	at sun.security.ssl.SSLSocketImpl.checkWrite(SSLSocketImpl.java:1565)
	at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:124)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:123)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:194)
	at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:335)
	at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:317)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:94)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:116)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1308)
	... 64 more
{noformat}",Bug
AMQ-5784,12831333,,"activemq in combination with jetty9 does not work for websockets + mqtt.
patch: http://pastebin.com/phcsJHR5
I tested with the chat example coming with activemq with all browsers.",Bug
AMQ-6238,12957396,,"To reduce the load on the ASF mirrors, projects are required to delete old releases [1]

Please can you remove all non-current releases?

Thanks!

Note: you can still reference superseded versions from the download page, but the links should be adjusted to point to the archive server.

[1] http://www.apache.org/dev/release.html#when-to-archive",Bug
AMQ-6280,12964748,,"The documentation at http://activemq.apache.org/how-do-i-use-ssl.html uses inconsistent names for the keystore & trustStore files, so a user trying to follow the steps exactly as a tutorial will run into problems.

In particular it alternates between using ""server.keystore"" and ""client.keystore"" vs ""broker.ts"" and ""client.ks"".

The separation between server authentication and client authentication certificates also isn't as clean as it could be. If you're only doing server authentication than is the trustStore configuration required or only the keystore?",Bug
AMQ-5680,12783576,,"The following code is a near-copy of the .getTempTopics() right above - without the change of the ""if (destination.isTopic()..."" to ""if (destination.isQueue()...""

{code}
    /**
     * Retrieve a set of all TemporaryQueues be used by the Broker
     * @return  all TemporaryQueues
     */
    public Set<ActiveMQTempQueue> getTempQueues(){
        Set<ActiveMQTempQueue> result = new HashSet<ActiveMQTempQueue>();
        for (ActiveMQDestination destination:getDestinations()){
            if (destination.isTopic() && destination.isTemporary()){
                result.add((ActiveMQTempQueue) destination);
            }
        }
        return result;
    }
{code}
",Bug
AMQ-5627,12778990,,"The following page contains dead picture links:
http://activemq.apache.org/scaling-the-depth-of-a-queue.html",Bug
AMQ-5929,12856191,,"http://activemq.apache.org/unix-shell-script.html#UnixShellScript-Runningmultipleinstances

in example script change ""2>>&1"" to ""2>&1""",Bug
AMQ-7163,13220055,,"Hi,

This is related to AMQ-7082.

If the broker had an unclean shutdown and the recovery thread didn't find any free pages (newFreePages is empty the recovery), the broker will have a second unclean shutdown - and this will happens to any future restart as long as the number of free pages is = 0 

 

See:

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L484]

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L584]

 

[https://github.com/apache/activemq/blob/9e6543551731ef0241967ca545c9a4956876cb86/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/page/PageFile.java#L527]

 ",Bug
AMQ-7013,13172927,,"XATransactionID hash function may generate duplicates.

Scenario:

XID formatId, GlobalTransaction, and BranchQualifier values are identical for many entries. We need to use a better hash function to avoid populating a map with many entries in the same bucket (results in bucket having O(n) performance on recovery).

Example using existing Hash Function:
2018-07-18 06:13:29,866 | INFO  | Recovering from the journal @1:28 | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 06:23:04,070 | INFO  | @2:484592, 100000 entries recovered .. | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 06:23:04,099 | INFO  | Recovery replayed 100453 operations from the journal in 574.233 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main 

Using JenkinsHash:
2018-07-18 10:58:43,713 | INFO  | Recovering from the journal @1:28 | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 10:58:51,302 | INFO  | @2:484592, 100000 entries recovered .. | org.apache.activemq.store.kahadb.MessageDatabase | main
2018-07-18 10:58:51,329 | INFO  | Recovery replayed 100453 operations from the journal in 7.618 seconds. | org.apache.activemq.store.kahadb.MessageDatabase | main",Bug
AMQ-5487,12761325,,"Hi.I'm a tester.I'm not a developer. I used to be able to enter http://localhost:8161/admin on my web browser and see the broker.I'm not able to anymore. I'm following instructions on http://activemq.apache.org/version-5-run-broker.html but I don't understand what it means by 'The binary distribution of ActiveMQ comes with a script called 'activemq' which allows you to run a broker. Typing the following will run an ActiveMQ Broker using the out of the box configuration
activemq
There are a number of different command line options to be able to run a broker. To see them type
activemq -?
For more details regarding the activemq script file and other script files refer to ActiveMQ Command Line Tools Reference
You can then use a Broker Configuration URI to specify how to start and configure your broker using a single URI. For example
activemq broker:(tcp://localhost:61616,network:static:tcp://remotehost:61616)?persistent=false&useJmx=true'",Bug
AMQ-4936,12684704,,"Nightly builds / snapshots which are not formal releases should not be linked from the main download page.
Such builds have not been voted on and should only be used by developers who should be made aware that the code is without any guarantees.
Nightly builds are not formal ASF releases, and must not be promoted to the general public.
See [1] second para. The second sentence states:
""Do not include any links on the project website that might encourage non-developers to download and use nightly builds, snapshots, release candidates, or any other similar package.""

[1] http://www.apache.org/dev/release.html#what
",Bug
AMQ-5100,12701319,,"I have attempted to configure PKCS11/NSS support in ActiveMQ, however, I am receiving the following exception:

Caused by: java.io.FileNotFoundException: class path resource [NONE] cannot be opened because it does not exist
        at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)
        at org.apache.activemq.spring.SpringSslContext.createKeyManagerKeyStore(SpringSslContext.java:119)
        at org.apache.activemq.spring.SpringSslContext.createKeyManagers(SpringSslContext.java:88)
        at org.apache.activemq.spring.SpringSslContext.afterPropertiesSet(SpringSslContext.java:65)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:622)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1581)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1522)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)
        ... 40 more

My configured sslContext for the broker looks like this:

        <sslContext>
                <sslContext
                        keyStore=""NONE"" keyStoreType=""PKCS11"" keyStorePassword=""password""
                        trustStore=""/etc/activemqssl/truststore.jks"" trustStorePassword=""password""
                />
        </sslContext>

AFAIK, setting keyStore to ""NONE"" is the generally accepted way to do with with PKCS11. The code should generate a warning at most for this, but instead I receive the above exception and a failure to load the keystore.

The activemq code looks like this (in org.apache.activemq.spring.SpringSslContext):
    private KeyStore createKeyManagerKeyStore() throws Exception {
        if( keyStore ==null ) {
            return null;
        }

        KeyStore ks = KeyStore.getInstance(keyStoreType);
        InputStream is=Utils.resourceFromString(keyStore).getInputStream();
        try {
            ks.load(is, keyStorePassword==null? null : keyStorePassword.toCharArray());
        } finally {
            is.close();
        }
        return ks;
    }

It looks like this should just be setting ""is"" to null, generating a warning, and then calling ks.load with the null inputstream (the nss library will load the nss files based upon the nss.cfg file).
",Bug
AMQ-4877,12678820,,"This test fails intermittently, usually on slower boxes.  It will get a stack trace like the one shown below.  The root cause can be seen in the log:

2013-11-09 11:04:19,771 [JMX connector  ] - WARN  ManagementContext              - Failed to start JMX connector Cannot bind to URL [rmi://localhost:1099/jmxrmi]: javax.naming.NameAlreadyBoundException: jmxrmi [Root exception is java.rmi.AlreadyBoundException: jmxrmi]. Will restart management to re-create JMX connector, trying to remedy this issue.

This appears to be the result of a quick server shutdown/restart.  I'll add a sleep to the test to avoid this.


java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at com.sun.net.ssl.internal.ssl.InputRecord.readFully(InputRecord.java:422)
	at com.sun.net.ssl.internal.ssl.InputRecord.read(InputRecord.java:460)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.readRecord(SSLSocketImpl.java:863)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.performInitialHandshake(SSLSocketImpl.java:1188)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1215)
	at com.sun.net.ssl.internal.ssl.SSLSocketImpl.startHandshake(SSLSocketImpl.java:1199)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.verifySslCredentials(SslContextNBrokerServiceTest.java:76)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.verifyCredentials(SslContextNBrokerServiceTest.java:57)
	at org.apache.activemq.transport.tcp.SslContextNBrokerServiceTest.testConfigurationIsolation(SslContextNBrokerServiceTest.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:255)
	at junit.framework.TestSuite.run(TestSuite.java:250)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)",Bug
AMQ-5360,12741777,,"The wild card mapping table in the following documentation page is wrong:
http://activemq.apache.org/mqtt.html

The correct mapping should be the following:

'.' => '/'
'*' => '+'
'>' => '#'

so in ActiveMQ wildcard '*' should map to single-level wildcard '+' in MQTT while wildcard '>' should map to multi-level wildcard '#' in MQTT.

http://activemq.apache.org/wildcards.html
http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/MQTT_V3.1_Protocol_Specific.pdf
",Bug
AMQ-4810,12674067,,"Trying the LevelDB store on a recent ActiveMQ 5.9 snapshot, it seems that the broker does not remove useless files.

I currently have a broker with no messages at all (all queues are empty and the TotalMessageCount is at 0) but plenty of LevelDB files:

# du -ks leveldb
1388380	leveldb
# find leveldb -type f | wc -l
2419

Maybe this is related to https://issues.apache.org/jira/browse/APLO-245?",Bug
AMQ-4811,12674307,,"Page http://activemq.apache.org/hermes-jms.html
refers to old versions of ActiveMQ.
Can this be updated (perhaps make it version-agnostic).

Also there's a link to http://activemq.apache.org/hermes-screenshot.html
But that page does not actually show a screenshot.
",Bug
AMQ-4726,12669009,,"The ant build.xml file of activemq reports that ""durable option"" will create a durable subscriber

{code}
     [echo]             ant producer <options> - Creates a producer publishing a number of messages
     [echo]
     [echo]             Producer Options:
     [echo]                             url - Used to specify acustom URL for the broker,
     [echo]                                   e.g., tcp://hostname:1234
     [echo]                           topic - A boolean to determine whether to use topics
     [echo] 		                        or queues
     [echo]                         subject - Used to specify a custom destination name,
     [echo]                                   e.g. MyDestination
     [echo]                         durable - A boolean to specify that you want to create
     [echo]                                   a durable topic subscriber?
{code}

Obviously, this is a mistake as the ""durable"" option for the producer allows to change DeliveryMode of the message ('PERSISTENT' or 'NON-PERSISTENT')

Maybe, we should use 'persistent' as property name but then the build.xml file and java class need to be changed",Bug
AMQ-5180,12713573,,"Can the links on page http://activemq.apache.org/security.html be updated?
Much appreciated.

I'm trying to upgrade to 5.9.1 and noticed the jaasAuthenticationPlugin is enabled by default (in activemq-karaf). Need to understand how to modify the client-side to provide the required information.",Bug
AMQ-5199,12716303,,"http://activemq.apache.org/how-can-i-see-what-destinations-are-used.html

The links to the code no longer work. Thanks for adjusting!",Bug
AMQ-4583,12653163,,"The links to the code are no longer working.
For example:

http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/RedeliveryPolicy.java?view=markup

Similar problem with code links on page http://activemq.apache.org/message-redelivery-and-dlq-handling.html

Perhaps further pages are affected?",Bug
AMQ-4658,12660365,,"In the link 
http://activemq.apache.org/per-destination-policies.html describing policies advisoryForDelivery policy is called advisoryForDelivered, which should be called  advisoryForDelivery, as specified here 
http://activemq.apache.org/advisory-message.html",Bug
AMQ-4496,12645380,,"Error formatting macro: snippet: java.lang.IndexOutOfBoundsException: Index: 20, Size: 20

http://activemq.apache.org/how-do-i-use-ssl.html",Bug
AMQ-4380,12637437,,"The link to the pdf called 'FUSE Source ActiveMQ Persistence Guide' under the heading 'Other Resources' is dead on the following page http://activemq.apache.org/persistence.html

Hopefully someone has an idea about where the new link should be :)",Bug
AMQ-4329,12632893,,"Note: The KahaDB version of this test (AMQ2149KahaDBTest) is working correctly.

This test has two cases that fail, testQueueTransactionalOrderWithRestart, and testOrderWithRestart.  testQueueTransactionalOrderWithRestart fails after the server is restarted with the following exception


junit.framework.AssertionFailedError: queue://test.dest.0 received 6 expected 5681
        at junit.framework.Assert.fail(Assert.java:57)
        at junit.framework.TestCase.fail(TestCase.java:227)
        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:722)


The testOrderWithRestart case works correctly when run on it's own, and only fails if run after testQueueTransactionalOrderWithRestart with messages like the following:

2013-02-18 15:41:25,528 [ Session Task-1] - WARN  AMQ2149Test                    - queue://test.dest.0 received 6082 in msg: ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083 expected 0, l\
astId: null, message:ActiveMQTextMessage {commandId = 6087, responseRequired = true, messageId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1:6083, originalDestination = null, originalTran\
sactionId = null, producerId = ID:Kevins-MacBook-Pro.local-60920-1361220011508-5:1:1:1, destination = queue://test.dest.0, transactionId = null, expiration = 0, timestamp = 1361220082802, arrival = 0\
, brokerInTime = 1361220085522, brokerOutTime = 1361220085522, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId \
= null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@d3bf5f8, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {s\
eqNum=6082}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = 186704152740050035096258373992406547145203959...321183574477}
2013-02-18 15:41:25,528 [ Session Task-1] - ERROR AMQ2149Test                    - queue://test.dest.0 onMessage error
junit.framework.AssertionFailedError: queue://test.dest.0 received 6082 expected 0
        at junit.framework.Assert.fail(Assert.java:57)
        at junit.framework.TestCase.fail(TestCase.java:227)
        at org.apache.activemq.bugs.AMQ2149Test$Receiver.onMessage(AMQ2149Test.java:201)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1321)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:131)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:202)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:722)

It looks like messages send by testQueueTransactionalOrderWithRestart are not cleaned up when that test fails.
",Bug
AMQ-5052,12695161,,"DemandForwardingBridgeSupport#serviceRemoteConsumerAdvisory has a code:

            if (info.isBrowser()) {
                LOG.info(""{} Ignoring sub from {}, browsers explicitly suppressed"", configuration.getBrokerName(), remoteBrokerName);
                return;
            }

the original version is:

            if (info.isBrowser()) {
                if (LOG.isDebugEnabled()) {
                    LOG.info(configuration.getBrokerName() + "" Ignoring sub from "" + remoteBrokerName + "", browsers explicitly suppressed"");
                }
                return;
            }

New version code is noisy because broker always show info log when client browse message.
Please change code to:

            if (info.isBrowser()) {
                LOG.debug(""{} Ignoring sub from {}, browsers explicitly suppressed"", configuration.getBrokerName(), remoteBrokerName);
                return;
            }

Thanks",Bug
AMQ-5053,12695224,,"This happens fairly regularly on CI boxes, at least on AWS.  For some reason the producerConnection.close() in sendMessage occasionally takes just over 1000 ms, which means the message expires before the test has a chance to receive it.
",Bug
AMQ-5036,12694257,,"Just need to bump up the timeout.
",Bug
AMQ-4572,12650916,,the link to the config file at http://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/main/resources/META-INF/services/org/apache/activemq/store/jdbc/ is broken from http://activemq.apache.org/jdbc-support.html,Bug
AMQ-4437,12640769,,"When compiling the ActiveMQ trunk using Java 7, I get:

{quote}
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[31,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[133,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-stomp/src/test/java/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java:[192,20] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[30,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[19,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[73,3] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[84,3] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionTest.java:[98,2] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[216,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryTest.java:[251,20] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[112,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-pool/src/test/java/org/apache/activemq/pool/PooledConnectionFactoryMaximumActiveTest.java:[115,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[37,22] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQFailoverIssue.java:[95,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[114,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[165,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-spring/src/test/java/org/apache/activemq/usecases/AMQDeadlockTest3.java:[217,12] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-unit-tests/src/test/java/org/apache/activemq/network/NetworkLoopBackTest.java:[26,29] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-fileserver/src/test/java/org/apache/activemq/util/HttpBlobTest.java:[57,8] [deprecation] Assert in junit.framework has been deprecated
[WARNING] ~activemq/activemq-fileserver/src/test/java/org/apache/activemq/util/HttpBlobTest.java:[68,8] [deprecation] Assert in junit.framework has been deprecated
{quote}

This is probably something worth fixing...",Bug
AMQ-3302,12505925,,"http://camel.apache.org/maven/current/camel-activemq/apidocs/org/apache/camel/component/activemq/ActiveMQComponent.html#activeMQComponent(java.lang.String)

gives a 404,

link is on: http://camel.apache.org/activemq.html",Bug
AMQ-3311,12506650,,,Bug
AMQ-3783,12547929,,"The download page(s) fail to include any MD5 or SHA1 hashes.
One or both of these should be provided.

The page says:

bq. It is essential that you verify the integrity of the downloaded files using the PGP or MD5 signatures. 

This is slightly inaccurate. PGP is a signature whereas MD5 and SHA1 are hashes.
",Bug
AMQ-3943,12600164,,"Code follow.I connect to an ActiveMQ server's jmx feature.I confirm the jmx feature is enable,because the same code work well on orther blades.
    public static void main(String args[]) throws UnknownHostException, IOException
    {
        JMXServiceURL url = new JMXServiceURL(""service:jmx:rmi:///jndi/rmi://128.128.17.1:2011/jmxrmi"");
        String username = ""guest"";

        String password = ""guest"";

        Map env = new HashMap();
        String[] credentials = new String[] { username, password };
        env.put(JMXConnector.CREDENTIALS, credentials);
        JMXConnector connector = JMXConnectorFactory.connect(url, env);
        connector.connect();
        connector.close();
    }
But in a blade,it throws exception :
Exception in thread ""main"" java.rmi.ConnectException: Connection refused to host: 127.0.0.1; nested exception is: 
	java.net.ConnectException: Connection refused
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:601)
	at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:198)
	at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:184)
	at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:110)
	at javax.management.remote.rmi.RMIServerImpl_Stub.newClient(Unknown Source)
	at javax.management.remote.rmi.RMIConnector.getConnection(RMIConnector.java:2327)
	at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:277)
	at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFactory.java:248)
	at SyntaxMain.main(SyntaxMain.java:24)
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:351)
	at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:213)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:200)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
	at java.net.Socket.connect(Socket.java:529)
	at java.net.Socket.connect(Socket.java:478)
	at java.net.Socket.<init>(Socket.java:375)
	at java.net.Socket.<init>(Socket.java:189)
	at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:22)
	at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:128)
	at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:595)
	... 8 more
In fact,I connect to the 128.128.17.1 ActiveMQ server's jmx feature,but it point me that refusing by 127.0.0.1.Have to say this make me blues.",Bug
AMQ-3763,12546117,,"The Failover Transport guide, http://activemq.apache.org/failover-transport-reference.html, has two api links in the middle which are broken.  It looks like the version is missing from them and I assume should be:

http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/org/apache/activemq/transport/TransportListener.html
http://activemq.apache.org/maven/5.5.0/activemq-core/apidocs/org/apache/activemq/spring/ActiveMQConnectionFactory.html

accordingly. 

Kindest regards, 
Susan
",Bug
AMQ-4525,12646623,,"There is a broken link on the How can I monitor the connection with the broker documentation page [1].  The link references addTransportListener() method on the ActiveMQConnection and points to http://activemq.apache.org/maven/activemq-core/apidocs/org/apache/activemq/ActiveMQConnection.html#addTransportListener(org.apache.activemq.transport.TransportListener) which returns a 404 Not Found Error. 

Can this link be updated to: http://activemq.apache.org/maven/apidocs/org/apache/activemq/ActiveMQConnection.html#addTransportListener(org.apache.activemq.transport.TransportListener)


[1] http://activemq.apache.org/how-can-i-monitor-the-connection-with-the-broker.html",Bug
AMQ-3584,12530906,,"I was looking at http://activemq.apache.org/activemq-performance-module-users-manual.html to see how well (or poorly) the http transport was over the tcp transport and I've run into some issues just following the instructions.

svn co http://svn.apache.org/repos/asf/activemq/sandbox/activemq-perftest/
cd activemq-perftest
mvn activemq-perf:broker -Durl=broker:tcp://localhost:61616

{noformat}
[INFO] Scanning for projects...
[ERROR] The build could not read 1 project -> [Help 1]
[ERROR]   
[ERROR]   The project org.apache.activemq:activemq-perftest:5.2-SNAPSHOT (/Users/jason/ws/reference/activemq-perftest/pom.xml) has 1 error
[ERROR]     Non-resolvable parent POM: Could not find artifact org.apache.activemq:activemq-parent:pom:5.2-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 22, column 13 -> [Help 2]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException
[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException
{noformat}

If I change the version to 5.5.1:

{noformat}
Index: pom.xml
===================================================================
--- pom.xml	(revision 1199413)
+++ pom.xml	(working copy)
@@ -22,7 +22,7 @@
    <parent>
        <artifactId>activemq-parent</artifactId>
        <groupId>org.apache.activemq</groupId>
-        <version>5.2-SNAPSHOT</version>
+        <version>5.5.1</version>
    </parent>

    <artifactId>activemq-perftest</artifactId>
{noformat}

mvn activemq-perf:broker -Durl=broker:tcp://localhost:61616

{noformat}
[INFO] Scanning for projects...
[WARNING] 
[WARNING] Some problems were encountered while building the effective model for org.apache.activemq:activemq-perftest:jar:5.5.1
[WARNING] 'build.plugins.plugin.version' for org.apache.activemq.tooling:maven-activemq-perf-plugin is missing. @ line 35, column 21
[WARNING] 'build.plugins.plugin.version' for org.apache.activemq.tooling:maven-activemq-memtest-plugin is missing. @ line 39, column 21
[WARNING] 
[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
[WARNING] 
[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
[WARNING] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Performance Test 5.5.1
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-activemq-perf-plugin:5.5.1:broker (default-cli) @ activemq-perftest ---
Java Runtime: Apple Inc. 1.6.0_26 /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home
 Heap sizes: current=83008k  free=60712k  max=517760k
   JVM args: -Xmx512m -XX:MaxPermSize=128m -Dclassworlds.conf=/Users/jason/tools/maven/maven3/bin/m2.conf -Dmaven.home=/Users/jason/tools/maven/maven3
ACTIVEMQ_HOME: /Users/jason/.m2/repository/org/apache/activemq/activemq-console
ACTIVEMQ_BASE: /Users/jason/.m2/repository/org/apache/activemq/activemq-console
Loading message broker from: broker:tcp://localhost:61616
SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Failed to execute main task. Reason: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
{noformat}

So I configured logback & upgraded slf4j:

{noformat}
Index: pom.xml
===================================================================
--- pom.xml	(revision 1199413)
+++ pom.xml	(working copy)
@@ -22,7 +22,7 @@
    <parent>
        <artifactId>activemq-parent</artifactId>
        <groupId>org.apache.activemq</groupId>
-        <version>5.2-SNAPSHOT</version>
+        <version>5.5.1</version>
    </parent>

    <artifactId>activemq-perftest</artifactId>
@@ -35,6 +35,18 @@
            <plugin>
                <groupId>org.apache.activemq.tooling</groupId>
                <artifactId>maven-activemq-perf-plugin</artifactId>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.slf4j</groupId>
+                        <artifactId>slf4j-api</artifactId>
+                        <version>1.6.2</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>ch.qos.logback</groupId>
+                        <artifactId>logback-classic</artifactId>
+                        <version>1.0.0</version>
+                    </dependency>
+                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.activemq.tooling</groupId>
{noformat}

... and now it seems to function.",Bug
AMQ-2855,12482552,,"Sending message to composite destination increment only CursorMemoryUsage on last destination

Consuming message from first destination decrease CursorMemoryUser on last destination.

",Bug
AMQ-977,12482021,,"in activemq-web/src/main/java/org/apache/activemq/web/MessageServletSupport.java, the following method is used to create a JMS Topic or Queue Destination. However, note that the topic:// and channel:// blocks both set is_topic=true, so effectively those two blocks do exactly the same thing:

protected Destination getDestination(WebClient client, HttpServletRequest request, String destinationName) throws JMSException {

        // TODO cache destinations ???
       
        boolean is_topic=defaultTopicFlag;
        if (destinationName.startsWith(""topic://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(8);
        }
        else if (destinationName.startsWith(""channel://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(10);
        }
        else
            is_topic=isTopic(request);
       
        if( destinationOptions!=null ) {
            destinationName += ""?"" + destinationOptions;
        }
       
        if (is_topic) {
            return client.getSession().createTopic(destinationName);
        }
        else {
            return client.getSession().createQueue(destinationName);
        }
    }
",Bug
AMQ-772,12481715,,"Build ships without activemq-web-4.0.jar, so WAR generated by ant task incomplete.  I had to add this myself.  Can you please add it to the release?",Bug
AMQ-2805,12482892,,"The page http://activemq.apache.org/javadocs.html links to the bad URL http://activemq.apache.org/cms/html/.

It should instead point to http://activemq.apache.org/cms/.

The page served by the erroneous URL looks like it's actually the target of a bad redirect within the CMS sub-pages.  You'll notice that any of the relative URL links keep returning the same page (as they are all bad URLs), whereas the page returned by the correct URL contains correct links for those pages.

See related issue https://issues.apache.org/activemq/browse/AMQCPP-299",Bug
AMQ-2404,12482882,,Perhaps the log level of these should be changed to warn?,Bug
AMQ-215,12481225,,"The method CompositeTransportChannel.start() should fire off a connected status event after completing the call to establishConnection().

need to change from:

    public void start() throws JMSException {
        if (started.commit(false, true)) {
            establishConnection(establishConnectionTimeout);
        }
    }

to

    public void start() throws JMSException {
        if (started.commit(false, true)) {
            establishConnection(establishConnectionTimeout);
            fireStatusEvent(new TransportStatusEvent(this,TransportStatusEvent.CONNECTED));
        }
    }
",Bug
AMQ-212,12481222,,"I found that the useAsyncSend parameter was being ignored if defined on the client connection.  The problem is that the PooledExecutor is only created if the the useAsyncSend member is true at construction time (default is false).  However the client library sets this parameter after construction.  To fix the problem modified  setUseAsyncSend() method from:

    public void setUseAsyncSend(boolean useAsyncSend) {
    	this.useAsyncSend = useAsyncSend;
    }

to

    public void setUseAsyncSend(boolean useAsyncSend) {
    	this.useAsyncSend = useAsyncSend;
        try {
            if (useAsyncSend) {
                executor = new PooledExecutor(new BoundedBuffer(1000), 1);
            } else if (executor != null) {
                stopExecutor(executor);
            }
        } catch (Exception e) {
            log.warn(""problem closing executor"", e);
        }
    }",Bug
AMQ-2586,12483224,,"The queue size metric for topics is currently not accurate.  It is also throwing off the broker total message count metric.  In the queue case this metric is always going up but never comes down.  Since there is no ""queue"" for topics it would be better if this metrics just reported 0.

An alternative solution would be to sum the number of messages in all the subscriptions attached to the topic.",Bug
AMQ-1613,12482359,,The net affect of this is that clients don't get reconnected within the inactivity monitor configured time.  They have to wait for the OS socket to notice the connection failure to reconnect.  This in effect is making the inactivity monitor in-effective for heavily used connections.,Bug
AMQ-1216,12481945,,"
 <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource""
destroy-method=""close"">
   <property name=""driverClassName""
value=""oracle.jdbc.driver.OracleDriver""/>
   <property name=""url"" value=""jdbc:oracle:thin:@dev.abc.com:1521:dev10g""/>
   <property name=""username"" value=""abc""/>
   <property name=""password"" value=""abc""/>
   <property name=""poolPreparedStatements"" value=""true""/>
 </bean>


org.springframework.jms.UncategorizedJmsException: Uncategorized exception
occured during JMS processing; nested exception is javax.jms.JMSException:
Failed to broker message: ID:abc2-2257-1175204828244-0:8:1:1:1 in container:
java.sql.SQLException: Data size bigger than max size for this type: 63268
Caused by:
javax.jms.JMSException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
       at
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1177)
       at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:356)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513)
       at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479)
       at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:469)
       at
com.abc.jump.jdm.service.jms.AsynchronousTaskManagerImpl.createDeploymentTasks(AsynchronousTaskManagerImpl.java:67)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.createDeploymentTasksAsynchronously(DeploymentTasksWizard.java:465)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.onFinish(DeploymentTasksWizard.java:424)
       at
com.abc.jump.process.view.wizard.WizardScreen.onNavigation(WizardScreen.java:504)
       at echopoint.WizardPane.fireOnNavigation(WizardPane.java:416)
       at echopoint.WizardPane.actionPerformed(WizardPane.java:292)
       at nextapp.echo.AbstractButton.fireActionPerformed(AbstractButton.java:256)
       at
nextapp.echo.AbstractButton$EventForwarder.actionPerformed(AbstractButton.java:135)
       at
nextapp.echo.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:98)
       at nextapp.echo.DefaultButtonModel.doAction(DefaultButtonModel.java:87)
       at nextapp.echo.AbstractButton.doAction(AbstractButton.java:245)
       at
nextapp.echoservlet.ui.AbstractButtonUI.clientAction(AbstractButtonUI.java:86)
       at echopoint.ui.PushButtonUI.clientAction(PushButtonUI.java:86)
       at
nextapp.echoservlet.ControllerInputProcessor.doAction(ControllerInputProcessor.java:157)
       at
nextapp.echoservlet.ControllerInputProcessor.<init>(ControllerInputProcessor.java:126)
       at
nextapp.echoservlet.ControllerInputProcessor.process(ControllerInputProcessor.java:54)
       at nextapp.echoservlet.Controller.service(Controller.java:609)
       at nextapp.echoservlet.Connection.process(Connection.java:459)
       at nextapp.echoservlet.EchoServer.process(EchoServer.java:314)
       at com.abc.jump.process.view.PortalServlet.process(PortalServlet.java:162)
       at nextapp.echoservlet.EchoServer.doPost(EchoServer.java:234)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.jump.process.view.web.filter.TemporaryAssetContentIntegrationFilter.doFilter(TemporaryAssetContentIntegrationFilter.java:76)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.view.util.ThreadLocalResourceFilter.doFilter(ThreadLocalResourceFilter.java:58)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:174)
       at
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.util.filter.AuditUserDetailsFilter.doFilter(AuditUserDetailsFilter.java:64)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
       at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
       at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
       at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
       at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
       at
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
       at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
       at
org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
       at
org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
       at
org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
       at
org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
       at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:74)
       at
org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:224)
       at
org.apache.activemq.store.memory.MemoryTransactionStore$1.addMessage(MemoryTransactionStore.java:117)
       at org.apache.activemq.broker.region.Queue.send(Queue.java:345)
       at
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:305)
       at
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:378)
       at
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:197)
       at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
       at
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
       at
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
       at
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:449)
       at
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
       at
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:258)
       at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:164)
       at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
       at
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
       at
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
       at
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
       at
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
       ... 1 more
Caused by: java.sql.SQLException: Data size bigger than max size for this
type: 63268
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:134)
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:179)
       at oracle.jdbc.ttc7.TTCItem.setArrayData(TTCItem.java:95)
       at
oracle.jdbc.dbaccess.DBDataSetImpl.setBytesBindItem(DBDataSetImpl.java:2413)
       at
oracle.jdbc.driver.OraclePreparedStatement.setItem(OraclePreparedStatement.java:1166)
       at
oracle.jdbc.driver.OraclePreparedStatement.setBytes(OraclePreparedStatement.java:2208)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.setBinaryData(DefaultJDBCAdapter.java:56)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:175)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:71)
       ... 19 more
--
View this message in context: http://www.nabble.com/Data-size-bigger-than-max-size-for-this-type-tf3489299s2354.html#a9744357",Bug
AMQ-651,12481600,,"Need to check to see if this is still valid against 4.x
See:
http://issues.apache.org/jira/browse/GERONIMO-1493",Bug
AMQ-289,12481133,,"org.activemq.test.RollbackTest has the test case from Deepak Nayal.

",Bug
AMQ-211,12481144,,"I found a problem with the use of the Reliable protocol.  If you list multiple servers and the connection to the initial fails, the reconnect process will not complete properly.  This is cause because of the firing order of status events.  In the TcpTransportChannel.doClose() method the call to onAsyncException() will cause the Reliable class to fire a status event for disconnected, then after establishing the connection to the next server it will fire a status event for reconnected.  Finally after control returns to the doClose() method another status event for disconnected is fired.  All of these events are received by the ActiveMQConnection.statusChanged() method and are interpreted to set the ActiveMQConnection.isTransportOK member.  With the series of events as listed above:

disconnected
reconnected
disconnected

you can see why the state of ActiveMQConnection.isTransportOK is incorrect after a reconnect.

I did not know if it were safe to actually remove the final fireStatusEvent() call from the TcpTransportChannel.doClose(), so did the next best thing.  I moved it up before the the call to onAsyncException() .  This changed the order of the events to:

disconnected
disconnected
reconnected

This fixed my problem, but I am not sure it is the proper fix.
",Bug
AMQ-2893,12483464,,"When installing FUSE HQ,  it was said in instructions that no DB is needed (built in included in HQ), but anyways, there is no such option:

Choose which software to install:
1: FUSE HQ Server
2: FUSE HQ Agent
You may enter multiple choices, separated by commas.
1
HQ server installation path [default '/opt/iona/fusehq-4.2.0.0-fuse']:

Enter the fully qualified domain name of the SMTP server that HQ will use to send email messages [default 'saenafuq20.europe.nokia.com']:

Choices:
        1: Oracle 10g/11g
        2: PostgreSQL
        3: MySQL Enterprise / Community Server 5.x*

        *Sign up for a MySQL Enterprise Trial subscription at http://www.mysql.com/trials/partner1569.

What backend database should the HQ server use? [default '1']:
",Bug
AMQ-2890,12483460,,"To reproduce: in webconsole, go to 'Queues', select a queue, then click on 'printable version':

javax.el.ELException: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.browse_jsp._jspx_meth_jms_forEachMessage_0(org.apache.jsp.browse_jsp:167)
        at org.apache.jsp.browse_jsp._jspService(org.apache.jsp.browse_jsp:100)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
...
Caused by: java.lang.IllegalArgumentException: No JMSDestination parameter specified
        at org.apache.activemq.web.DestinationFacade.getValidDestination(DestinationFacade.java:109)
        at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
        at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
        at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
",Bug
AMQ-1531,12482246,,"On this page[1], the hyperlink to the technical presentation at the top is dead, also the two hyperlinks that are aliased ""this example"" are also broken.  I can't fix it  because I don't know they should be replaced with.

[1] http://activemq.apache.org/visualisation.html",Bug
AMQ-1558,12482272,,See this thread for the patch : http://www.nabble.com/ActiveMQ-5%3A-install-as-windows-service-does-not-work-tp14947392s2354p14988331.html,Bug
AMQ-1261,12482000,,"I get this from the demo app when I go to the queue browser pages ...

java.lang.IllegalStateException: missing ConnectionFactory in QueueBrowserServlet
	at org.apache.activemq.web.QueueBrowseServlet.getConnectionFactory(QueueBrowseServlet.java:75)
	at org.apache.activemq.web.QueueBrowseServlet.getConnection(QueueBrowseServlet.java:63)
	at org.apache.activemq.web.QueueBrowseServlet.createSession(QueueBrowseServlet.java:158)
	at org.apache.activemq.web.QueueBrowseServlet.borrowSession(QueueBrowseServlet.java:140)
	at org.apache.activemq.web.QueueBrowseServlet.doGet(QueueBrowseServlet.java:89)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:467)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1075)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:47)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1066)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:185)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:715)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:402)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:285)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:469)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:791)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:358)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:365)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)",Bug
AMQ-334,12481572,,"A message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.  

For example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested
this with two scenarios: 
1)       Place an 'N' message in the queue, followed by an 'S'.  No
priority is assigned to the messages.  The consumer is able to receive
the 'S' message, even though the 'N' message is ahead of it in the
queue.  This is the behavior that we find logical.

2)       Place an 'N' message in the queue with a priority of 4,
 followed by an 'S' with a priority of 2.  Only difference from
scenario 1 is that priorities have been assigned to messages.  Now the
consumer cannot receive any messages ¡V it blocks until we add a
consumer that consumes the 'N' type message.  This behavior seems to be a bug. 
",Bug
AMQ-712,12481563,,"investigate possible bug on byte selector.   A test case would be helpful

http://www.nabble.com/Byte-selector-does-not-work-t1637922.html

",Bug
AMQ-299,12481038,,There seems to be memory leak regarding JMSStatsImpl class. It holds references to all connections (opened and closed). And because of following asociations - the reference tree grows huge. Simple test code just opening and closing connection causes memory usage to grow up to out of memory error.,Bug
AMQ-2701,12483429,,"I'm not sure if this issue should be reported here or in the Apache-Camel project.  Please let me know if I've logged it in the wrong place.  I have a drop folder used for testing called ""c:\esb\aaa"".  I have the route in the apache-activemq-5.3.0\webapps\camel\WEB-INF\applicationContext.xml file set up to route files from ""c:\esb\aaa"" to ""activemq:testQ"".  When I drop a file in the folder it appears to make it into the queue.  I see a camelLock file appear in the drop folder temporarily, but when it disappears the original file that I dropped remains and was not moved to the "".camel"" subfolder.  I can do the samething from my WindowsXP Laptop and it works, so I'm not sure what the problem is or how to track it down.  Here's my stacktrace:

org.apache.camel.component.file.GenericFileOperationFailedException: Cannot rename file: GenericFile[c:\esb\aaa\Test4.txt] to: GenericFile[c:\esb\aaa\.camel\Test4.txt]
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.renameFile(GenericFileRenameProcessStrategy.java:96)
	at org.apache.camel.component.file.strategy.GenericFileRenameProcessStrategy.commit(GenericFileRenameProcessStrategy.java:72)
	at org.apache.camel.component.file.GenericFileOnCompletion.processStrategyCommit(GenericFileOnCompletion.java:120)
	at org.apache.camel.component.file.GenericFileOnCompletion.onCompletion(GenericFileOnCompletion.java:82)
	at org.apache.camel.component.file.GenericFileOnCompletion.onComplete(GenericFileOnCompletion.java:50)
	at org.apache.camel.impl.DefaultUnitOfWork.done(DefaultUnitOfWork.java:115)
	at org.apache.camel.processor.UnitOfWorkProcessor.processNext(UnitOfWorkProcessor.java:60)
	at org.apache.camel.processor.DelegateProcessor.process(DelegateProcessor.java:48)
	at org.apache.camel.component.file.GenericFileConsumer.processExchange(GenericFileConsumer.java:198)
	at org.apache.camel.component.file.GenericFileConsumer.processBatch(GenericFileConsumer.java:120)
	at org.apache.camel.component.file.GenericFileConsumer.poll(GenericFileConsumer.java:93)
	at org.apache.camel.impl.ScheduledPollConsumer.run(ScheduledPollConsumer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)",Bug
AMQ-1496,12483439,,"Testing  ActiveMQ integrated in JBoss I found that the following doesn't work anymore:

<config-property-value>failover://(tcp://192.168.8.101:65001)?jms.prefetchPolicy.all=1000</config-property-value>

I got the following exception:

2007-11-16 15:08:50,734 ERROR [org.apache.activemq.ra.ActiveMQEndpointWorker] Endpoint connection to JMS broker failed: Could not create Transport. Reason: java.lang.IllegalArgumentException: Invalid connect parameters: {jms.prefetchPolicy.all=1000}
2007-11-16 15:08:50,734 ERROR [org.apache.activemq.ra.ActiveMQEndpointWorker] Endpoint will try to reconnect to the JMS broker in 30 seconds
",Bug
AMQ-752,12481653,,"all the various LICENSEs need to be appended into a single LICENSE and the notices consolidated.

Also we might want to...

* the MANIFEST lacks a Implementation-Vendor-Id. not reported harmful but is
in the spec. suggested value: org.apache.

* the MANIFEST lacks a Specification-Version but has an
Implementation-Version. suggested value 4.0.

* better if the source extracts into a directory with a different name from
the binary distribution. for example, incubator-activemq-src for the source
and incubator-activemq for the binary (say.

* i would prefer the binaries and distributions names to contain apache. for
example apache-incubator-activemq.",Bug
AMQ-587,12481626,,"Sometimes when creating a temporary topic I get:

Exception in thread ""tcp:///127.0.0.1:39442"" java.lang.ClassCastException: org.apache.activemq.command.ActiveMQTempTopic
        at org.apache.activemq.openwire.v1.DestinationInfoMarshaller.unmarshal(DestinationInfoMarshaller.java:67)
        at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:214)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:181)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:135)
        at java.lang.Thread.run(Thread.java:595)

This only seems to happen if I try to create a lot of temp topics in a lot of different threads at the same time.",Bug
AMQ-654,12481624,,"The organization url needs to be corrected as it is currently invalid.

The values for the siteAddress siteDirectory distributionSite and distributionDirectory need to be reviewed.

The mailing list information to need to be updated to point to the apache mailing lists

The mailing list archives could be updated to point to archives that Hiram has requested to be setup on Nabble.",Bug
AMQ-166,12481114,,"TransportChannelSupport have concurrent problem. Sometimes activemq warnning this message. --> ""No Packet found to match Receipt correlationId"". TransportChannelSupport's member field ""sessionList"" does not thread safe. How about change the field type from java.util.HashMap to java.util.Hashtable. 

And I have a question. 
How to know the pending message count in Queue or Topic in jms client application. How to use JMS management function.",Bug
AMQ-2689,12483109,,"After reading through ActiveMQ in Action and talking with bsnyder It appears that 

http://activemq.apache.org/connection-configuration-uri.html

and

http://activemq.apache.org/version-5-performance-tuning.html

have the wrongdefinition for alwaysSessionAsync. 

They say that by setting it to true a separate thread would NOT be used but the OPPOSITE is true.",Bug
AMQ-1697,12482469,,"I'm trying to set a redelivery policy in my activemq.xml config

       <policyEntry queue=""ABC.Queue1"">
               <redeliveryPolicy maximumRedeliveries=""-1"">
               </redeliveryPolicy>
            </policyEntry>

Unfortunately, activemq is complaining about the configuraiton

Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'policyEntry#c943d1' defined in class path resource [activemq.xml]: Initialization of bean failed; nested exception is org.springframework.beans.InvalidPropertyException: Invalid property 'redeliveryPolicy' of bean class [org.apache.activemq.broker.region.policy.PolicyEntry]: No property 'redeliveryPolicy' found
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:445)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:383)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:353)
        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)
        ... 42 more
Caused by: org.springframework.beans.InvalidPropertyException: Invalid property 'redeliveryPolicy' of bean class [org.apache.activemq.broker.region.policy.PolicyEntry]: No property 'redeliveryPolicy' found
        at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:377)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.convertForProperty(AbstractAutowireCapableBeanFactory.java:1211)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1177)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:940)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:437)
        ... 46 more
",Bug
AMQ-110,12481250,,"I am using a not transacted and auto-acknowledge queue.

I am using the <berkeleyDbPersistence/> adapter

The error message that I a reveiving is :

Could not delete sequenece number for: org.codehaus.activemq.service.MessageIdentity@7a86771e[id=ID:ev1.drivenow.com.au-50147-1097167695356-16132:0; sequenceNo=<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=8>] status: OperationStatus.NOTFOUND

Any pointers on how serious this error is - i.e. is the queue performing normally even though this message is being logged ?",Bug
AMQ-176,12481061,,,Bug
AMQ-2797,12482928,,"The KEYS file does not include A2F9E313 which was used to sign the 5.3.2 release.

Furthermore, the key A2F9E313 does not appear to be available from the pgp.mit.edu server.

This means that it is impossible to check the integrity of the release.

",Bug
AMQ-337,12481504,,"This is re-submission of bug AMQ-334, since the link to AMQ-334 is broken on Jira.
 
A message consumer will not receive message that matches its message selector definition, until all other messages with higher priority have been consumerd from the queue.

For example, say our messages have a property which can have one of two values - 'S' and 'N'. We have a queue where, at the moment, there is only one consumer, who is set up to consume only 'S' messages.  We've tested
this with two scenarios:
1)       Place an 'N' message in the queue, followed by an 'S'.  No
priority is assigned to the messages.  The consumer is able to receive
the 'S' message, even though the 'N' message is ahead of it in the
queue.  This is the behavior that we find logical.

2)       Place an 'N' message in the queue with a priority of 4,
 followed by an 'S' with a priority of 2.  Only difference from
scenario 1 is that priorities have been assigned to messages.  Now the
consumer cannot receive any messages ¡V it blocks until we add a
consumer that consumes the 'N' type message.  This behavior seems to be a bug.


--
This message is automatica",Bug
AMQ-2066,12481356,,"Hi,

I am doing a add in to atach to an application wich is runing in java 1.4.

The problem is that i can't compile my source becouse all bitecodes i found

wich has ActiveMQConnectionFactory is compiled in java 5.

Can you help?

thank you.",Bug
AMQ-193,12481174,,"In the class org.codehaus.activemq.management.JMSEndpointStatsImpl the following getter should be exposed to provide access to the throughput statistic as is possible for the others.

public TimeStatistic getMessageRateTime() {
    return messageRateTime;
}",Bug
AMQ-173,12481170,,"I am testing a setup where two brokers are networked in a site. This is done to provided but load balancing and high availablity.  However I have found a bug that prevents this configuration for both purposes.  In short if one of the broker fails for any length of time, the remain broker can never re-establish a proper link back to the restored broker.  The following steps to duplicate this problem.


Topology: 2 brokers
               broker1 port=61616, network channel=62626
               broker2 port=62626, network channel=61616
          1 consumer connects to 61616
			 1 producer connects to 62626
			 

Test procedure:

1) start broker1 and broker2
   log shows that both brokers establish network channels to the other
	
2) start consumer
	log for broker1 show client connection and forward of destination registration to broker2
	log for broker2 show receipt of destination registration
	 
3) start producer
   log for broker2 shows client connection and discconection when producer terminates
	log for broker1 shows forwarded messages for consumer received from broker2
	
4) stop broker2
   log for broker2 shows shutdown
	log for broker1 show broker2 disconnect, but also errors when trying to send keepalive
	
5) stop consumer

6) wait 2+ minutes, wait for ""NetworkChannel - stopped MetworkMessageBridge for destination:"" in broker1 log

7) start broker2
   log for broker1 shows establishment of network channel for broker2, but broker2 log does not corresponding broker1 network channel registration
	
8) start consumer
   log for broker 1 show error in attempt to establish NetworkMessageBridge for destination
	
9) start producter
   log for broker2 shows client connection and discconection when producer terminates
	log for broker1 shows NO forwarded messages",Bug
AMQ-226,12481185,,"Given the broker setup where:

1. A reliable/tcp NetworkChannel is defined with an extremely large value establishConnectionTimeout (allowing a never timeout case)
2. The target of the NetworkChannel is not available, so the channel never completes the initial setup.

Then attempt to stop the broker with a kill command.  (should be better way, maybe admin function)

The broker vm does not shutdown cleanly on linux as there is monitor lock conflict between the shutdown thread and the unfinished network channel thread.",Bug
AMQ-213,12481191,,"The TransportStatusEvent.toString() sometimes prints null for the connection information.  This happens when the remoteURI was provided to the event rather than a TransportChannel object.  The following replacement method will print a better message in these cases.

public String toString() {
    return ""Channel: "" + (transportChannel == null ? remoteURI.toString() : transportChannel.toString()) + "" has "" + getStatusAsString(channelStatus);
}
",Bug
AMQ-5562,12772074,,"If I send to a producer with:

        MessageProducer producer = session.createProducer( dest );
        producer.send( message );

That works and I receive the advisory.

However, if send like this:

        MessageProducer producer = session.createProducer( null );
        producer.send( dest, message );

The advisory isn’t raised.  I have a unit test to confirm that the message was delivered to the queue and that it fails to raise the advisory.

The problem is that the second method is about 5x faster than the first.  

I can certainly rewrite my code, but this could lead to bugs where code expects to receive the advisory notice but now there’s a back door to send messages without the advisory message meaning that you could break production code.

On the list, Timothy Bish noted:

> This is by design as the second case creates an anonymous producer that can send to any destination that it has permission to write to.  Sending that advisory every time an anonymous producer sent a message to a given destination would create a flood of advisories which would not really be of help.

However:

> I mean I can create the flood of advisories now anyway. I just have to manually create a non-anonymous producer and it would then send the same number of advisories.

> Now it’s just slower and you’ve put a burden on me to maintain an LRU cache and expiry so that I can have reasonable performance :-(

I think this is a bug.  If you're experiencing floods you can always turn off advisories or be more specific in which queues you would like notifications about.",Bug
AMQ-7011,13172266,,"Activemq 5.15.4 Stomp protocol allowed to enter deadlock via dispatch sync.

Scenario:

Stomp client setting the following:
header.put(""id"", subId);
header.put(""activemq.dispatchAsync"", ""false"");

The setup of locks between TopicSubscription and MutexTransport while using Stomp in sync mode can result in a Deadlock as found below (Add and Destroy calls processing), each lock is identified by a + or * to show lock order in each stack trace.

  Found one Java-level deadlock:
=============================
""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613"":
  waiting to lock monitor 0x00007f9c565d4d28 (object 0x00000007acc44708, a java.lang.Object),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613""
""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613"":
  waiting for ownable synchronizer 0x00000007ac872730, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613""
Java stack information for the threads listed above:
===================================================
""ActiveMQ Transport: tcp:///127.0.0.1:58303@61613"":
++++++  at org.apache.activemq.broker.region.TopicSubscription.destroy(TopicSubscription.java:757)
    - waiting to lock <0x00000007acc44708> (a java.lang.Object)
    at org.apache.activemq.broker.region.AbstractRegion.destroySubscription(AbstractRegion.java:488)
    at org.apache.activemq.broker.jmx.ManagedTopicRegion.destroySubscription(ManagedTopicRegion.java:52)
    at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:480)
    at org.apache.activemq.broker.region.TopicRegion.removeConsumer(TopicRegion.java:206)
    at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:429)
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer(ManagedRegionBroker.java:258)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:352)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:139)
    at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:729)
    at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:768)
    at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:879)
    - locked <0x00000007ac999f00> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
    at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:73)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)
*****   at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
    at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:202)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompDisconnect(ProtocolConverter.java:838)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:267)
    at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:748)
""ActiveMQ Transport: tcp:///127.0.0.1:58302@61613"":
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for  <0x00000007ac872730> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
*****   at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)
    at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1486)
    at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:971)
    at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:927)
    at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:715)
+++++   at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:121)
    - locked <0x00000007acc44708> (a java.lang.Object)
    at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:48)
    at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:775)
    at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:556)
    - locked <0x00000007acbd4e08> (a org.apache.activemq.broker.region.Topic)
    at org.apache.activemq.broker.region.Topic.send(Topic.java:484)
    at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:505)
    at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:459)
    at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:293)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
    at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:293)
    at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:154)
    at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:572)
    at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)
    at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)
    at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)
    at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)
    at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)
    at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:97)
    at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:202)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:345)
    at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:248)
    at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:85)
    at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
    at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)
    at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)
    at java.lang.Thread.run(Thread.java:748)


In reviewing how MQTT and AMQP were handled, both set ""consumerInfo.setDispatchAsync(true);""

AMQPSession line 376
MQTTDefualtSubscriptionStrategy line 61

For MQTT fix see the below cards:

ENTMQ-1504
https://issues.jboss.org/browse/ENTMQ-1504?_sscc=t

AMQ-5290
https://issues.apache.org/jira/browse/AMQ-5290 https://github.com/apache/activemq/blame/master/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/strategy/MQTTDefaultSubscriptionStrategy.java#L61 

I believe we can fix this for Stomp in ProtocolConverter, line 614, by also setting consumerInfo.setDispatchAsync(true); This would bring Stomp into alignment with the other protocols and how they were fixed.

I'll be providing a patch with the above change shortly.",Bug
AMQ-3767,12546464,,"The following typos should be corrected at the following link: http://activemq.apache.org/activemq-message-properties.html

JMSType description should contain the value ""user defined""
JMSMessageID description should contain the value ""unique identifier for the message""
JMSRedelivered has the values shift over a column



",Bug
